{ Core Feed the Future ZOI Survey }
{ Authors: Mario Vaisman, Genevieve Dupuis }
{ Last update: June 14, 2019 }

PROC GLOBAL

numeric	maxpersrecs, maxanthrorecs, maxkids, maxwomen, minagediff, minagehdsp, minageelig, minagedm, stopcheck;
numeric endinginterview, flowbuttonptr, hhbuttonptr, exitbutton, maxrec, maxcrop, maxfarmer, maxplots, maxvcc;
numeric maxnummods = 23; { !! TO DO - modify according to the total number of possible modules, mostly varies depending on VCCs }
numeric ss, dd, mm, yy, di, ldb, udb, t, lati, longi, accu, agediff, lat, long, cur;
numeric	n, moveflow, lrc, i, j, k, oldval, time, ii, x, doloop, ok, amount;
numeric xintnum, xsupnum, xmodco, xrevisit, xmodify, xpartial, xhhnum, xeanum, xfrom; 
numeric	totlen, aok, alphsize, xchild, nextmem, col, xwoman, line, xcrop, xfarmer, xplots, roster;
  
alpha(60) wothresp, vcc, units; 
alpha(26) notalpha, alphabet, alphaentry; 
alpha(20) smodsleft;  							{ used to help w/ validation of dec_mod selection }
alpha(100) string100; 							{ for use in the HH rosters to pass in the text string }
alpha(8) plotA, plotB, plotC;

array codes(50);               					{ to store HH member line numbers to use in conjuction with SetValueSet }
array v_m5(30,3);			

array alpha(50) labels(50);    					{ to store HH member names to use in conjuction with SetValueSet }
array alpha(2) amodsremainvals(maxnummods);     { stores the letters (A, B, C, etc) representing the various modules }
array alpha(35) amodsremainlabels(maxnummods);  { stores the full name of the modules }

string yhhnum, yeanum, c_i, c_j, name, namecar, name1, name2, head;


	{ adjust dates based on age }
	function ndjlba(lowera,uppera,lowerb,upperb,agetofit)
	  { calculate new possible lower bound for a = lower bound of b - age - 12 months }
	  x = lowerb - 12 * (agetofit + 1);
	  { if new lower bound > upper bound then we have an inconsistency }
	  if x > uppera then
	    x = -1
	  else
	    { if new lower bound is less than upper bound, change new lower bound to be lower bound of b - age - 11 months }
	    if x < uppera then
	      x = x + 1
	    endif;
	    { if new lower bound is less than old lower bound for a, leave with old value }
	    if lowera > x then
	      x = lowera
	    endif
	  endif;
	  { return value of lower bound of a }
	  ndjlba = x
	end;

  { convert notappl to zero }
  function NAtoZero( xvar );
    if xvar in notappl,missing,default then
      xvar = 0
    endif;
    NAtoZero = xvar;
  end;

  { function to check barcode for HIV }
  { barcode follows pattern: letter,digit,letter,digit,letter }
  { return: 0-No errors, 1-error in missing, 2-error in code, 3-error in check digit }
  function BarCodeError( alpha(5) xbarcode )
     numeric isOK = 0, checkdig = 0, base = 26, z;
    { check sequence of characters }
    if !xbarcode in "99994":"99996" then
      if pos("?",xbarcode) & length(strip(xbarcode)) <> 1 then
        isOK = 1;
      elseif !pos("?",xbarcode) then
        do k = 1 until k > 5 by 2
          z = pos( xbarcode[k:1], "ABCDEFGHIJKLMNOPQRSTUVWXYZ" );
          if !z then
            isOK = 1;
            break;
          elseif k < 5 then
            checkdig = checkdig + z-1;
          endif;
          if k < 5 then
            z = pos( xbarcode[k+1:1], "0123456789" );
            if !z then
              isOK = 2;
              break;
            else
              checkdig = checkdig + z-1;
            endif;
          endif;
        enddo;
        { Now validate the check digit }
        if !isOK then
          while checkdig >= base do
            checkdig = int(checkdig/base)+checkdig%base;
          enddo;
          if xbarcode[5:1] <> "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[checkdig+1:1] then
            isOK = 3;
          endif;
        endif;
      endif;
    endif;
    BarCodeError = isOK;
  end;

{ valid value in a two digits variable }
function valid( xvar );
  valid = ( !special(xvar) & xvar <= 96 )
end;

{ valid value in a four digits digits year }
function validyr( xvar );
  validyr = ( !special(xvar) & xvar <= 9996 )
end;

{ outcome variable construction }
function outcome( xvar, yvar );
	recode xvar -> yvar;
			 1   ->  1;
			 2   ->  5;
			 3   ->  4;
			 4   -> 10;
			 6   -> 96;
	endrecode;

end;


{ Move to flow section }	
function movetoflow()
  if getsymbol()[1:2] in "AH","V1","Q2","V2" then
	advance GOTO;
  else
    savepartial();
    reenter GOTO;
  endif;
end;

function savedata()
  savepartial();
end;

function stopinterview2( );
  {ENG+} if accept("Stop interview immediately?", "Yes", "No") = 1 then	{+ENG}
  {{FR+} if accept("Arrêter l'entretien immédiatement?", "Oui", "Non") = 1 then	{+FR}}
    i = 1;
  else
	i = 0;
  endif;  
  if i = 1 then
	savepartial();
    if xfrom = 0 then
	  execpff("Interviewer.pff",stop);
    else
	  execpff("Supervisor.pff",stop);
	  stop(1);
    endif;	
  endif;
end;


function userbase();
  userbar( clear );
  {ENG+} userbar( add button, "Module Menu", movetoflow());	{+ENG}
  {ENG+} userbar( add button, "Switch Language", do("ChangeLanguage") );	{+ENG}
  {ENG+} userbar( add button, "Save Data (partial)", savedata() );	{+ENG}
  {ENG+} exitbutton = userbar( add button, "Exit interview", stopInterview2( ) ); 	{+ENG}
  {{FR+} userbar( add button, "Menu du module", movetoflow());	{+FR}}	
  {{FR+} userbar( add button, "Changer de langue", do("Changerdelangue") );	{+FR}}
  {{FR+} userbar( add button, "Sauvergarde partielle", savedata() );	{+FR}}
  {{FR+} exitbutton = userbar( add button, "Quitter l'entretien", stopInterview2( ) ); 	{+FR}}
end;

{ function to ensure proper entry and updating of "Other" answers }
function getother( alpha(8) questnum, questocc );
  { Create alpha id for other answers file }
  OTHID   = concat(edit("999",HHEA), edit("999",HHNUM));
  OTHQUES = questnum;   { question number }
  OTHOCC  = questocc;   { occurrence for multiple section/group or multipart question }
  { Get the previous response back if already entered in case of backtabbing or updating }
  if !loadcase(OTHERS,OTHID,OTHQUES,OTHOCC) then
    { Otherwise initialize to blanks }
	OTHRESP = " ";
  endif;
  wothresp = OTHRESP;
end;

{ collect GPS coordinates }
function getgps();
  getgps = 0;
  GPSID = concat(edit("999",HHEA), edit("999",HHNUM));
  if !loadcase(HH_GPS,GPSID) then
    { Otherwise initialize to zero }
	AHLATITUDE = 0;
	AHLONGITUDE = 0;
  endif;
  lati = AHLATITUDE;
  longi = AHLONGITUDE;
  i = 0;
  j = 0;
  lrc = 0;
  if AHLATITUDE in 0,notappl & AHLONGITUDE in 0,notappl then
	  while lrc = 0 do
		lrc = gps(open);
		if lrc = 0 then
		  errmsg(00005); 
		  inc(i);
		else
		  {ENG+} lrc = gps(read,60,"Cancel the reading process");	{+ENG}
		  {{FR+} lrc = gps(read,60,"Annuler le processus de lecture du GPS");	{+FR}}
		  if lrc = 0 then
		    errmsg(00006);
			gps(close);
			inc(i);
		  else
			if gps(satellites) = DEFAULT then
			  errmsg(00006);
			  gps(close);
			  inc(i);
			else
			  lat = tonumber(edit("ZZZ9.99999",gps(latitude)));
			  long = tonumber(edit("ZZZ9.99999",gps(longitude)));
			  accu = tonumber(edit("99999999",gps(accuracy)));
			  gps(close);
			  errmsg(00007);
			endif;
		  endif;
		endif;
		if lrc = 0 and i > 2 | gps(satellites) = default then
		  j = 0;
		  while j = 0 do
			{ENG+} j = accept("Do you want to try again?","Yes","No");	{+ENG}
			{{FR+} j = accept("Voulez-vous réessayer?", "Oui", "Non");	{+FR}}
		  enddo;
		  if j > 1 then
			break;
		  endif;
		endif;
	  enddo;
	  if j = 0 then 
	    AHLATITUDE = lat;
		AHLONGITUDE = long;
	  endif;
      getgps = 1;      
  endif;
end;
  
function en_ask_reason(reason_group,alpha(40) module_name,alpha(5) var_name);
  if reason_group = 1 then
	while 1 do
	
	{ENG+} 
	  ii = accept(concat("Enter reason ",strip(module_name)," is not complete"),
				"Respondent not available",
				"Refused",
				"Household member to ill to respond",
				"Other reason");
	  	{+ENG}
	  {{FR+} 
	  ii = accept(concat("Entrez la raison pour laquelle ",strip(module_name)," n'est pas complet"),
				"Répondant non disponible",
				"Refusé",
				"Membre du ménage trop malade pour répondre",
				"Autre à préciser");
	  	{+FR}}	
	  	  	
	  if ii = 1 then
	    en_ask_reason = 4;
		break;
	  elseif ii = 2 then
		en_ask_reason = 5;
		break;
	  elseif ii = 3 then
		en_ask_reason = 10;
		break;
	  elseif ii = 4 then
		en_ask_reason = 96;
		getother( strip(var_name), 0 );
		break;
	  endif;
	enddo;
  elseif reason_group = 2 then
	while 1 do
	  {ENG+} 
	  ii = accept(concat("Enter reason ",strip(module_name)," is not complete"),
				"Respondent not available",
				"Refused",
				"Household member to ill to respond",
				"Other reason");
		{+ENG}
	  {{FR+} 
	  ii = accept(concat("Entrez la raison pour laquelle ",strip(module_name)," n'est pas complet"),
				"Répondant non disponible",
				"Refusé",
				"Membre du ménage trop malade pour répondre",
				"Autre à préciser");
	  	{+FR}}				
	  if ii = 1 then
	    en_ask_reason = 4;
		break;
	  elseif ii = 2 then
		en_ask_reason = 5;
		break;
	  elseif ii = 3 then
		en_ask_reason = 10;
		break;
	  elseif ii = 4 then
		en_ask_reason = 96;
	    getother( strip(var_name), i );
	    break;
	  endif;
	enddo;
  endif;
end;
  
function clean_labels();
  do i = 0 while i <= maxpersrecs
    codes(i)  = notappl;
    labels(i) = "";
  enddo;
end;

{ display the HH roster }
function showhh()
   {ENG+}  show( MOD_1, M1_LINE, V101, V102, V103, V104, VCONSENT 
        title( "Member", "Name", "Sex", "Relationship", "Age", "Consent" ) ); 
    	{+ENG}    
   {{FR+}  show( MOD_1, M1_LINE, V101, V102, V103, V104, VCONSENT 
        title( "Ligne", "Nom", "Sexe", "Parenté", "Age", "Consentement" ) ); 
    	{+FR}}         
        
end;

{ close the interview }
function endmess();
  { Returns true if response is end of interview }
  {ENG+}   endmess = (accept("", "End of interview, return to main menu", "Continue interview") = 1); 	{+ENG}
  {{FR+}   endmess = (accept("", "Fin de l'entretien, retour au menu principal", "Continuer l'entretien") = 1); {+FR}}
end;

{ check if it ready to exit }
function ok2exit();
  if ( SS_3 in "DONE","N/A" ) and 
	 ( SS_4 in "DONE","N/A" | AHWOMEN = 0 ) and ( SS_4A in "DONE","N/A" ) and 
	 ( SS_5 in "DONE","N/A" | AHKIDS = 0 ) and ( SS_5A in "DONE","N/A" | AHKIDS = 0 ) and 
	 ( SS_6F in "DONE","N/A" ) and ( SS_6M in "DONE","N/A" ) and 
	 ( SS_71 in "DONE","N/A" ) and ( SS_72 in "DONE","N/A" ) and ( SS_73 in "DONE","N/A") and
	 ( SS_74 in "DONE","N/A" ) and ( SS_75 in "DONE","N/A" ) and ( SS_76 in "DONE","N/A") and
	 ( SS_77 in "DONE","N/A" ) and ( SS_750 in "DONE","N/A" ) and ( SS_780 in "DONE","N/A") and
	 ( SS_791 in "DONE","N/A" ) and ( SS_792 in "DONE","N/A" ) and ( SS_796 in "DONE","N/A") and
	 ( SS_8 in "DONE","N/A" ) then 
      ok2exit=1;
  else
{ If there are at least 3 visits, then ask if there will be additional visits - if no, check the outcomes 
  for each module. For applicable and incomplete modules, interviewer should provide reason/result code. }
	if AHTOTVISITS >= 3 then
	  i = accept(concat("After ",edit("9",AHTOTVISITS)," visits, there are incomplete modules. ",
			            "Are additional visits planned to complete remaining modules?"), "Yes","No");
	 {{FR+}
	  i = accept(concat("Après ",edit("9",AHTOTVISITS)," de visites, il y a des modules incomplets. ",
			            "Des visites supplémentaires sont-elles prévues pour compléter les modules restants?"), "Oui","Non");
	  {+FR}}
	  if i = 1 then
	    ok2exit = 0;
	  else
	    if SS_3 = "OPEN" then
		  {ENG+} V366 = en_ask_reason(1,"Module 3 - Food Security","V366");	{+ENG}
		  {{FR+} V366 = en_ask_reason(1,"Module 3 - Sécurité alimentaire","V366");	{+FR}}
		endif;
		if SS_4 = "OPEN" & AHWOMEN > 0 then
		  for i in MOD_4000 do 
		    if !V433(i) then
		      {ENG+} V433(i) = en_ask_reason(2,concat("Module 4 - Women Nutrition/Anthro - ", strip(V101(V400D(i))) ),"V433");	{+ENG}
		      {{FR+} V433(i) = en_ask_reason(2,concat("Module 4 - Nutrition des femmes / Anthro - ", strip(V101(V400D(i))) ) ,"V433");	{+FR}}
			endif;
		  enddo;
		endif;
		if SS_5 = "OPEN" & ahkids > 0 then
		  for i in MOD_5000 do 
		    if !V566(i) then
  		  {ENG+} V566(i) = en_ask_reason(2,concat("Module 5 - Children Nutrition/Anthro - ", strip(V101(V500D(i))) ),"V566");	{+ENG}
  		  {{FR+} V566(i) = en_ask_reason(2,concat("Module 5 - Nutrition des enfants / Anthro - ", strip(V101(V500D(i))) ),"V566");	{+FR}}
			endif;
		  enddo;
		endif;
		if SS_6F = "OPEN" then
		  {ENG+} V6605 = en_ask_reason(1,"Module 6F - WEAI (female)","V6605");	{+ENG}
		  {{FR+} V6605 = en_ask_reason(1,"Module 6F - WEAI (femme)","V6605");	{+FR}}
		endif;
		if SS_6M = "OPEN" then
		  {ENG+} M6605 = en_ask_reason(1,"Module 6M - WEAI (male)","M6605");	{+ENG}
		  {{FR+} M6605 = en_ask_reason(1,"Module 6M - WEAI (homme)","M6605");	{+FR}}
		endif;
		if SS_790 = "OPEN" then
		  for i in MOD_790000 do 
		    {ENG+}  V79001 = en_ask_reason(1,"Module 7.90 - Land Map","V79001"); 	{+ENG}
		    {{FR+}  V79001 = en_ask_reason(1,"Module 7.90 - Cartographie du terrain","V79001"); 	{+FR}}
		  enddo;
		endif;
		if SS_71 = "OPEN" then
		  for i in MOD_71000 do 
		    {ENG+}  V7134 = en_ask_reason(1,"Module 7.1 - Maize","V7134"); 	{+ENG}
		    {{FR+}  V7134 = en_ask_reason(1,"Module 7.1 - Maïs","V7134"); 	{+FR}}
		  enddo;
		endif;
		if SS_72 = "OPEN" then
		  for i in MOD_72000 do 
		    {ENG+} V7235 = en_ask_reason(1,"Module 7.2 - Common Bean","V7235"); 	{+ENG}
		  enddo;
		endif;
		if SS_73 = "OPEN" then
		  for i in MOD_73000 do 
		    {ENG+} V7327 = en_ask_reason(1,"Module 7.3 - Coffee","V7327"); 	{+ENG}
		  enddo;
		endif;
		if SS_74 = "OPEN" then
		  for i in MOD_74000 do 
		    {ENG+} V7434 = en_ask_reason(1,"Module 7.4 - Groundnut","V7434"); 	{+ENG}
		  enddo;
		endif;
		if SS_75 = "OPEN" then
		  for i in MOD_75000 do 
		    {ENG+} V7534 = en_ask_reason(1,"Module 7.5 - Wheat","V7534"); 	{+ENG}
		  enddo;
		endif;
		if SS_76 = "OPEN" then
		  for i in MOD_76000 do 
		    {ENG+} V7634 = en_ask_reason(1,"Module 7.6 - Soybean","V7634"); 	{+ENG}
		  enddo;
		endif;
		if SS_77 = "OPEN" then
		  for i in MOD_77000 do 
		    {ENG+} V7734 = en_ask_reason(1,"Module 7.7 - Paddy Rice","V7734"); 	{+ENG}
		  enddo;
		endif;
		if SS_750 = "OPEN" then
		  for i in MOD_750000 do 
		    {ENG+} V75052 = en_ask_reason(1,"Module 7.50 - Dairy Cows","V75053"); 	{+ENG}
		  enddo;
		endif;
		if SS_780 = "OPEN" then
		  for i in MOD_780000 do 
		    {ENG+} V78029 = en_ask_reason(1,"Module 7.80 - Fish Aquaculture","V78030"); 	{+ENG}
		  enddo;
		endif;
		if SS_791 = "OPEN" then
		  for i in MOD_791 do 
		    {ENG+} V79111 = en_ask_reason(1,"Module 7.91 - Plot Area","V79111"); 	{+ENG}
		    {{FR+} V79111 = en_ask_reason(1,"Module 7.91 - Surface du terrain","V79111"); 	{+FR}}
		  enddo;
		endif;
		if SS_792 = "OPEN" then
		  for i in MOD_792 do 
		    {ENG+} V79206 = en_ask_reason(1,"Module 7.92 - Crop Yield","V79206"); 	{+ENG}
		    {{FR+} V79206 = en_ask_reason(1,"Module 7.92 - Le rendement des cultures","V79206"); 	{+FR}}
		  enddo;
		endif;
		if SS_796 = "OPEN" then
		  for i in MOD_796000 do 
		    {ENG+} V79607 = en_ask_reason(1,"Module 7.96 - Pond Area","V79607"); 	{+ENG}
		  enddo;
		endif;
		if SS_8 = "OPEN" then
		  {ENG+} V8709 = en_ask_reason(1,"Module 8 - Consumption Expenditures","V8709");	{+ENG}
		  {{FR+} V8709 = en_ask_reason(1,"Module 8 - Dépenses de consommation","V8709");	{+FR}}
	    endif;
	    ok2exit = 1;
	  endif;
	else
	  ok2exit=0;
	endif;
    errmsg( 00008, SS_3, SS_4, SS_4A, SS_5, SS_5A, SS_6F, SS_6M, SS_8, SS_790, SS_791, SS_792 );
    errmsg( 00009, SS_71, SS_72, SS_73, SS_74, SS_75, SS_76, SS_77, SS_750, SS_780, SS_796 );
  endif;
end;

{ clear module statuses }
function clean_modlabels();
  do i = 0 while i <= maxnummods
    amodsremainvals  (i) = "";
    amodsremainlabels(i) = "";
  enddo;
end;

{ stop interview immediately }
function stopinterview( );
  {ENG+} if accept("Stop interview immediately?", "Yes", "No") = 1 then	{+ENG}
  {{FR+} if accept("Arrêter l'entretien immédiatement?", "Oui", "Non") = 1 then	{+FR}}
    i = 1;
  else
	i = 0;
  endif;  
  if i = 1 then
	savepartial();
	move to FLOW_CONTROL advance;
  endif;
end;


{ check entry of alpha string variables }
function alphachk( alpha(30) alphavar, alphlen, alpha(10) tail );
  { alphavar: the actual string to be checked }
  { alphlen: length of first consecutive part for the field, e.g. A-G is 7 }
  { tail: the last characters in the valid string }
  
  alphaentry = alphabet[1:alphlen]; { string of acceptable values }
  alphaentry = concat( strip(alphaentry), strip(tail) );
  totlen = length( strip(alphaentry) );
  aok = 0; { aok = 0 - string is bad, aok = 1 - string is good }     
  alphsize = length( strip(alphavar) );

  if alphsize then   
    { check for "?" as only character }
    aok = (alphavar[1:1] = "?" & alphsize = 1);
    if !aok then     { if not a single "?", check string }
      aok = 1;       { now assume string is good until we know otherwise }
      i = 1;         { i is position in string of acceptable values }
      x = 1;         { x is position in input string }
      { loop while the string is still good and there are more letters }
      while aok & x <= alphsize do
        aok = pos( alphavar[x:1], alphaentry[i:totlen-i+1] );
        if aok then     { letter is acceptable }
          i = i + aok;  { increment i to position after letter in string of acceptable values }
          x = x + 1     { increment x to next letter in input string }
        endif;
      enddo;
    endif;
  endif;
  alphachk = (!aok);    { alphachk = 0 - if string is good, = 1 - if string is bad }
end;

{ record data from record M4 }
function complete_v_m5();
{ Temporary variables to record data of previous records
  when exit interview skips to a module, all modules in between exit interview and the selected module
  are not available because the system skips the the selected module, then the required data from those 
  module which are in between have to be copied to an array to have it available }
  do varying i=1 until i > AHKIDS
    v_M5(i,1) = visualvalue(V500F(i));
	v_M5(i,2) = visualvalue(V501(i));
	v_M5(i,3) = visualvalue(V508(i));
  enddo;
end;

{ check date }
function dcheck(v_year,v_month,v_day)  
  i = datevalid( v_year*10000 + v_month*100 + v_day );
  if i = 1 then
    if ( v_year*10000 + v_month*100 + v_day ) > sysdate("YYYYMMDD") then
	  i = 2;
	endif;
  endif;
  dcheck = i;
end;


  { stop funtion } 
  function OnStop(); 
    savepartial();
    if stopcheck = 1 then
      reenter GOTO;       
    else
       i = accept("Do you want to stop and return to the menu?",      
                 "No, continue",
                 "Go to module menu",
                 "Yes, partial save and exit");
       if i = 3 then
          savepartial();  
	      StopInterview();
	   elseif i = 2 then
	     if getsymbol() = "GOTO" then
	       reenter; 
	     else
	       advance GOTO; 
	     endif;
	   else 	
         reenter;    
       endif;
    endif   
  end;

  

PROC CFTF_FF
preproc
{ check time on tablets is set properly }
  ss = sysdate("yyyymmdd");
  dd = ss - 100*( int(ss/100) );
  ss = int((ss-dd)/100);
  mm = ss - 100*( int(ss/100) );		
  yy = int((ss-mm)/100);
  if cmcode(mm,yy) < cmcode(1,2018) then  { !! TO DO - adjust time comparison to date prior to tablet pretest }
	errmsg( 00003, dd, mm, yy );
	endlevel;
  endif;

{ set valid alphabet chars }
  alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  notalpha = "1234567890-=`!@#$%^&*()_+{}[]|\:;'<,>.?/";
  notalpha = concat( notalpha, '"' );
  notalpha = concat( notalpha , alphabet );

{ set language - default is English - language of interview will be set in AHLANGI }
  setlanguage("ENG");
  setvaluesets("_VS1");   
  
{ Set the applications minimum and maximum parameters }
  maxpersrecs     = 50;	 { maximum number of household members allowed }
  maxanthrorecs   = 15;  { maximum number of entries for the anthropometry block }
  maxwomen        = 15;  { maximum number of records for Module 4 }
  maxkids         = 15;  { maximum number children allowed for Module 5--this must be same as # allowed dcf recs }
  minagediff      = 12;  { minimum age difference between a parent and their child } 
  minagehdsp	  = 15;  { minimum age to be a head/spouse }
  minageelig 	  = 15;  { minimum age of eligibility for any module }
  minagedm 		  = 18;  { minimum age of primary male/female decisionmaker }
  endinginterview = 0;
  flowbuttonptr   = 0; 
  hhbuttonptr 	  = 0;
  maxrec 		  = 15; 
  maxcrop		  = 12;
  maxplots        = 15; 
  maxfarmer		  = 6;
  maxvcc		  = 4;  
  stopcheck       = 0;  { marker for location in QRE in case of use of 'back arrow' }
  
  
{ file parameters (from interviewer menu) conversion  }  
  xeanum   = tonumber( sysparm()[1:3] );  { cluster number }
  xhhnum   = tonumber( sysparm()[4:3] );  { household number }
  xintnum  = tonumber( sysparm()[7:3] );  { interviewer number }
  xrevisit = tonumber( sysparm()[10:1] ); { revisit HH }
  xsupnum  = tonumber( sysparm()[11:3] ); { supervisor number }
  xfrom	   = tonumber( sysparm()[14:1] ); { 0 - user is interviewer, 1 - user is supervisor, 2 - user is cental office }

  yeanum   = edit("999",xeanum);		  { cluster number with leading 0's }
  yhhnum   = edit("999",xhhnum);	 	  { household number with leading 0's }	  
  if xfrom = 2 then 
    yhhnum = edit("999",HHNUM); 
  endif;

{ delete the application.pff to avoid direct calls to this application }
  filedelete(".\application.pff");

  if !xmodco then      { central office doesn't have to exit after reviewing one HH }
    set behavior() exit on;
  endif;


{ set up minimal user bar }
  userbase();
  userbar( show );

postproc
  if xfrom = 0 then
	execpff("Interviewer.pff",stop);
  else
	execpff("Supervisor.pff",stop);
	stop(1);
  endif;	

PROC CFTF_QUEST
preproc
  lrc = loadcase(CLUSTERS,yeanum);
  if !lrc & xfrom <> 2 then
	errmsg( 00001, yeanum );
	if xfrom = 0 then
	  execPFF("Interviewer.pff",stop);
	elseif xfrom = 2 then 
	  execPFF("CentralMenu.pff",stop);
	else
	  execPFF("Supervisor.pff",stop);
	  stop(1);
	endif;	
  endif;

  c_i = concat(yeanum,yhhnum);
  lrc = loadcase(CTRL_HH,c_i);
  if !lrc & xfrom <> 2 then
	errmsg( 00002, yeanum, yhhnum);
	if xfrom = 0 then
	  execpff("Interviewer.pff",stop);
	elseif xfrom = 2 then 
	  execpff("CentralMenu.pff",stop);
	else
	  execpff("Supervisor.pff",stop);
	  stop(1);
	endif;	
  endif;

  if H_MOD3 = xintnum then
    if SS_3 in "N/A ","" then
	  SS_3 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_3 = "N/A";
  endif;

  if H_MOD4 = xintnum then
	if SS_4 in "N/A ","" then
	  SS_4 = "OPEN";
	endif;
	if SS_4A in "N/A ","" then
	  SS_4A = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_4 = "N/A";
	SS_4A = "N/A";
  endif;

  if H_MOD5 = xintnum then
	if SS_5 in "N/A ","" then
	  SS_5 = "OPEN";
	endif;
	if SS_5A in "N/A ","" then
	  SS_5A = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_5 = "N/A";
	SS_5A = "N/A";
  endif;

  if H_MOD6F = xintnum then
	if SS_6F in "N/A ","" then
	  SS_6F = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_6F = "N/A";
  endif;

  if H_MOD6M = xintnum then
	if SS_6M in "N/A ","" then
	  SS_6M = "OPEN";
	endif;	
  elseif !xfrom in 1,2 then
	SS_6M = "N/A";
  endif;

  if H_MOD790 = xintnum then
	if SS_790 in "N/A ","" then
	  SS_790 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_790 = "N/A";
  endif;

  if H_MOD71 = xintnum then
	if SS_71 in "N/A ","" then
	  SS_71 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_71 = "N/A";
  endif;

  if H_MOD72 = xintnum then
	if SS_72 in "N/A ","" then
	  SS_72 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_72 = "N/A";
  endif;

  if H_MOD73 = xintnum then
	if SS_73 in "N/A ","" then
	  SS_73 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_73 = "N/A";
  endif;

  if H_MOD74 = xintnum then
	if SS_74 in "N/A ","" then
	  SS_74 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_74 = "N/A";
  endif;

  if H_MOD75 = xintnum then
	if SS_75 in "N/A ","" then
	  SS_75 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_75 = "N/A";
  endif;

  if H_MOD76 = xintnum then
	if SS_76 in "N/A ","" then
	  SS_76 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_76 = "N/A";
  endif;

  if H_MOD77 = xintnum then
	if SS_77 in "N/A ","" then
	  SS_77 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_77 = "N/A";
  endif;

  if H_MOD750 = xintnum then
	if SS_750 in "N/A ","" then
	  SS_750 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_750 = "N/A";
  endif;

  if H_MOD780 = xintnum then
	if SS_780 in "N/A ","" then
	  SS_780 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_780 = "N/A";
  endif;

  if H_MOD791 = xintnum then
	if SS_791 in "N/A ","" then
	  SS_791 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_791 = "N/A";
  endif;

  if H_MOD792 = xintnum then
	if SS_792 in "N/A ","" then
	  SS_792 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_792 = "N/A";
  endif;

  if H_MOD796 = xintnum then
	if SS_796 in "N/A ","" then
	  SS_796 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_796 = "N/A";
  endif;

  if H_MOD8 = xintnum then
	if SS_8 in "N/A ","" then
	  SS_8 = "OPEN";
	endif;
  elseif !xfrom in 1,2 then
	SS_8 = "N/A";
  endif;
postproc
  {ENG+} errmsg("Household completed and saved");	{+ENG}
  {{FR+} errmsg("Ménage terminé et sauvergardé");	{+FR}}
  endlevel;  { endlevel allows application to shut down }



PROC HH_ID_FORM

onfocus
  userbar (remove, hhbuttonptr);
postproc
  if AHRESULT <> 1 then 

    endlevel
  endif;

  
PROC HHEA
preproc
  ENDQRE = 1; { place holder for the end of the questionnaire - used for combining datafiles from Interviewers A and B in Interviewer.apc }
  if xintnum in H_INT2, H_INT3 then { if second or Ag interviewer, go straight to module menu }
    advance to GOTO;
  endif;
  if xfrom = 1 | ( xfrom = 0 & xrevisit = 6 ) then 
    advance to GOTO;
  endif;
  if demode() = add then
    $ = xeanum;
  endif;

PROC HHNUM
preproc
  if demode() = add then
    $ = xhhnum;
  endif;
  
PROC A03A
onfocus
  if demode() = add then
    $ = yGeo4Code;
  endif;
  
PROC A03B
onfocus
  if demode() = add then
    $ = yGeo3Code;
  endif;
  
PROC A03C
onfocus
  if demode() = add then
    $ = yGeo2Code;
  endif;
  
PROC A03D
onfocus
  if demode() = add then
    $=yGeo1Code;
  endif;

PROC AHTYPE
onfocus  
  if demode() = add then
    $ = YTYPE;
  endif;
  
postproc
  if xfrom = 0 & !xintnum in H_INT2,H_INT3 then 
    getgps();
    enter FL_GPS;
  endif;
  
PROC AHVLINE
preproc
  n = curocc();
  
  if visualvalue( AHVRESULT(n) ) = notappl then { if in modify mode and result = NA skip } {smg! ! following this }
	$ = n;
        
  elseif n >= 3 then   { assign new visit for add, partial save with add }
    $ = n; 
  { incomplete cases are called as if they were partially saved }
  { in addmode to generate an entry in visits table             }
  
  elseif visualvalue(ahvday(n)) <> sysdate("DD") then

    advance to AHVLINE(n+1);

  { exit from the program and start again in the same day }  
  elseif visualvalue(ahvday(n)) = sysdate("DD") then
    advance ahvresult(n);
   
   
  { revisit generates another entry in visit }
  elseif xrevisit = 1 & visualvalue(ahvresult(n+1)) <> notappl then
    advance to AHVLINE(n+1);
  endif;
  
  
PROC AHVDAY
preproc
  if visualvalue( $(n) ) = notappl then
	$ = sysdate( "dd" );
  endif;

PROC AHVMONTH
preproc
  if visualvalue( $(n) ) = notappl then
	$ = sysdate( "mm" );
  endif;

PROC AHVYEAR
preproc
  if visualvalue( $(n) ) = notappl then
	$ = sysdate( "YYYY" );
  endif;

PROC AHVHOUR
preproc
if visualvalue( $(n) ) = notappl then
	time = systime();
	$ = int( time/10000 );
endif;

PROC AHVMINUTE
preproc
  if visualvalue( $(n) ) = notappl then
    time = systime();
    $ = int( time/100 ) % 100;
  endif;

PROC AHVRESULT
preproc
  if xfrom = 2 then 
    advance to GOTO;
  endif;
  
  oldval = visualvalue( $(n) );
  { a partial case in addmode is assigned a completed interview }
  if ( oldval = notappl | n >= 3 ) then
    $ = 1;
  endif;

postproc
  { Verify that household questionnaire was incomplete }
  if $ <> 1 & oldval = notappl then
    {ENG+} errmsg( 00014 ) select("Reenter", $, "Continue", continue);	{+ENG}
    {{FR+} errmsg( 00014 ) select("Entrer à nouveau", $, "Continuer", continue);	{+FR}}
  endif;

  { Get Other Answer for result of household interview }
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
  n = curocc();

  if ahvday = sysdate("DD") then
  	skip ahintd;
  endif;
  if !xrevisit & visualvalue( AHVLINE(n+1) ) = notappl then
    skip to AHINTD;
  elseif oldval = notappl then
    skip to AHINTD;
  endif;

PROC AHINTD
preproc
  n = totocc( AHVISITS_ROSTER );
  $ = AHVDAY( n );

PROC AHINTM
preproc
  n = totocc( AHVISITS_ROSTER );
  $ = AHVMONTH( n );
  
PROC AHINTY
preproc
  n = totocc( AHVISITS_ROSTER );
  $ = AHVYEAR( n );
postproc
  dd = ($*100 + AHINTM)*100 + AHINTD;
  ss = sysdate( "yyyymmdd" );
  if dd > ss then
    errmsg( 00016 );
  endif;  
  
PROC AHRESULT
preproc
  n = totocc( AHVISITS_ROSTER );
  $ = AHVRESULT( n );

PROC AHTOTVISITS
preproc
  $ = totocc( AHVISITS_ROSTER );
  
PROC AHINTNUM1
preproc
  if xfrom = 0 then
    AHINTNUM1 = H_INT1;
    AHSUPERV = xSupNum;
  endif;
 
  if xfrom = 0 & H_INT2 then
    AHINTNUM2 = H_INT2;
  elseif xfrom <> 2 then
    AHINTNUM2 = notappl;
  endif;
 
 if xfrom = 0 & H_INT3 then
    AHINTNUM3 = H_INT3;
  elseif xfrom <> 2 then
    AHINTNUM3 = notappl;
  endif; 
  
PROC AHLANGQ
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;
  
PROC AHLANGI
  setlanguage("ENG");
{ !! TO DO - CAPI langauges should be updated ( CAPI Options => Define CAPI languages ) and logic below adjusted }
  if $ = 2 then
    setlanguage( "LG2" );
  elseif $ = 3 then
    setlanguage( "LG3" );
  elseif $ = 4 then
    setlanguage( "LG4" );
  elseif $ = 5 then
    setlanguage( "LG5" );
  elseif $ = 6 then
    setlanguage( "LG6" );   
  endif;
  
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;


PROC AHLANGR
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;
PROC AHCONSENT
preproc
  if AHRESULT <> 1 then
	{ENG+} string100 = "Interview consent is refused";	{+ENG}
	{{FR+} string100 = "Vous avez sélectionné aucun consentement";	{+FR}}
	{ENG+} ii=accept(string100,
		"Finalize the case and delete all modules",
		"Remain in the household and continue the interview");
		{+ENG}	
	{{FR+} ii=accept(string100,
			"Terminé? Tous les modules seront supprimés",
			"Annuler");
			{+FR}}	
	if ii <> 1 then 
		reenter AHVRESULT( n );
	endif;
	{ENG+} ii=accept(string100,
			"Confirm that the case is final and all modules will be deleted",
			"Remain in the household and continue the interview");
		{+ENG}		
	{{FR+} ii=accept(string100,
				"Terminé? Tous les modules seront supprimés",
				"Annuler");
			{+FR}}	
	if ii <> 1 then 
		reenter AHVRESULT( n );
	endif;
	endlevel;
  elseif visualvalue($) = 1 then { already started the interview, go to HH roster }
   	advance to mod_1_form;
  endif;
		
postproc
  n = totocc( AHVISITS_ROSTER );

  if $ = 2 then

     {ENG+} if accept( "Please confirm that the result of this interview is a refusal.", 
               "Yes, interview refused", "No, change answer" ) <> 1 then 
       	{+ENG}        
     {{FR+} if accept( "Veuillez confirmer que le résultat de cet entretien est un refus.", 
               "Oui, entretien refusé "," Non, changez de réponse " ) <> 1 then 
       	{+FR}}        
      $ = notappl;
      reenter;
    endif;
    
    AHVRESULT( n ) = 5; { if they won't participate, set to refused }
    AHRESULT       = 5;
  elseif $ = 1 & AHVRESULT( n ) <> 1 then
    AHVRESULT( n ) = 1
  endif;

PROC MOD_1_FORM
onfocus
  userbar (remove, hhbuttonptr);
PROC V100H
preproc
{ this form is req'd }

  set attributes ($) protect;   { autofill the time field }
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
    D100 = sysdate( "dd" );
    M100 = sysdate( "mm" );
    Y100 = sysdate( "YYYY" );
  endif;

PROC V100M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
  endif;

PROC V101A
  if $ <> 1 then 
    skip to V101B;
  endif;
  
PROC V101B
  if $ <> 1 then 
    skip to VTYPE;
  endif; 

PROC VTYPE
preproc
  if V101A = 1 & V101B = 1 then
    $ = 1;
  elseif V101A = 1 & V101B <> 1 then
    $ = 2;
  elseif V101A <> 1 & V101B = 1 then
    $ = 3;
  else
    $ = 4;
  endif;


PROC M1_LINE
preproc
  $ = curocc();

PROC V101
preproc
  if curocc() = 1 then 
    if V101A = 1 then
      $ = V101AN;
      noinput;
    else
      skip to next M1_LINE;
    endif;
  endif;
  
  
  if curocc() = 2 then 
    if V101B = 1 then
      $ = V101BN;
      noinput;
    else
      skip to next M1_LINE;
    endif;
  endif;
    
postproc
  if pos( $[1:1], notalpha ) or length(strip($))=0 then
    errmsg( 89991 );
    reenter
  endif;


PROC V102
preproc
  if curocc() = 1 then 
    if V101A = 1 then
      $ = 1;
      noinput;
    endif;
  endif;

  if curocc() = 2 then 
    if V101B = 1 then
      $ = 2;
      noinput;
    endif;
  endif;

onfocus
name = strip(V101);

PROC V103
preproc
  if curocc() = 1 then 
    if V101A = 1 then
      $ = 1;
      noinput;
    endif;
  endif;
  if curocc() = 2 then 
    if V101A <> 1 & V101B = 1 then
      $ = 1;
      noinput;
    endif;
  endif;
  
onfocus
  if VTYPE in 1,2 then
    head = V101AN;
  elseif VTYPE = 3 then 
    head = V101BN;
  endif;  

postproc
  if V101A <> 1 & V101B <> 1 & curocc() = 3 & $ <> 16 then	{ no PDMs identified, but relationship is not 16 for third line - no adult decisionmakers }
    errmsg( 00134 );
    reenter;
  endif;
  if curocc() = 1 then
    if V101A = 1 <=> !($ = 1) then		  { primary decisionmaker should be on first line }
      errmsg( 00131, "Male", 1 );
      reenter
    endif;
  elseif curocc() = 2 then
    if V101B = 1 & V101A <> 1 <=> !($ = 1) then
      errmsg( 00131, "Female", 2 );
      reenter;
    endif; 
  elseif count( MOD_1000 where V103 = 1) > 1 then  { only one "self" allowed }
    errmsg( 00129 );
    reenter;
  elseif $ = 2 & count( MOD_1000 where V103 = 2) > 1 then
    errmsg( 00132 );
  endif;
  if curocc() > 1 & $ = 2 then
    if V102(curocc()) = V102(1) then		{ sex of spouse must be diff than sex of head }
      errmsg(00160, $, $(1) )
        {ENG+}  select( "Sex of head", V102(1), "Sex of spouse", V102(curocc()) ); 	{+ENG}
        {{FR+}  select( "Sexe du chef de ménage", V102(1), "Sexe de l'épouse/conjoint", V102(curocc()) ); 	{+FR}}
    endif;
  endif;
  { Only one spouse, parent, parent-in-law of each sex expected smg! if polygyny allowed, adjust PIL }
  {ENG+} 
  if count(MOD_1000 where V103 = 2            ) >= 2 then errmsg (00130, "spouse"); reenter; endif; { !! TO DO Comment out this line if polygyny exists in country }
  if count(MOD_1000 where V103 = 6  & V102 = 1) >= 2 then errmsg (00130, "father"); reenter; endif;
  if count(MOD_1000 where V103 = 6  & V102 = 2) >= 2 then errmsg (00130, "mother"); reenter; endif;
  if count(MOD_1000 where V103 = 12 & V102 = 1) >= 2 then errmsg (00130, "father-in-law"); reenter; endif; { !! TO DO Comment out this line if polygyny exists in country }
  if count(MOD_1000 where V103 = 12 & V102 = 2) >= 2 then errmsg (00130, "mother-in-law"); reenter; endif; { !! TO DO Comment out this line if polygyny exists in country }
  	{+ENG}
  {{FR+} 
  if count(MOD_1000 where V103 = 2            ) >= 2 then errmsg (00030, "épouse/conjoint"); reenter; endif; { !! TO DO Comment out this line if polygyny exists in country }
  if count(MOD_1000 where V103 = 6  & V102 = 1) >= 2 then errmsg (00030, "père"); reenter; endif;
  if count(MOD_1000 where V103 = 6  & V102 = 2) >= 2 then errmsg (00030, "mère"); reenter; endif;
  if count(MOD_1000 where V103 = 12 & V102 = 1) >= 2 then errmsg (00030, "beau père"); reenter; endif; { !! TO DO Comment out this line if polygyny exists in country }
  if count(MOD_1000 where V103 = 12 & V102 = 2) >= 2 then errmsg (00030, "belle mère"); reenter; endif; { !! TO DO Comment out this line if polygyny exists in country }
  	{+FR}}  	

PROC M1_MORE
preproc
  if curocc() = 1 & V101A = 1 & V101B = 1 then
    $ = 1;
    noinput;
  endif;
postproc
  if $ <> 1 then
    endsect
  endif;

PROC Q2A
  if $ = 1 then
    $ = 2;
    m1_more(totocc(MOD_1000)) = 1;
    reenter m1_MORE(totocc(MOD_1000));
  endif;

PROC Q2B
  if $ = 1 then
    $ = 2;
    m1_more(totocc(MOD_1000)) = 1;
    reenter m1_MORE(totocc(MOD_1000));
  endif;


PROC AHMEMBER
preproc
  if VTYPE = 2 & soccurs( MOD_1 ) = 1 then 
    $ = 1; 
  else
    $ = soccurs( MOD_1 ) - ( V101A <> 1 ) - ( V101B <> 1 );
  endif;
  { create variable to hold total number of lines in the household roster since there may be blank lines for missing PDMs }
  roster = totocc( MOD_1000 );
  
PROC V100B
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V103(i) <> notappl then { filtering out blank lines for missing PDMs }
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  { Check line number of household respondent in range }
  if !$ in 1:roster then
    errmsg (00017, "Module 1 respondent", $, roster);
    reenter
  endif;
  AHRESP = $;
  VCONSENT($) = 1;    { set consent for the HH respondent to Y } 

PROC V104
preproc
  if curocc() > roster then
	endsect;
  endif;
  if curocc() = 1 & V101A <> 1 then 
    skip to next;
  endif;
  if curocc() = 2 & V101B <> 1 then 
    skip to next;
  endif;
  
onfocus
  name = strip(V101(curocc()));
  line = M1_LINE(curocc());
  
postproc
  { ensure minimum age for head and spouse }
  
  if V103(curocc()) in 1,2 & $ < minagehdsp then
    errmsg( 00171, $, strip(getlabel(V103, V103(curocc()))), minagehdsp ); 
  endif;
  if curocc() in 1,2 & $ < minagedm then
    errmsg( 00172, $, strip(getlabel(V102, V102(curocc()))), minagedm );
    reenter; 
  endif;
  
  if V103(curocc()) in 3,5,6,12 then  { only make these age checks if the person is a child, g'child, parent, or PIL }
    agediff = 99;
    i = 1;
        if V103(curocc()) = 3 then agediff =      V104(1)-$;     { calc age diff bet head and child }
    elseif V103(curocc()) = 5 then agediff = int((V104(1)-$)/2); { calc age diff bet head and g'child }
    elseif V103(curocc()) = 6 then agediff = $ - V104(1);        { calc age diff bet parent and head }
    elseif V103(curocc()) = 12 & V103(2) = 2 then                { calc age diff bet parent-in-law and spouse }
        agediff = $ - V104(2);
        i = 2;
    endif;

    if agediff < minagediff then
        errmsg(00169, V104(i), strip(getlabel(V103, V103(i))), $, strip(getlabel(V103, V103(curocc()))) )
            {ENG+} 
            select( concat( "Age of ", getlabel(V103, V103(i)) ), V104(i),
                            concat( "Age of ", getlabel(V103, V103(curocc())) ), $,
                            concat( "Relationship of ", getlabel(V103, V103(curocc())) ), V103(curocc()),
                            "Continue", continue );
            	{+ENG}
            {{FR+} 
            select( concat( "Age de ", getlabel(V103, V103(i)) ), V104(i),
                            concat( "Age de ", getlabel(V103, V103(curocc())) ), $,
                            concat( "Lien de parenté de ", getlabel(V103, V103(curocc())) ), V103(curocc()),
                            "Continuer", continue );
            	{+FR}}
    endif;
  endif;
  
  if M1_LINE(curocc())= AHRESP & !$ in minageelig:95 then
    errmsg (00155, name, minageelig);
    reenter;
  endif;
  
  
PROC V105B
  if V105A = 2 and V105B = 2 then
    errmsg( 00173, strip( V101(curocc()) ) )
    select( "Member is a usual member", V105A, "Member stayed in the household last night", reenter);	
  endif;
  if $ = 1 then
    skip to V107;
  endif;

PROC V106N
onfocus
if V106U = 1 then
	{ENG+} name2 = "DAYS";	{+ENG}
	{{FR+} name2 = "JOURS";	{+FR}}
	setvalueset(@getsymbol(), V106N_vs6); 
elseif V106U = 2 then
	{ENG+} name2 = "WEEKS";		{+ENG}
	{{FR+} name2 = "SEMAINES";		{+FR}}
	setvalueset(@getsymbol(), V106N_vs7); 
else
	{ENG+} name2 = "MONTHS";	{+ENG}
	{{FR+} name2 = "MOIS";	{+FR}}
	setvalueset(@getsymbol(), V106N_vs8); 
endif;

postproc
if V106U = 1 & $ > 6 then
	errmsg(00151,$);
	reenter;
elseif V106U = 2 & $ > 5 then
	errmsg(00152,$);
	reenter;
endif;

PROC V107
preproc
  if V102(curocc()) = 2 & V104 in 15:49 then
    $ = M1_LINE;
  else
    $ = 0;
  endif;

PROC V108
preproc
  if V104 <= 5 then
    $ = M1_LINE;
  else
    $ = 0;
  endif;

 
PROC VFARMER
preproc
  if !$ in 0,notappl then
  { if this is set to the line number (done in Module 2) do nothing }
  elseif demode() = add then
    $ = 0;
  endif;

PROC VANIMAL
preproc
  if !$ in 0,notappl then
  { if this is set to the line number (done in Module 2) do nothing }
  elseif demode() = add then
    $ = 0;
  endif;

 
PROC V109
preproc
  if V104 < 3 then 
	skip next V104;
  endif;

onfocus
  name = strip(v101(curocc()));

postproc
  if $ = 2 then
	skip next V104;
  endif;

PROC V111A
  if V104 in 3:4 & $ in 2:8 | V104 in 6:10 & V111A in 3,4 then
	errmsg(00153,V104);
	reenter;
  endif;
  	
PROC V111B
{ !! TO DO - include other country specific education level/grade checking }
  { checks number of years completed AT THAT LEVEL (not what grade it was - ex. completing grade 6 in 
    core corresponds to completing two years (V111B = 2) at primary level 4-5 (V111A = 2) }
  recode V111A :: $ -> ok;
          0 :: 0-3 -> 1;
          1 :: 0-7 -> 1;
          2 :: 0-7 -> 1;
          3 :: 0-8 -> 1;
          8 :: 98  -> 1;
  endrecode;
  if !ok then 
    errmsg(	00154, strip(getlabel(V111A,V111A)), V111B);
    reenter;
  endif;

PROC AHKIDS
preproc
  $ = count( MOD_1001 where NAtoZero(V108) <> 0 );

PROC AHWOMEN
preproc
  $ = count( MOD_1001 where NAtoZero(V107) <> 0 );

PROC V112H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V112M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
	time = systime();
	$ = int( time/100 ) % 100;  { gets the minute }
    D112 = sysdate( "dd" );
    M112 = sysdate( "mm" );
    Y112 = sysdate( "YYYY" );
  endif;

postproc
  if demode() = add then
	savepartial();
  endif;

	

 
 
PROC MOD_2_FORM

  for i in MOD_1001 do 
    if M1_LINE(i) in V228A,V228B,V228C,V228D,V230A,V230B,V230C,V230D,V232A,V232B,V232C,V232D then
      VANIMAL(i) = M1_LINE(i);
    else
      VANIMAL(i) = 0;
    endif;
    if M1_LINE(i) in V235A,V235B,V235C,V235D,V237A,V237B,V237C,V237D,V239A,V239B,V239C,V239D then
      VFARMER(i) = M1_LINE(i);
    else
      VFARMER(i) = 0;
    endif;
  enddo;
PROC V200H
preproc
set attributes ($) protect; 
if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
endif;
PROC V200M
preproc
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D200 = sysdate( "dd" );
    M200 = sysdate( "mm" );
    Y200 = sysdate( "YYYY" );
  endif;


PROC V201
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;

PROC V202
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;

PROC V203
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;

PROC V205
  if $ <> 1 then 
    skip to V208;
  endif;

PROC V208
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;

  if $ = 61 then
	skip to V211;
  endif;

PROC V209
  if $ <> 1 then
	skip V211;
  endif;

PROC V211
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;
  if $ in 11,12 then
    skip to V214;
  endif;
  
PROC V212
  if $ in 1,2 then
	skip to V214;
  endif;

PROC V216
  if $ in 2,8 then
	skip V219;
  endif;

PROC V217
  if alphachk( $, 6, "XZ" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Z", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), 0 );
    enter FL_OTHERS
  endif;

PROC V219
  if $ = 96 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;
  if $ = 95 then
    skip to V222A;
  endif;
  
PROC V220
  if $ = 6 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;
  if $ <> 1 then
    skip to V222A;
  endif;

PROC V222A
  if $ <> 1 & V219 = 1 then
    errmsg( 00201 )
  endif;

PROC V225
  if $ <> 1 then
	skip to V233;
  endif;
    
PROC V226H
  if $ <> 0 then
	getother( GetSymbol(), 0 );
	enter FL_OTHERS
  endif;    
  
PROC V226I
preproc
  if V226A | V226B | V226D | V226E then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V227;
  endif;


PROC V227
preproc
  if V226A { !! TO DO !! Change to L-VCC1 selected for country } then
    $ = 1;
  else 
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V229;
  endif;
  
  
PROC V228A
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
    
PROC V228B
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V228A ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
  
postproc
  if $ = 0 then
    skip to V229  
  endif;

PROC V228C
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V228A,V228B ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V229   
  endif;
  
PROC V228D
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V228A,V228B,V228C ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );  
  
PROC V229
preproc
  if V226B { !! TO DO !! Change to L-VCC2 selected for country } then
    $ = 1;
  else 
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V231;
  endif;
  
PROC V230A
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
    
PROC V230B
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V230A ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V231    
  endif;

PROC V230C
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V230A,V230B ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON"; 	{+ENG} 
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V231  
  endif;
  
PROC V230D
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V230A,V230B,V230C ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );  
    
PROC V231
preproc
  if V226C { !! TO DO !! Change to L-VCC2 selected for country } then
    $ = 1;
  else 
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V233;
  endif;
  
PROC V232A
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
    
PROC V232B
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V232A ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V233    
  endif;

PROC V232C
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V232A,V232B ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V233    
  endif;

PROC V232D
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if !( i in V232A,V232B,V232C ) & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );  
      
PROC V233
  if $ <> 1 then
    skip to V240A
  endif;
  
PROC V234
  if $ <> 1 then
    skip to V236
  endif;

PROC V235A
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

PROC V235B
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V235A & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V236    
  endif;

PROC V235C
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V235A & M1_LINE(i) <> V235B & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V236    
  endif;

PROC V235D
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V235A & M1_LINE(i) <> V235B & M1_LINE(i) <> V235C & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
    endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
       
PROC V236
  if $ <> 1 then
    skip to V238
  
  endif;

PROC V237A
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

PROC V237B
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V237A & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
	endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V238    
  endif;

PROC V237C
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V237A & M1_LINE(i) <> V237B & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
	endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V238     
  endif;
    
PROC V237D
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V237A & M1_LINE(i) <> V237B & M1_LINE(i) <> V237C & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
	endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
          
PROC V238
  if $ <> 1 then
    skip to V240A   
  endif;

PROC V239A
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );


    
PROC V239B
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V239A & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
	endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V240A     
  endif;

PROC V239C
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V239A & M1_LINE(i) <> V239B & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
	endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );
    
postproc
  if $ = 0 then
    skip to V240A     
  endif;

PROC V239D
onfocus
  clean_labels();
  j = 1;
  do i = 1 while i <= roster 
    if M1_LINE(i) <> V239A & M1_LINE(i) <> V239B & M1_LINE(i) <> V239C & V104(i) >= 15 then
      codes(j)  = i;
      labels(j) = v101(i);
      j = j + 1;
	endif;
  enddo;
  codes(0) = 0;
  {ENG+} labels(0) = "NO OTHER PERSON";  	{+ENG}
  {{FR+} labels(0) = "PERSONNE D'AUTRE";	{+FR}}
  SetValueSet( @GetSymbol(), codes, labels );


PROC V240A
  if $ <> 1 then 
    skip to V241A;
  endif;
  
PROC V241A
  if $ <> 1 then 
    skip to V242;
  endif;
  
PROC V242
  if $ = 2 then
	skip V244H;
  endif;

PROC V243
  if alphachk( $, 9, "X" ) then
    errmsg( 09998 );
    reenter
    
  { Get other answer }
elseif pos( "X", $ ) then
    getother( GetSymbol(), 0 );
    enter FL_OTHERS
endif;


PROC V244H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V244M
preproc
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D244 = sysdate( "dd" );
    M244 = sysdate( "mm" );
    Y244 = sysdate( "YYYY" );
    V245 = 1;
    V246 = xintnum;
  endif;

  
postproc
  // indicate in HH control that module 1 is completed
  if H_MOD1 = 0 then
	H_MOD1 = 1;
	writecase(ctrl_hh);
  endif;
  if demode() = add then
    savepartial();
  endif;
  
PROC FLOW_CONTROL
onfocus
  stopcheck = 0;

  userbar (remove, flowbuttonptr);  // it will get reinstated in the postproc of dec_mod
  userbar (remove, hhbuttonptr);
  userbar (remove, exitbutton);

  {ENG+} exitbutton = userbar( add button, "Exit interview", stopInterview( ) ); 	{+ENG} 
  {ENG+} hhbuttonptr = userbar( add button, "Household", showHH()); 	{+ENG}

  {{FR+} exitbutton = userbar( modify, exitbutton, "Quitter l'entretien", stopInterview( ) ); 	{+FR}}
  {{FR+} hhbuttonptr = userbar( add button, "Ménage", showHH()); 	{+FR}}
  
PROC GOTO
onfocus
  endinginterview=0;
  goto = notappl;
  dec_mod = "";
  
postproc
  if $ = 2 then  // they want to exit the system

  if ENDQRE <> 1 then 
    ENDQRE = 1;
  endif;

  modsDone = ok2exit();
  if visualvalue(modsDone) = 1 then // all interviews have been conducted
    if demode() = 2 & AHRESULT = 1 then
	  i = 0;
	  	while i = 0 do
	      {ENG+} i = accept("Are you sure you want to exit?","Continue to exit","Discard the changes and go to main menu");	{+ENG}
	      {{FR+} i = accept("Êtes-vous sûr de vouloir quitter?","Quittez","Ignorer les modifications et aller au menu principal");	{+FR}}
		enddo;
		if i = 2 then
// call the interviewer menu
		  if xfrom = 2 then 
		    execPFF("centralmenu.pff",stop);
		  elseif xfrom <> 0 then
		    execPFF("supervisor.pff",stop);
		  else					
		    execPFF("interviewer.pff",stop);
	   	  endif;
		  stop(-1);		// stop application
		endif;
	  endif;
      if endmess() then
        if AHRESULT = 11 then // it was probably set to partial previously
          AHRESULT = 1;      // ensure result code says it's final;
	    endif;
    	endinginterview = 1;
        skip to MOD_3_FORM ;  // skipping over dec_mod
	  else
        reenter;
	  endif;
	else		// interviews outstanding 
      {ENG+} i = accept("One or more modules remain, continue to exit?","Yes, continue to exit","No, return to interview");	{+ENG}
      {{FR+} i = accept("Un ou plusieurs modules restant, Quitter?","Oui, quitter","Non, retourner à l'entretien");	{+FR}}
   	  if i = 1 then 
        AHRESULT = 11;	  // change HH result code to partially completed
        savepartial();
		if xfrom <> 0 then
		  execPFF("supervisor.pff",stop);
		else				
		  execPFF("interviewer.pff",stop);
		endif;
        stop(1); 
	  else 
        $ = notappl; 
        reenter; 
	  endif;
	endif;
  endif;
  
PROC DEC_MOD
onfocus
  $ = "";
  clean_modLabels();
  i = 0;  // start at 0 
  smodsleft = "";
  if xIntNum = h_int1 | xfrom = 1 then
    {ENG+} amodsremainvals (i) = "A";  amodsremainlabels(0) = "DONE - Module ID Identification";	{+ENG}
    {{FR+} amodsremainvals (i) = "A";  amodsremainlabels(0) = "Complet - Module ID Identification du ménage";	{+FR}}
	smodsleft = concat(strip(smodsleft),"A");
	inc(i);
  endif;
  if xIntnum = h_int1 | xfrom = 1 then
	{ENG+} amodsremainvals (i) = "B";  amodsremainlabels(1) = "DONE - Module 1 HH roster";	{+ENG}
	{{FR+} amodsremainvals (i) = "B";  amodsremainlabels(1) = "Complet - Module 1 Tableau du ménage";	{+FR}}
	smodsleft = concat(strip(smodsleft),"B");
	inc(i);
  endif;
  if xIntnum = h_int1 | xfrom = 1 then
	{ENG+} amodsremainvals (i) = "C";  amodsremainlabels(2) = "DONE - Module 2 Dwelling        ";	{+ENG}
	{{FR+} amodsremainvals (i) = "C";  amodsremainlabels(2) = "Complet - Module 2 Characatéristiques du ménage        ";	{+FR}}
	smodsleft = concat(strip(smodsleft),"C");
	inc(i);
  endif;
  if xIntnum = H_MOD3 | xfrom = 1 then
	{ENG+} amodsremainvals (i) = "D";  amodsremainlabels(i) = concat(SS_3," - Module 3 Food Security        ");	{+ENG}
	{{FR+}
	if SS_3 = "DONE" then 
	  amodsremainvals (i) = "D";  amodsremainlabels(i) = concat("Complet"," - Module 3 Sécurité alimentaire           ");
	else
	  amodsremainvals (i) = "D";  amodsremainlabels(i) = concat("Incomplet"," - Module 3 Sécurité alimentaire           ");	
	endif;  
	{+FR}} 
	smodsleft = concat(strip(smodsleft),"D");
	inc(i);
  endif;
  if AHWOMEN then
	if xIntnum = H_MOD4 | xfrom = 1 then
	  amodsremainvals(i) = "E";
	  {ENG+} amodsremainlabels(i) = concat(SS_4," - Module 4 Women          ");	{+ENG}
	  {{FR+} 
	  if SS_4 = "DONE" then
	    amodsremainlabels(i) = concat("Complet"," - Module 4 Femmes          ");
	  else
	    amodsremainlabels(i) = concat("Incomplet"," - Module 4 Femmes          ");
	  endif;
	  {+FR}}
	  smodsleft = concat(strip(smodsleft),"E");
	  inc(i);
	  if SS_4 = 'DONE' | xfrom = 1 then
	    amodsremainvals(i) = "F";
	    {ENG+} amodsremainlabels(i) = concat(SS_4A," - Module 4a Women Anthropometry      ");	{+ENG}
		{{FR+}
		if SS_4A = "DONE" then
	      amodsremainlabels(i) = concat("Complet"," - Module 4a Anthropometrie femmes      ");
	    else
	      amodsremainlabels(i) = concat("Incomplet"," - Module 4a Anthropometrie femmes      ");
	    endif;
	    {+FR}}
	    smodsleft = concat(strip(smodsleft),"F");
	    inc(i);
	  endif;
	endif;
  else
	SS_4 = "DONE";
	SS_4A = "DONE";
  endif;
  if AHKIDS then
	if xIntnum = H_MOD5 | xfrom = 1 then
	  amodsremainvals(i) = "G";
	  {ENG+} amodsremainlabels(i) = concat(SS_5," - Module 5 Children       ");	{+ENG}
	  {{FR+}
	  if SS_5 = "DONE" then
   	    amodsremainlabels(i) = concat("Complet"," - Module 5 Enfants       ");
	  else
	    amodsremainlabels(i) = concat("Incomplet"," - Module 5 Enfants       ");	
	  endif;
	  {+FR}}
	  smodsleft = concat(strip(smodsleft),"G");
	  inc(i);
	  if SS_5 = 'DONE' | xfrom = 1 then
	    amodsremainvals(i) = "H";
		{ENG+} amodsremainlabels(i) = concat(SS_5A," - Module 5a Children Anthropometry");	{+ENG}
		{{FR+} 
		if SS_5A = "DONE" then
		  amodsremainlabels(i) = concat("Complet"," - Module 5a Anthropometrie Enfants");	
		else
		  amodsremainlabels(i) = concat("Incomplet"," - Module 5a Anthropometrie Enfants");
		endif;
		{+FR}}
		smodsleft = concat(strip(smodsleft),"H");
		inc(i);
	  endif;
	endif;
  else
	SS_5 = "DONE";
	SS_5A = "DONE";
  endif;
  if V101B = 1 then
	if xIntnum = H_MOD6f | xfrom = 1 then
	  amodsremainvals(i) = "I";
	  {ENG+} amodsremainlabels(i) = concat(SS_6F," - Module 6 WEIA Female     ");	{+ENG}
	  {{FR+}
	  if SS_6F = "DONE" then
	    amodsremainlabels(i) = concat("Complet"," - Module 6 WEIA Female     ");
	  else
	    amodsremainlabels(i) = concat("Incomplet"," - Module 6 WEIA Female     ");	
	  endif;
	  {+FR}}
	  smodsleft = concat(strip(smodsleft),"I");
	  inc(i);
	endif;
  else
	ss_6f = "DONE";
  endif;	
  if V101A = 1 & V101B = 1 then
	if xIntnum = H_MOD6m | xfrom = 1 then
	  amodsremainvals(i) = "J";
	  {ENG+} amodsremainlabels(i) = concat(SS_6M," - Module 6 WEIA Male       ");	{+ENG}
	  {{FR+}
	  if SS_6M = "DONE" then
	    amodsremainlabels(i) = concat("Complet"," - Module 6 WEIA Homme       ");
	  else
	    amodsremainlabels(i) = concat("Incomplet"," - Module 6 WEIA Homme       ");	
	  endif;
	  {+FR}}
	  smodsleft = concat(strip(smodsleft),"J");
	  inc(i);
	endif;
  else
	SS_6M = "DONE";
  endif;
  
  if V234 = 1 | V236 = 1 | V238 = 1 then
    if xintnum = H_MOD790 | xfrom = 1 then
      amodsremainvals (i) = "K";  
      {ENG+} amodsremainlabels(i) = concat(SS_790," - Module 7.90 Land Maps");	{+ENG}
      {{FR+}
      if SS_790 = "DONE" then
        amodsremainlabels(i) = concat("Complet"," - Module 7.90 Cartographie du terrain");	
	  else
        amodsremainlabels(i) = concat("Incomplet"," - Module 7.90 Cartographie du terrain");	
	  endif;
	  {+FR}}
	  smodsleft = concat(strip(smodsleft),"K");
	  inc(i);
    endif;
  else
	SS_790 = "DONE";
  endif;  
  
  if V234 = 1 then
    if xIntnum = H_MOD71 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
        amodsremainvals (i) = "L";  
        {ENG+} amodsremainlabels(i) = concat(SS_71," - Module 7.1 Maize");	{+ENG}
        {{FR+} 
        if SS_71 = "DONE" then
          amodsremainlabels(i) = concat("Complet"," - Module 7.1 MAÏS");
		else
          amodsremainlabels(i) = concat("Incomplet"," - Module 7.1 MAÏS");	
		endif;
		{+FR}}
	    smodsleft = concat(strip(smodsleft),"L");
	    inc(i);
      endif;
    endif;
  else
	SS_71 = "DONE";
  endif;  
  
  if V236 = 1 then
    if xIntnum = H_MOD72 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
  	    amodsremainvals (i) = "M";  
	    {ENG+} amodsremainlabels(i) = concat(SS_72, " - Module 7.2 Common Bean" );	{+ENG}
	    smodsleft = concat(strip(smodsleft),"M");
	    inc(i);
      endif;
    endif;
  else
	SS_72 = "DONE";
  endif;  
  if V238 = 1 then
    if xIntnum = H_MOD73 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
  	    amodsremainvals (i) = "N";  
	    {ENG+} amodsremainlabels(i) = concat(SS_73, " - Module 7.3 Coffee" );	{+ENG}
	    smodsleft = concat(strip(smodsleft),"N");
	    inc(i);
      endif;
    endif;
  else
	SS_73 = "DONE";
  endif;    
  if V234 = 1 then  { !! TO DO - must choose correct filter for this module }
    if xintnum = H_MOD74 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "O";  
	    {ENG+} amodsremainlabels(i) = concat(SS_74, " - Module 7.4 Groundnut" );	{+ENG}
	    smodsleft = concat(strip(smodsleft),"O");
	    inc(i);
      endif;
    endif;
  else
	SS_74 = "DONE";
  endif;    
  if V234 = 1 then  { !! TO DO - must choose correct filter for this module }
    if xintnum = H_MOD75 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "P";  
	    {ENG+} amodsremainlabels(i) = concat(SS_75, " - Module 7.5 Wheat" );	{+ENG}
	    smodsleft = concat(strip(smodsleft),"P");
	    inc(i);
      endif;
    endif;
  else
	SS_75 = "DONE";
  endif;
  if V234 = 1 then  { !! TO DO - must choose correct filter for this module }
    if xintnum = H_MOD76 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "Q";  
	    {ENG+} amodsremainlabels(i) = concat(SS_76, " - Module 7.6 Soybean" );	{+ENG}
	    smodsleft = concat(strip(smodsleft),"Q");
	    inc(i);
      endif;
    endif;
  else
	SS_76 = "DONE";
  endif;
  if V234 = 1 then  { !! TO DO - must choose correct filter for this module }
    if xintnum = H_MOD77 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "R";  
	    {ENG+} amodsremainlabels(i) = concat(SS_77, " - Module 7.7 Paddy Rice" );	{+ENG}
	    smodsleft = concat(strip(smodsleft),"R");
	    inc(i);
      endif;
    endif;
  else
	SS_77 = "DONE";
  endif;
  if V226G then  
    if xintnum = H_MOD780 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "S";  
	    {ENG+} amodsremainlabels(i) = "Module 7.80 Fish";	{+ENG}
	    smodsleft = concat(strip(smodsleft),"S");
	    inc(i);
      endif;
    endif;
  else
	SS_780 = "DONE";
  endif;
  if V234 = 1 | V236 = 1 | V238 = 1 then  
    if xintnum = H_MOD791 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "T";  
	    {ENG+} amodsremainlabels(i) = concat(SS_791," - Module 7.91 Plot Area");	{+ENG}
		{{FR+}
		if SS_791 = "DONE" then
	      amodsremainlabels(i) = concat("Complet"," - Module 7.91 Surface de terrain");	
		else
	      amodsremainlabels(i) = concat("Incomplet"," - Module 7.91 Surface de terrain");	
	    endif;
	    {+FR}}
	    smodsleft = concat(strip(smodsleft),"T");
	    inc(i);
      endif;
    endif;
  else
	SS_791 = "DONE";
  endif;
  if V234 = 1 | V236 = 1 | V238 = 1 then  
    if xintnum = H_MOD792 | xfrom = 1 then
   	  if SS_790 = 'DONE' | xfrom = 1 then
	    amodsremainvals (i) = "U";  
	    {ENG+} amodsremainlabels(i) = concat(SS_792," - Module 7.92 Crop Yield");	{+ENG}
		{{FR+}
		if SS_792 = "DONE" then
	      amodsremainlabels(i) = concat("Complet"," - Module 7.92 Rendement des cultures");
	    else  
	      amodsremainlabels(i) = concat("Incomplet"," - Module 7.92 Rendement des cultures");	
	    endif;
	    {+FR}}
	    smodsleft = concat(strip(smodsleft),"U");
	    inc(i);
      endif;
    endif;
  else
	SS_792 = "DONE";
  endif;
  if V234 = 1 | V236 = 1 | V238 = 1 then  { !! TO DO - use appropriate filters for whether a pond should have been measured }
    if xintnum = H_MOD796 | xfrom = 1 then
	  amodsremainvals (i) = "V";  
	  {ENG+} amodsremainlabels(i) = concat(SS_796, " - Module 7.96 Pond Area" );	{+ENG}
	  smodsleft = concat(strip(smodsleft),"V");
	  inc(i);
    endif;
  else
	SS_796 = "DONE";
  endif;
  if xIntnum = H_MOD8 | xfrom = 1 then
	amodsremainvals (i) = "W";  
	{ENG+} amodsremainlabels(i) = concat(SS_8," - Module 8 HH Consumption ");	{+ENG}
	{{FR+}
	if SS_8 = "DONE" then
	  amodsremainlabels(i) = concat("Complet"," - Module 8 Consommation des ménages ");	
	else
	  amodsremainlabels(i) = concat("Incomplet"," - Module 8 Consommation des ménages ");	
	endif;
	{+FR}}
	smodsleft = concat(strip(smodsleft),"W");
	inc(i);
  endif;
  if xfrom <> 2 then
    amodsremainvals (i) = "";
    SetValueSet( @GetSymbol(), amodsremainvals, amodsremainlabels);
  endif;
  setcapturetype(dec_mod,1);

postproc
  stopcheck = 1;
  if xfrom = 2 then smodsleft = "ABCDEFGHIJKLMNOPQRSTUVW"; endif;
  userbar (remove, flowbuttonptr);  
  if $ = "A" and pos("A", smodsleft) then 
    userbar (remove, flowbuttonptr);
    stopcheck = 0;
    reenter AHConsent;  
  elseif $ = "B"  and pos("B", smodsleft) then 
    userbar (remove, flowbuttonptr);  
    stopcheck = 0;
    reenter V101(1);
  elseif $ = "C"  and pos("C", smodsleft) then stopcheck = 0; reenter V201;
  elseif $ = "D"  and pos("D", smodsleft) then skip to MOD_3_FORM;
  elseif $ = "E"  and pos("E", smodsleft) then skip to MOD_4_FORM;
  elseif $ = "F"  and pos("F", smodsleft) then skip to ANTHRO_WOMEN_FORM;
  elseif $ = "G"  and pos("G", smodsleft) then skip to MOD_5_FORM;
  elseif $ = "H"  and pos("H", smodsleft) then 
	complete_v_M5();
	skip to ANTHRO_CHILD_FORM;
  elseif $ = "I"  and pos("I", smodsleft) then skip to MOD_61F_FORM;
  elseif $ = "J"  and pos("J", smodsleft) then skip to MOD_61M_FORM;
  elseif $ = "K"  and pos("K", smodsleft) then skip to MOD_790_FORM; { Ag modules skip to 7.90 everywhere to pick up the plots for each farmer so they can be referenced }
  elseif $ = "L"  and pos("L", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "M"  and pos("M", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "N"  and pos("N", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "O"  and pos("O", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "P"  and pos("P", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "Q"  and pos("Q", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "R"  and pos("R", smodsleft) then skip to MOD_790_FORM; 
  elseif $ = "S"  and pos("S", smodsleft) then skip to MOD_780_FORM;
  elseif $ = "T"  and pos("T", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "U"  and pos("U", smodsleft) then skip to MOD_790_FORM;
  elseif $ = "V"  and pos("V", smodsleft) then skip to MOD_796_FORM;
  elseif $ = "W"  and pos("W", smodsleft) then skip to MOD_81A_FORM;
  else                              // invalid keystroke
    userbar (remove, flowbuttonptr);  
    $ = "";   
    reenter;
  endif;

PROC MOD_3_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD3 | xfrom = 2 then
		advance;
	else
		skip MOD_4_FORM;
	endif;	
endif;

postproc
if !endinginterview then
	SS_3 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V300H
preproc
set attributes ($) protect; 
if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
endif;

PROC V300M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D300 = sysdate( "dd" );
    M300 = sysdate( "mm" );
    Y300 = sysdate( "YYYY" );
  endif;

PROC V300C
// prepare a list of HH members elegible for food preparation
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
	if V104(i) in minageelig:95 then  
    	codes(j)  = i;
      	labels(j) = v101(i);
      	inc(j);
    endif;
  enddo;
  
  SetValueSet( @GetSymbol(), codes, labels );
  setcapturetype(v300c,2);
  
postproc
  { Check line number of household respondent in range }
  if !$ in 1:roster then
    errmsg (00017, "Module 3", $, roster);
    reenter
  { and then confirm they gave me a person in the correct age range }  
  elseif !(V104($) in minageelig:95) & $ <> 1 then
    {ENG+} errmsg (00150, "person", minageelig);	{+ENG}
    {{FR+} errmsg (00150, "personne", minageelig);	{+FR}}
    reenter;
  endif;

PROC V300D
onfocus
  name = V101(V300C);
  if !endinginterview then
	if visualvalue($) <> notappl then
	  if visualvalue($) = 1 then
		advance V301;
	  endif;
	endif;
  else
	if visualvalue($) = 1 then
	  advance;
	else
 	  endsect; 
	endif;
  endif;

postproc
  if !endinginterview then
	if $ = 1 then
	  vconsent(V300C) = 1;
	endif;
	if $ > 1 then
	  skip to V365H;
	endif;
  endif;
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent to %s was recorded as not available (%s) - revisit when available", "Module 3", V101(V300C)); {+ENG}
    {{FR+}  errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 3", strip(V101(V300C)) ); {+FR}}
  endif; 


PROC V308A
  if $ <> 1 then
    skip to V308C
  endif;

PROC V308C
  if $ <> 1 then
    skip to V308E
  endif;  

PROC V308E
  if $ <> 1 then
    skip to V309
  endif; 

PROC V309
  if $ <> 1 then 
    skip to V312;
  endif;
  
PROC V312
  if $ <> 1 then
    skip to V315
  endif;
  
PROC V315
  if $ <> 1 then
    skip to V318
  endif;
  
PROC V318
  if $ <> 1 then
    skip to V321
  endif;
  
PROC V321
  if $ <> 1 then
    skip to V324
  endif;
  
PROC V324
  if $ <> 1 then
    skip to V327
  endif;
  
PROC V327
preproc
  $ = V233;
postproc
  if $ <> 1 then
    skip to V340A;
  endif;
  
PROC V328
  if $ <> 1 then
    skip to V331
  endif;
  
PROC V331
  if $ <> 1 then
    skip to V334
  endif;
  
PROC V334
  if $ <> 1 then
    skip to V337
  endif;
  
PROC V337
  if $ <> 1 then
    skip to V340
  endif;
  
PROC V340A
preproc
  $ = V225;
postproc
  if $ <> 1 then
    skip to V349;
  endif;
  
PROC V340
  if $ <> 1 then
    skip to V343
  endif;
  
PROC V343
  if $ <> 1 then
    skip to V346
  endif;
  
PROC V346
  if $ <> 1 then
    skip to V349
  endif;
  
PROC V349
  if $ <> 1 then
    skip to V352
  endif;
  
PROC V352
  if $ <> 1 then
    skip to V355
  endif;
  
PROC V355
  if $ <> 1 then
    skip to V358
  endif;
  
PROC V358
preproc 
  if ( V309 = 1 ) | ( V312 = 1 ) |( V315 = 1 ) |( V318 = 1 ) |( V321 = 1 ) |( V324 = 1 ) |( V328 = 1 ) |( V331 = 1 ) |( V334 = 1 ) |
  	( V337 = 1 ) |( V340 = 1 ) |( V343 = 1 ) |( V346 = 1 ) |( V349 = 1 ) |( V352 = 1 ) |( V355 = 1 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V361A
  endif;
  
PROC V361A
  if $ <> 1 then 
    skip to V361C
  endif;
PROC V361C
  if $ <> 1 then 
    skip to V361E
  endif;
PROC V361E
  if $ <> 1 then 
    skip to V361G
  endif;
PROC V361G
  if $ <> 1 then 
    skip to V362
  endif;
PROC V365H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V365M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D365 = sysdate( "dd" );
    M365 = sysdate( "mm" );
    Y365 = sysdate( "YYYY" );
    V366 = 1;
    V367 = xintnum;
  endif;
  
postproc
  if xfrom <> 2 then
    outcome( V300D, V366 );
    V367 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
  
PROC MOD_4_FORM
preproc
if endinginterview and !AHWOMEN then
    skip to MOD_5_FORM;
endif;
if endinginterview then
	if xIntNum = H_MOD4 | xfrom = 2 then
		advance;
	else
		skip to MOD_5_FORM;
	endif;	
endif;

postproc
  if !endinginterview then
	SS_4 = "DONE";
	reenter FLOW_CONTROL;
  endif;

PROC V400X
preproc
  xwoman   = count( MOD_1001 where NAtoZero(V107) <> 0 );
  do i = 1 while i <= maxrec
    if i <= xwoman then
      V400X(i) = i;
    else
      V400X(i) = notappl;
    endif;
  enddo;

  if curocc() > xwoman then   { to run in-Batch }
    SS_4 = "DONE";
    endsect
  endif;
  
PROC V400H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V400M
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D400 = sysdate( "dd" );
    M400 = sysdate( "mm" );
    Y400 = sysdate( "YYYY" );
  endif;

PROC V400D
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if V107(i) <> 0 then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

postproc
 
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (V107(i) <> 0);
    if nextmem = V400X then
      break
    endif;
  enddo;
    if $ <> i then 
      errmsg( 00400, $, strip(V101($)), i, strip(V101(i)));
      reenter;
    endif; 

  name = strip(V101($));  

PROC V400DN
preproc
  $ = strip(V101(V400D));
onfocus
  col = curocc();
postproc
  name = $;

PROC V400E
onfocus
  name = strip(V101(V400D)); 
  
postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 4", V101(V400D)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 4", strip(V101(V400D)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V400D) = 1;
  else
	skip to V431H;
  endif;

PROC V402
	if !($ - V104(V400D)) in -3:3 & !endinginterview then
		errmsg( 00602, $, V104(V400D) ) select( "Change age", V401M, "Continue", continue);
	endif;


  { Set up CMC for date of interview }
  di = cmcode(AHINTM, AHINTY);
  { Initial ranges for CMC date of birth }
  if validyr(V401Y) then
    ldb = setlb(V401M, V401Y, 0);
    udb = setub(V401M, V401Y, 9999);
  else
    ldb = di - 1151;
    udb = di - 180;
  endif;


  { Adjust ranges for CMC date of birth based on age }
  if valid($) then
    { Lower bound of CMC }
    t = ndjlba(ldb, udb, di, di, $);
    if t < 0 then
      errmsg( 00603, V401M, V401Y, $, AHINTM, AHINTY );
      reenter
    else
      ldb = t
    endif;
    { Upper bound of CMC }
    t = adjuba(ldb, udb, di, di, $);
    if t < 0 then
      errmsg( 00603, V401M, V401Y, $, AHINTM, AHINTY );
      reenter
    else
      udb = t
    endif;
  endif;



	if $ <> 98 then
		skip v404;
	endif;

PROC V403
	i = int( (cmcode(AHINTM,AHINTY) - cmcode(V401M,V401Y) - 1) / 12); 

	if $ <> 1 then
		if i in 14,49 & AHINTM = V401M then
		elseif i in 15:49 then
			errmsg( 00403, V401M, V401Y );
			reenter;
		endif;
	elseif $ = 1 then
		if i in 14,49 & AHINTM = V401M then
		elseif !i in 15:49 & !V401M = 98 & !V401Y = 9998 then  
			errmsg( 00403, V401M, V401Y );
			reenter;
		endif;
	
	endif;
PROC V404
preproc
	if V401Y = 9998 & v402 = 98 & v403 in 2,8 then		{ no information}
		errmsg(00401);
		skip next V400X;
	endif;
	if V401Y = 9998 & V402 < 98 then					{ knows her age only }
		if V402 in 15:49 then
			skip V408;
		endif;
	endif;
	if V401Y = 9998 & V402 = 98 & V403 = 1 then			{ Does no know her age, however confirm is between 15 and 49 }
		skip V408;
	endif;

	if V401Y < 9998 then								{ calculate age based in year and month }
		i = int( (cmcode(AHINTM,AHINTY) - cmcode(V401M,V401Y)) / 12);
		if V401M <> 98 then								{ knows month of birth }
			if i in 15:49	 then
				skip v408;
			endif;
		else
			if V402 in 15:49 | V403 = 1 then							{ does not know month of birth } 
				skip v408;
			endif;
		endif;
	endif;

	if V403 = 1 then
		skip to V408;
	endif;

	errmsg(00402);
	skip V431H;


PROC V408
onfocus
  if endinginterview then
	if length(strip($)) = 0 then
	  endsect;
	endif;
  endif;
 
  name = strip(v101(V400D));
  setcapturetype(v408,2);

postproc
  if alphachk( $, 22, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos("X",$) then
	getother( "V430", curocc() );
	enter FL_OTHERS
  endif;

PROC V409
onfocus
  if pos("A",V408) then
	$ = 1;
	noinput;
  endif;

PROC V410
onfocus
  if pos("B",v408) then
	$ = 1;
	noinput;
  endif;

PROC V411
onfocus
  if pos("C",v408) then
	$ = 1;
	noinput;
  endif;

PROC V411A
onfocus
  if pos("D",v408) then
	$ = 1;
	noinput;
  endif;

PROC V412
preproc
  if pos("E",v408) then
	$ = 1;
	noinput;
  endif;

PROC V413
preproc
  if pos("F",v408) then
	$ = 1;
	noinput;
  endif;

PROC V414
preproc
  if pos("G",v408) then
	$ = 1;
	noinput;
  endif;

PROC V415
preproc
  if pos("H",v408) then
	$ = 1;
	noinput;
  endif;

PROC V416
preproc
  if pos("I",v408) then
	$ = 1;
	noinput;
  endif;

PROC V417
preproc
  if pos("J",v408) then
	$ = 1;
	noinput;
  endif;

PROC V418
preproc
  if pos("K",v408) then
	$ = 1;
	noinput;
  endif;

PROC V419
preproc
  if pos("L",v408) then
	$ = 1;
	noinput;
  endif;

PROC V420
preproc
  if pos("M",v408) then
	$ = 1;
	noinput;
  endif;

PROC V421
preproc
  if pos("N",v408) then
	$ = 1;
	noinput;
  endif;
PROC V422
preproc
  if pos("O",v408) then
	$ = 1;
	noinput;
  endif;

PROC V423
preproc
  if pos("P",v408) then
	$ = 1;
	noinput;
  endif;

PROC V424
preproc
  if pos("Q",v408) then
	$ = 1;
	noinput;
  endif;

PROC V425
preproc
  if pos("R",v408) then
	$ = 1;
	noinput;
  endif;

PROC V426
preproc
  if pos("S",v408) then
	$ = 1;
	noinput;
  endif;

PROC V427
preproc
  if pos("T",v408) then
	$ = 1;
	noinput;
  endif;

PROC V428
preproc
  if pos("U",v408) then
	$ = 1;
	noinput;
  endif;

PROC V429
preproc
  if pos("V",v408) then
	$ = 1;
	noinput;
  endif;

PROC V430
preproc
  if pos("X",v408) then
	$ = 1;
	noinput;
  endif;
postproc
  if $ = 1 & pos("X",v408) = 0 then
	getother( getsymbol(), curocc() );
	enter FL_OTHERS
  endif;

PROC V431H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V431M
preproc
set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D431 = sysdate( "dd" );
    M431 = sysdate( "mm" );
    Y431 = sysdate( "YYYY" );
  endif;

postproc
	if xfrom <> 2 then
		outcome( V400E, V433(V400X) );
		V434(V400X) = xintnum;
	endif;
	if demode() = add then
		savepartial();
	endif;

PROC ANTHRO_WOMEN_FORM
preproc
  if endinginterview {| xfrom = 2} then
	advance;  
  endif;
postproc
  if !endinginterview then
	SS_4A = "DONE";
	reenter FLOW_CONTROL;
  endif;


PROC AN400X
preproc
  xwoman   = count( MOD_1001 where NAtoZero(V107) <> 0 );
  do i = 1 while i <= maxrec
    if i <= xwoman then
      AN400X(i) = i;
    else
      AN400X(i) = notappl;
    endif;
  enddo;

  if curocc() > xwoman then   { to run in-Batch }
    endsect
  endif;
  
PROC V400AAM
preproc
  if V400AAH in 94:96 then
    $ = V400AAH;
    noinput;
  endif;

PROC V400AAD
preproc
  { find next woman for height and weight }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!V107(i) in 0,notappl);
    if nextmem = AN400X then
      break
    endif;
  enddo;
  $ = i;


PROC V400ADN
onfocus
  col = curocc();
postproc  
  name = $;

PROC AN405
  if $ = 1 then 
    skip to AN408H;
  endif;
  
PROC AN406
  if ($ < 122 | $ > 200) & $ < 999 & !endinginterview then
  {ENG+}
	errmsg(	00411, name) select("Reenter", $, "Continue", continue) ;
  {+ENG}
  {{FR+}
	errmsg(	00411, name)	select("Saisir à nouveau", $, "Continuer", continue);
  {+FR}}
  endif;

PROC AN407
onfocus
  name = strip(V101(V400AAD));
postproc  
  {ENG+}
  if ($ < 36 | $ > 115) & $ < 999 & !endinginterview then
	errmsg(	00412,name)	select("Reenter", $, "Continue", continue)
  {+ENG}
  {{FR+}
  if ($ < 36 | $ > 115) & $ < 999 & !endinginterview then
	errmsg(	00412,name)	select("Saisir à nouveau", $, "Continuer", continue)
  {+FR}}
  endif;

PROC AN408H
preproc
  if V400AAH in 94:96 then
    $ = V400AAH;
    noinput;
  endif;
  
PROC AN408M
preproc
  if AN408H in 94:96 then
    $ = AN408H;
    noinput;
  endif;

postproc
  if !V400AAH in 94:96 then
    if V400AAH > AN408H | V400AAH = AN408H & V400AAM > $ then
      errmsg( 89997 );
      reenter;
    endif;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_5_FORM
preproc
  if endinginterview and !AHkids then
    skip to MOD_61F_FORM;
  endif;
  if endinginterview then
	if xIntNum = H_MOD5 | xfrom = 2 then
		advance;
	else
		skip MOD_61F_FORM;
	endif;	
  endif;

postproc
  if !endinginterview then
	SS_5 = "DONE";
	reenter FLOW_CONTROL;
  endif;
	complete_v_M5();

PROC V500X
preproc
  { if children under 5 height and weight included }
  xchild   = count( MOD_1001 where NAtoZero(V108) <> 0 );
  do i = 1 while i <= maxrec
    if i <= xchild then
      V500X(i) = i;
    else
      V500X(i) = notappl;
    endif;
  enddo;

  if curocc() > xchild then   { to run in-Batch }
    SS_5 = "DONE";
    endsect
  endif;
  
PROC V500H
preproc
set attributes ($) protect; 
if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
endif;

PROC V500M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D500 = sysdate( "dd" );
    M500 = sysdate( "mm" );
    Y500 = sysdate( "YYYY" );
  endif;

PROC V500D
preproc
  { find next child for height and weight }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!V108(i) in 0,notappl);
    if nextmem = V500X then
      break
    endif;
  enddo;
  $ = i;
  
PROC V500DN
preproc
  $ = V101(V500D);
onfocus
  col = curocc();
postproc
  name = $;
PROC V500E
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster
	if V104(i) >=minageelig then			{ elegible caregiver }
	  x = 0;
	  codes(j)  = i;
   	  labels(j) = V101(i);
      inc(j);
    endif;
  enddo;
  
SetValueSet( @GetSymbol(), codes, labels );
setcapturetype(V500E,1);


postproc
namecar = strip(V101($));

PROC V500EN
preproc
  $ = namecar;

PROC V500F
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Caregiver in %s was recorded as not available (child %s) - revisit when available", "Module 5", V101(V500D)); {+ENG}
    {{FR+}errmsg("Le soignant en %s a été enregistré comme pas disponible (enfant %s) - revisiter lorsque disponible", "Module 5", strip(V101(V500D)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V500E) = 1;
  else
	skip V564H;
  endif;
PROC V501
  if $ <> v102(v500d) then
	errmsg(00501);
  endif;

PROC V502Y
  if $ in 9998,missing | V502D in 98,missing | V502M in 98,missing then
	skip V504;
  endif;

  if dCheck ( V502Y, V502M, V502D ) > 1 then
    errmsg( 89998);
    reenter V502D;
  elseif dcheck( V502Y, V502M, V502D ) = 0 then
    errmsg( 89999);
    reenter V502D;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC V503
preproc
  if dcheck( V502Y, V502M, V502D ) = 1 then 
    $ = 1;
  else
    $ = 2;
  endif;
  noinput;
postproc
  if $ = 1 then 
    skip to V507; 
  endif;

PROC V504
  if $ <> 1 then
	skip V507;
  endif;

PROC V505
  if $ <> 1 then
	skip v507;
  endif;

PROC V506Y
  if $ = 9998 | v506d = 98 | v506m = 98 then
	skip v507;
  endif;

  if dCheck ( V506Y, V506M, V506D ) > 1 then
    errmsg( 89998);
    reenter V506D;
  elseif dcheck( V506Y, V506M, V506D ) = 0 then
    errmsg( 89999);
    reenter V506D;
  endif;

PROC V508
preproc
  if validyr(V502Y) & valid(V502M) then
    $ = int( cmcode(AHINTM, AHINTY) - cmcode(V502M, V502Y) );
  elseif validyr(V506Y) & valid(V506M) then
    $ = int( cmcode(AHINTM, AHINTY) - cmcode(V506M, V506Y) );
  endif;    
  if $ >= 12 then 
    noinput;
  endif;
     
PROC V510
preproc
  if validyr(V502Y) & valid(V502M) then
    if int( (cmcode(AHINTM, AHINTY) - cmcode(V502M, V502Y)) / 12 ) - V507 <> 0 then
      if V502M = AHINTM & V502D > AHINTD then 
        $ = 1;
      else
        $ = 2;
      endif;
    else
      $ = 1;
    endif;
  elseif validyr(V506Y) & valid(V506M) then
    if int( (cmcode(AHINTM, AHINTY) - cmcode(V506M, V506Y)) / 12 ) - V507 <> 0 then
      if V506M = AHINTM & V506D > AHINTD then 
        $ = 1;
      else
        $ = 2;
      endif;
    else
      $ = 1;
    endif;
  else
    $ = 2;
  endif; 


PROC V511
preproc
  if validyr(V502Y) & valid(V502M) then
    if !int( cmcode(AHINTM, AHINTY) - cmcode(V502M, V502Y) ) - V508 in -1:1 then
      $ = 2;
    else
      $ = 1;
    endif;
  elseif validyr(V506Y) & valid(V506M) then
    if !int( cmcode(AHINTM, AHINTY) - cmcode(V506M, V506Y) ) - V508 in -1:1 then
      $ = 2;
    else
      $ = 1;
    endif;
  else
    $ = 2;
  endif; 

postproc
  { check on age in years }
  if V510 = 2 then
    if validyr(V502Y) & valid(V502M) then
      errmsg( 00508,V507,"V502",V502D,V502M,V502Y);
      reenter V502D;
    elseif validyr(V506Y) & valid(V506M) then
      errmsg( 00508,V507,"V506",V506D,V506M,V506Y);
      reenter V506D;
    endif;
  endif;
  { check on age in months }
  if V511 = 2 then
    if validyr(V502Y) & valid(V502M) then
      errmsg( 00509,V508,"V502",V502D,V502M,V502Y);
      reenter V502D;
    elseif validyr(V506Y) & valid(V506M) then
      errmsg( 00509,V508,"V506",V506D,V506M,V506Y);
      reenter V506D; 
    endif;
  endif;
    
    
PROC V513
preproc
  if V507 < 6 then
    $ = 1;
  else
    $ = 2;
  endif;

postproc
  if $ in 2,8 then
	skip to V564H;
  endif;

PROC V519
onfocus
  if V507 < 3 then
    $ = 1;
  else
    $ = 2;
  endif;

postproc
  if $ in 2,8 then
	skip to V564H;
  endif;
  
PROC V520
  if $ in 2,8 then
	skip to V522;
  endif;

PROC V521
  if $ = 1 then
	skip to V523;
  endif;
  
PROC V527
  if $ in 2,8 then
	skip v529;
  endif;

PROC V528
  if ($ > 12) & $ < 90 & !endinginterview then
	{ENG+} errmsg(	00505,name,$)	select("Reenter", $, "Continue", continue)	{+ENG}
	{{FR+} errmsg(	00505,name,$)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC V529
  if $ in 2,8 then
	skip v531;
  endif;

PROC V530
  if ($ > 12) & $ < 90 & !endinginterview then
	{ENG+} errmsg(	00504,name,$)	select("Reenter", $, "Continue", continue)	{+ENG}
	{{FR+} errmsg(	00504,name,$)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC V533
  if $ in 2,8 then
	skip v535;
  endif;

PROC V534
  if ($ > 12) & $ < 90 & !endinginterview then
	{ENG+} errmsg(	00506,name,$)	select("Reenter", $, "Continue", continue)	{+ENG}
	{{FR+} errmsg(	00506,name,$)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC V538
  if alphachk( $, 22, "X" ) then
    errmsg( 09998 );
    reenter    
{ Get other answer }
  elseif pos("X",$) then
	getother( getsymbol(), curocc() );
	enter FL_OTHERS
  endif;

PROC V539
preproc
  if pos("A",v538) then
	$ = 1;
	noinput;
  endif;

PROC V540
preproc
  if pos("B",v538) then
	$ = 1;
	noinput;
  endif;

PROC V541
preproc
  if pos("C",v538) then
	$ = 1;
	noinput;
  endif;

PROC V541A
preproc
  if pos("D",v538) then
	$ = 1;
	noinput;
  endif;

PROC V542
preproc
  if pos("E",v538) then
	$ = 1;
	noinput;
  endif;

PROC V543
preproc
  if pos("F",v538) then
	$ = 1;
	noinput;
  endif;

PROC V544
preproc
  if pos("G",v538) then
	$ = 1;
	noinput;
  endif;

PROC V545
preproc
  if pos("H",v538) then
	$ = 1;
	noinput;
  endif;

PROC V546
preproc
  if pos("I",v538) then
	$ = 1;
	noinput;
  endif;

PROC V547
preproc
  if pos("J",v538) then
	$ = 1;
	noinput;
  endif;

PROC V548
preproc
  if pos("K",v538) then
	$ = 1;
	noinput;
  endif;

PROC V549
preproc
  if pos("L",v538) then
	$ = 1;
	noinput;
  endif;

PROC V550
preproc
  if pos("M",v538) then
	$ = 1;
	noinput;
  endif;

PROC V551
preproc
  if pos("N",v538) then
	$ = 1;
	noinput;
  endif;

PROC V552
preproc
  if pos("O",v538) then
	$ = 1;
	noinput;
  endif;

PROC V553
preproc
  if pos("P",v538) then
	$ = 1;
	noinput;
  endif;

PROC V554
preproc
  if pos("Q",v538) then
	$ = 1;
	noinput;
  endif;

PROC V555
preproc
  if pos("R",v538) then
	$ = 1;
	noinput;
  endif;

PROC V556
preproc
  if pos("S",v538) then
	$ = 1;
	noinput;
  endif;

PROC V557
preproc
  if pos("T",v538) then
	$ = 1;
	noinput;
  endif;

PROC V558
preproc
  if pos("U",v538) then
	$ = 1;
	noinput;
  endif;

PROC V559
preproc
  if pos("V",v538) then
	$ = 1;
	noinput;
  endif;

PROC V560
preproc
  if pos("X",v538) then
	$ = 1;
	noinput;
  endif;
postproc
  if $ = 1 & pos("X",V538) = 0 then
	getother( getsymbol(), curocc() );
	enter FL_OTHERS
  endif;
  
  
PROC V562
preproc
  if length(strip(v538)) > 0 | 
	v539 = 1 | v540 = 1 | v541 = 1 | v542 = 1 | v543 = 1 | v544 = 1 | v545 = 1 | v546 = 1 | v547 = 1 | v548 = 1 | 
	v549 = 1 | v550 = 1 | v551 = 1 | v552 = 1 | v553 = 1 | v554 = 1 | v555 = 1 | v556 = 1 | v557 = 1 | v558 = 1 | 
	v559 = 1 | v560 = 1 then
	
	skip v563; 
  endif;

onfocus
name = strip(v101(v500D));

postproc
if $ in 2,8 then
	skip V564h;
endif;
reenter v538;

PROC V563
onfocus
  name = strip(v101(v500d));
postproc
  if ($ > 12) & $ < 90 & !endinginterview then
	{ENG+} errmsg(	00507,name,$)	select("Reenter", $, "Continue", continue)	{+ENG}
	{{FR+} errmsg(	00507,name,$)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC V564H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
     time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V564M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D564 = sysdate( "dd" );
    M564 = sysdate( "mm" );
    Y564 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then 
    outcome( V500F, V566(V500X) );
    V567(V500X) = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC ANTHRO_CHILD_FORM
preproc
  if endinginterview {| xfrom = 2} then	{ need to allow this field to be entered during seconadry editing }
	advance;
  endif;
postproc
  if !endinginterview then
	SS_5A = "DONE";
	reenter FLOW_CONTROL;
  endif;

PROC AN500X
preproc
  { if children under 5 height and weight included }
  xchild   = count( MOD_1001 where V108 <> 0 );
  do i = 1 while i <= maxrec
    if i <= xchild then
      AN500X(i) = i;
    else
      AN500X(i) = notappl;
    endif;
  enddo;

  if curocc() > xchild then   { to run in-Batch }
    endsect
  endif;

PROC V500AAM
preproc
  if V500AAH in 94:96 then
    $ = V500AAH;
    noinput;
  endif;

PROC AN500FN
onfocus
  col = curocc();

postproc
  name = $;
  
PROC V500AD
preproc
  { find next child for height and weight }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!V108(i) in 0,notappl);
    if nextmem = AN500X then
      break
    endif;
  enddo;
  $ = i;

postproc
  ACNAME = V101($);
  
PROC AN516
onfocus
  name = AN500FN;
postproc
  if ($ < 45 |$ > 120) & $ < 990 & !endinginterview then
	{ENG+} errmsg(	00511,name,$)	select("Reenter", $, "Continue", continue)	{+ENG}
    {{FR+} errmsg(	00511,name,$)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC AN517
onfocus
  name = AN500FN;

PROC AN518
onfocus
  name = AN500FN;
postproc
  if ($ < 1.5 |$ > 25) & $ < 90 & !endinginterview then
    if xfrom <> 2 then 
	  {ENG+} errmsg(	00512,name,$)	select("Reenter", $, "Continue", continue)	{+ENG}
  	  {{FR+} errmsg(	00512,name,$)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
    endif;
  endif;

PROC V519H
preproc
  if V500AAH in 94:96 then
    $ = V500AAH;
    noinput;
  endif;
  
PROC V519M
preproc
  if V500AAH in 94:96 then
    $ = V500AAH;
    noinput;
  endif;
postproc
  if !V500AAH in 94:96 then
    if V500AAH > V519H | V500AAH = V519H & V500AAM > $ then
      errmsg( 89997 );
      reenter
    endif;
  endif;
  savepartial();

PROC MOD_61F_FORM
preproc
  if endinginterview then
	if (xIntNum = H_MOD6f & V101B = 1) | ( xfrom = 2 & V101B = 1 ) then
  	  advance;
	else
	  skip MOD_61M_FORM;
	endif;	
  endif;

PROC V6100H
preproc
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V6100M
preproc
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D6100F = sysdate( "dd" );
    M6100F = sysdate( "mm" );
    Y6100F = sysdate( "YYYY" );
  endif;

PROC V6100C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster
	if V104(i) >= minagedm & v102(i) = 2 then			{ elegible women }
	  codes(j)  = i;
   	  labels(j) = v101(i);
      inc(j);
    endif;
  enddo;
  
  SetValueSet( @GetSymbol(), codes, labels );

postproc
  if V101B = 1 & $ <> 2 then 
    errmsg( 00601, "female", 2, V101(2) );
    reenter;
  endif;
  name = strip(v101($));  

PROC V6100CN
preproc
  $ = name;

PROC V6100D
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent to %s was recorded as not available (%s) - revisit when available", "Module 6F", V101(V6100C)); {+ENG}
    {{FR+}  errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 6F", strip(V101(V6100C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V6100C) = 1;
  else
	skip V6604H;
  endif;

PROC V6100E
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09994 );
    reenter    
  endif;

PROC V6102
  { Set up CMC for date of interview }
  di = cmcode(AHINTM, AHINTY);
  { Initial ranges for CMC date of birth }
  if validyr(V6101Y) then
    ldb = setlb(V6101M, V6101Y, 0);
    udb = setub(V6101M, V6101Y, 9999);
  else
    ldb = di - 1151;
    udb = di - 180;
  endif;

  if !($ - V104(V6100C)) in -3:3 & !endinginterview then
    errmsg( 00602, $, V104(V6100C) )
  endif;

  { Adjust ranges for CMC date of birth based on age }
  if valid($) then
    { Lower bound of CMC }
    t = ndjlba(ldb, udb, di, di, $);
    if t < 0 then
      errmsg( 00603, V6101M, V6101Y, $, AHINTM, AHINTY );
      reenter
    else
      ldb = t
    endif;
    { Upper bound of CMC }
    t = adjuba(ldb, udb, di, di, $);
    if t < 0 then
      errmsg( 00603, V6101M, V6101Y, $, AHINTM, AHINTY );
      reenter
    else
      udb = t
    endif;
  endif;

  if $ < 98 then
	skip to V6104;
  endif;

PROC V6103
	if $ <> 1 then
		if (AHINTY - V6101Y) > 18 & !V6101Y = 9998 & !V6101M = 98  then
			errmsg( 00403, V6101M, V6101Y );
			reenter;
		elseif (AHINTY - V6101Y) = 18 & AHINTM > V6101M then
			errmsg( 00403, V6101M, V6101Y );
			reenter;
		endif;
	elseif $ = 1 then
		if (AHINTY - V6101Y) < 18 & !V6101Y = 9998 & !V6101M = 98 then
			errmsg( 00403, V6101M, V6101Y );
			reenter;
		elseif (AHINTY - V6101Y) = 18 & AHINTM < V6101M & !V6101Y = 9998 & !V6101M = 98 then
			errmsg( 00403, V6101M, V6101Y );
			reenter;
		endif;	
	endif;
PROC V6104
preproc
  { TO DO!! - add in DOB/age consistency check first }
  if V6102 < 18 then
    $ = 2
  elseif V6103 in 2,8 then
    $ = V6103
  else
    $ = 1
  endif;

postproc
  if $ in 2,8 then
	skip to V6604H;
	{ TO DO !! need to fix age in HH? }
  endif;

PROC V6105
onfocus
  name = strip(v101(v6100c));  

postproc
  if $ in 1,2 then
	skip mod_62f_form;
  endif;
  
PROC V6106
onfocus
  name = strip(v101(v6100c));  

postproc
  if $ = 3 then
	skip mod_62f_form;
  endif;

PROC V6107
onfocus
  name = strip(v101(v6100c));  

PROC V6200C
preproc
  $ = curocc();

PROC V6201
preproc
  if V6200C in 7:8 then
    skip to V6202;
  endif; 
onfocus
  if getlanguage() = "ENG" then 
    name = strip(getlabel(V6200C_VS1,V6200C));
  { !! TO DO - add value sets of translated activities to dictionary in order of langauges in CAPI, following naming convention below }
 { elseif getlanguage() = "LG2" then	
    name = strip(getlabel(V6200C_VS2,V6200C));
  elseif getlanguage() = "LG3" then;
    name = strip(getlabel(V6200C_VS3,V6200C));
  elseif getlanguage() = "LG4" then
    name = strip(getlabel(V6200C_VS4,V6200C));
  elseif getlanguage() = "LG5" then
    name = strip(getlabel(V6200C_VS5,V6200C));
  elseif getlanguage() = "LG6" then
    name = strip(getlabel(V6200C_VS6,V6200C)); }
  endif;
  name2 = edit("9999",V6200C);
postproc
  if $ = 2 then
	skip next V6200C;
  endif;
  

PROC V6202
onfocus
  if getlanguage() = "ENG" then
    name = strip(getlabel(V6200C_VS1,V6200C));
  { !! TO DO - add value sets of translated activities to dictionary in order of langauges in CAPI, following naming convention below }
{  elseif getlanguage() = "LG2" then
    name = strip(getlabel(V6200C_VS2,V6200C));
  elseif getlanguage() = "LG3" then;
    name = strip(getlabel(V6200C_VS3,V6200C));
  elseif getlanguage() = "LG4" then
    name = strip(getlabel(V6200C_VS4,V6200C));
  elseif getlanguage() = "LG5" then
    name = strip(getlabel(V6200C_VS5,V6200C));
  elseif getlanguage() = "LG6" then
    name = strip(getlabel(V6200C_VS6,V6200C));}
  endif;
  name2 = edit("9999",V6200C);
postproc
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;
  if pos("X", $) then
    skip to next V6200C;
  endif;
  
PROC V6202AA
preproc
  if pos("A", V6202 ) & length(strip(V6202)) = 1 then 
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 1 then
    skip to next V6200C;
  endif;
  
PROC V6203
onfocus
  if getlanguage() = "ENG" then
    name = strip(getlabel(V6200C_VS1,V6200C));
  { !! TO DO - add value sets of translated activities to dictionary in order of langauges in CAPI, following naming convention below }
{  elseif getlanguage() = "LG2" then
    name = strip(getlabel(V6200C_VS2,V6200C));
  elseif getlanguage() = "LG3" then;
    name = strip(getlabel(V6200C_VS3,V6200C));
  elseif getlanguage() = "LG4" then
    name = strip(getlabel(V6200C_VS4,V6200C));
  elseif getlanguage() = "LG5" then
    name = strip(getlabel(V6200C_VS5,V6200C));
  elseif getlanguage() = "LG6" then
    name = strip(getlabel(V6200C_VS6,V6200C)); }
  endif;
  name2 = edit("9999",V6200C);

PROC V6204
onfocus
  if getlanguage() = "ENG" then
    name = strip(getlabel(V6200C_VS1,V6200C));
  { !! TO DO - add value sets of translated activities to dictionary in order of langauges in CAPI, following naming convention below }
{  elseif getlanguage() = "LG2" then
    name = strip(getlabel(V6200C_VS2,V6200C));
  elseif getlanguage() = "LG3" then;
    name = strip(getlabel(V6200C_VS3,V6200C));
  elseif getlanguage() = "LG4" then
    name = strip(getlabel(V6200C_VS4,V6200C));
  elseif getlanguage() = "LG5" then
    name = strip(getlabel(V6200C_VS5,V6200C));
  elseif getlanguage() = "LG6" then
    name = strip(getlabel(V6200C_VS6,V6200C)); }
  endif;
  name2 = edit("9999",V6200C);
postproc
  if V6200C in 7:8 then
    skip to next V6200C;
  endif;   

PROC V6205
onfocus
  if getlanguage() = "ENG" then
    name = strip(getlabel(V6200C_VS1,V6200C));
  { !! TO DO - add value sets of translated activities to dictionary in order of langauges in CAPI, following naming convention below }
{  elseif getlanguage() = "LG2" then
    name = strip(getlabel(V6200C_VS2,V6200C));
  elseif getlanguage() = "LG3" then;
    name = strip(getlabel(V6200C_VS3,V6200C));
  elseif getlanguage() = "LG4" then
    name = strip(getlabel(V6200C_VS4,V6200C));
  elseif getlanguage() = "LG5" then
    name = strip(getlabel(V6200C_VS5,V6200C));
  elseif getlanguage() = "LG6" then
    name = strip(getlabel(V6200C_VS6,V6200C)); }
  endif;
  name2 = edit("9999",V6200C);

PROC V6300AC
preproc
  $ = curocc();

PROC V6301
preproc
  if curocc() = 1 then
    if V240A > 0 then
      $ = 1;
      noinput;
    endif;    
  elseif curocc() = 2 then
    if V226A > 0 | V226B > 0 | V226C > 0 then
      $ = 1;
      noinput;
    endif;
  elseif curocc() = 3 then
    if V226D > 0 | V226E > 0 then
      $ = 1;
      noinput;
    endif;
  elseif curocc() = 4 then
    if V226F > 0 then
      $ = 1;
      noinput;
    endif;
  endif; 
onfocus
  name = strip(getlabel(v6300ac,v6300ac));

postproc
  if $ = 2 then
	skip next V6300AC;
  endif;
	  
PROC V6303
onfocus
  name = strip(getlabel(V6300AC,V6300AC));

postproc
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter;  
  elseif ( pos( "B", $ ) | pos( "C", $ ) | pos( "D", $ ) ) & !pos( "A", $ ) then
    errmsg( 00605 );
    reenter;      
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;

PROC V6300BC
preproc
$ = curocc();

PROC V6308
onfocus
  name = strip(getlabel(v6300bc,v6300bc));

postproc
  if $ in 4,8 then
	skip next v6300bc;
  endif;

PROC V6309
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;

PROC V6310
onfocus
  name = strip(getlabel(v6300bc,v6300bc));

postproc
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter  
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;

PROC V6311
preproc
  if count( MOD_63BF where V6308 in 4,8 ) < soccurs( MOD_63BF ) then
    skip to V6400C(1);
  endif;

PROC V6400C
preproc
  $ = curocc();

PROC V6404
onfocus
  name = strip(getlabel(V6400C,V6400C));

postproc
if $ in 2,8 then
	skip next V6400C;
endif;
if curocc() = 11 then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
endif;
	
PROC V6405
onfocus
  name = strip(getlabel(V6400C,V6400C));

PROC V6601P_15
onfocus

{ENG+} 
if curocc() = 1 then
 	name1 = "4:00 AM";
	name2 = "Night";
	V6601H(1)= 4;
elseif curocc() = 2 then
	name1 = "5:00 AM";
	name2 = "Night";
	V6601H(2)= 5;
elseif curocc() = 3 then
	name1 = "6:00 AM";
	name2 = "Morning";
	V6601H(3)= 6;
elseif curocc() = 4 then
	name1 = "7:00 AM";
	name2 = "Morning";
	V6601H(4)= 7;
elseif curocc() = 5 then
	name1 = "8:00 AM";
	name2 = "Day";
	V6601H(5)= 8;
elseif curocc() = 6 then
	name1 = "9:00 AM";
	name2 = "Day";
	V6601H(6)= 9;
elseif curocc() = 7 then
	name1 = "10:00 AM";
	name2 = "Day";
	V6601H(7)= 10;
elseif curocc() = 8 then
	name1 = "11:00 AM";
	name2 = "Day";
	V6601H(8)= 11;
elseif curocc() = 9 then
	name1 = "12:NOON";
	name2 = "Day";
	V6601H(9)= 12;
elseif curocc() = 10 then
	name1 = "13:00 PM";
	name2 = "Day";
	V6601H(10)= 13;
elseif curocc() = 11 then
	name1 = "14:00 PM";
	name2 = "Day";
	V6601H(11)= 14;
elseif curocc() = 12 then
	name1 = "15:00 PM";
	name2 = "Day";
	V6601H(12)= 15;
elseif curocc() = 13 then
	name1 = "16:00 PM";
	name2 = "Day";
	V6601H(13)= 16;
elseif curocc() = 14 then
	name1 = "17:00 PM";
	name2 = "Day";
	V6601H(14)= 17;
elseif curocc() = 15 then
	name1 = "18:00 PM";
	name2 = "Evening";
	V6601H(15)= 18;
elseif curocc() = 16 then
	name1 = "19:00 PM";
	name2 = "Night";
	V6601H(16)= 19;
elseif curocc() = 17 then
	name1 = "20:00 PM";
	name2 = "Night";
	V6601H(17)= 20;
elseif curocc() = 18 then
	name1 = "21:00 PM";
	name2 = "Night";
	V6601H(18)= 21;
elseif curocc() = 19 then
	name1 = "22:00 PM";
	name2 = "Night";
	V6601H(19)= 22;
elseif curocc() = 20 then
	name1 = "23:00 PM";
	name2 = "Night";
	V6601H(20)= 23;
elseif curocc() = 21 then
	name1 = "0:00 MIDNIGHT";
	name2 = "Night";
	V6601H(21)= 0;
elseif curocc() = 22 then
	name1 = "1:00 AM";
	name2 = "Night";
	V6601H(22)= 1;
elseif curocc() = 23 then
	name1 = "2:00 AM";
	name2 = "Night";
	V6601H(23)= 2;
elseif curocc() = 24 then
	name1 = "3:00 AM";
	name2 = "Night";
	V6601H(24)= 3;
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:00 du matin";
	name2 = "Soir";
	V6601H(1)= 4;
elseif curocc() = 2 then
	name1 = "5:00 du matin";
	name2 = "Soir";
	V6601H(2)= 5;
elseif curocc() = 3 then
	name1 = "6:00 du matin";
	name2 = "Matin";
	V6601H(3)= 6;
elseif curocc() = 4 then
	name1 = "7:00 du matin";
	name2 = "Matin";
	V6601H(4)= 7;
elseif curocc() = 5 then
	name1 = "8:00 du matin";
	name2 = "Journée";
	V6601H(5)= 8;
elseif curocc() = 6 then
	name1 = "9:00 du matin";
	name2 = "Journée";
	V6601H(6)= 9;
elseif curocc() = 7 then
	name1 = "10:00 du matin";
	name2 = "Journée";
	V6601H(7)= 10;
elseif curocc() = 8 then
	name1 = "11:00 du matin";
	name2 = "Journée";
	V6601H(8)= 11;
elseif curocc() = 9 then
	name1 = "12:00 midi";
	name2 = "Journée";
	V6601H(9)= 12;
elseif curocc() = 10 then
	name1 = "13:00";
	name2 = "Journée";
	V6601H(10)= 13;
elseif curocc() = 11 then
	name1 = "14:00";
	name2 = "Journée";
	V6601H(11)= 14;
elseif curocc() = 12 then
	name1 = "15:00";
	name2 = "Journée";
	V6601H(12)= 15;
elseif curocc() = 13 then
	name1 = "16:00";
	name2 = "Journée";
	V6601H(13)= 16;
elseif curocc() = 14 then
	name1 = "17:00";
	name2 = "Journée";
	V6601H(14)= 17;
elseif curocc() = 15 then
	name1 = "18:00";
	name2 = "Soirée";
	V6601H(15)= 18;
elseif curocc() = 16 then
	name1 = "19:00";
	name2 = "Soir";
	V6601H(16)= 19;
elseif curocc() = 17 then
	name1 = "20:00";
	name2 = "Soir";
	V6601H(17)= 20;
elseif curocc() = 18 then
	name1 = "21:00";
	name2 = "Soir";
	V6601H(18)= 21;
elseif curocc() = 19 then
	name1 = "22:00";
	name2 = "Soir";
	V6601H(19)= 22;
elseif curocc() = 20 then
	name1 = "23:00";
	name2 = "Soir";
	V6601H(20)= 23;
elseif curocc() = 21 then
	name1 = "0:00 Minuit";
	name2 = "Soir";
	V6601H(21)= 0;
elseif curocc() = 22 then
	name1 = "1:00 du matin";
	name2 = "Soir";
	V6601H(22)= 1;
elseif curocc() = 23 then
	name1 = "2:00 du matin";
	name2 = "Soir";
	V6601H(23)= 2;
elseif curocc() = 24 then
	name1 = "3:00 du matin";
	name2 = "Soir";
	V6601H(24)= 3;
endif;
	{+FR}}

postproc
if $="X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
endif;
 

PROC V6601P_30
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:15 AM";
	name2 = "Night";
elseif curocc() = 2 then
	name1 = "5:15 AM";
	name2 = "Night";
elseif curocc() = 3 then
	name1 = "6:15 AM";
	name2 = "Morning";
elseif curocc() = 4 then
	name1 = "7:15 AM";
	name2 = "Morning";
elseif curocc() = 5 then
	name1 = "8:15 AM";
	name2 = "Day";
elseif curocc() = 6 then
	name1 = "9:15 AM";
	name2 = "Day";
elseif curocc() = 7 then
	name1 = "10:15 AM";
	name2 = "Day";
elseif curocc() = 8 then
	name1 = "11:15 AM";
	name2 = "Day";
elseif curocc() = 9 then
	name1 = "12:15 PM";
	name2 = "Day";
elseif curocc() = 10 then
	name1 = "13:15 PM";
	name2 = "Day";
elseif curocc() = 11 then
	name1 = "14:15 PM";
	name2 = "Day";
elseif curocc() = 12 then
	name1 = "15:15 PM";
	name2 = "Day";
elseif curocc() = 13 then
	name1 = "16:15 PM";
	name2 = "Day";
elseif curocc() = 14 then
	name1 = "17:15 PM";
	name2 = "Day";
elseif curocc() = 15 then
	name1 = "18:15 PM";
	name2 = "Evening";
elseif curocc() = 16 then
	name1 = "19:15 PM";
	name2 = "Night";
elseif curocc() = 17 then
	name1 = "20:15 PM";
	name2 = "Night";
elseif curocc() = 18 then
	name1 = "21:15 PM";
	name2 = "Night";
elseif curocc() = 19 then
	name1 = "22:15 PM";
	name2 = "Night";
elseif curocc() = 20 then
	name1 = "23:15 PM";
	name2 = "Night";
elseif curocc() = 21 then
	name1 = "0:15 AM";
	name2 = "Night";
elseif curocc() = 22 then
	name1 = "1:15 AM";
	name2 = "Night";
elseif curocc() = 23 then
	name1 = "2:15 AM";
	name2 = "Night";
elseif curocc() = 24 then
	name1 = "3:15 AM";
	name2 = "Night";
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:15 du matin";
	name2 = "Soir";
elseif curocc() = 2 then
	name1 = "5:15 du matin";
	name2 = "Soir";
elseif curocc() = 3 then
	name1 = "6:15 du matin";
	name2 = "Matin";
elseif curocc() = 4 then
	name1 = "7:15 du matin";
	name2 = "Matin";
elseif curocc() = 5 then
	name1 = "8:15 du matin";
	name2 = "Journée";
elseif curocc() = 6 then
	name1 = "9:15 du matin";
	name2 = "Journée";
elseif curocc() = 7 then
	name1 = "10:15 du matin";
	name2 = "Journée";
elseif curocc() = 8 then
	name1 = "11:15 du matin";
	name2 = "Journée";
elseif curocc() = 9 then
	name1 = "12:15 midi";
	name2 = "Journée";
elseif curocc() = 10 then
	name1 = "13:15";
	name2 = "Journée";
elseif curocc() = 11 then
	name1 = "14:15";
	name2 = "Journée";
elseif curocc() = 12 then
	name1 = "15:15";
	name2 = "Journée";
elseif curocc() = 13 then
	name1 = "16:15";
	name2 = "Journée";
elseif curocc() = 14 then
	name1 = "17:15";
	name2 = "Journée";
elseif curocc() = 15 then
	name1 = "18:15";
	name2 = "Soirée";
elseif curocc() = 16 then
	name1 = "19:15";
	name2 = "Soir";
elseif curocc() = 17 then
	name1 = "20:15";
	name2 = "Soir";
elseif curocc() = 18 then
	name1 = "21:15";
	name2 = "Soir";
elseif curocc() = 19 then
	name1 = "22:15";
	name2 = "Soir";
elseif curocc() = 20 then
	name1 = "23:15";
	name2 = "Soir";
elseif curocc() = 21 then
	name1 = "0:15 Minuit";
	name2 = "Soir";
elseif curocc() = 22 then
	name1 = "1:15 du matin";
	name2 = "Soir";
elseif curocc() = 23 then
	name1 = "2:15 du matin";
	name2 = "Soir";
elseif curocc() = 24 then
	name1 = "3:15 du matin";
	name2 = "Soir";
endif;
	{+FR}}
postproc
  if $ = "X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;


PROC V6601P_45
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:30 AM";
	name2 = "Night";
elseif curocc() = 2 then
	name1 = "5:30 AM";
	name2 = "Night";
elseif curocc() = 3 then
	name1 = "6:30 AM";
	name2 = "Morning";
elseif curocc() = 4 then
	name1 = "7:30 AM";
	name2 = "Day";
elseif curocc() = 5 then
	name1 = "8:30 AM";
	name2 = "Day";
elseif curocc() = 6 then
	name1 = "9:30 AM";
	name2 = "Day";
elseif curocc() = 7 then
	name1 = "10:30 AM";
	name2 = "Day";
elseif curocc() = 8 then
	name1 = "11:30 AM";
	name2 = "Day";
elseif curocc() = 9 then
	name1 = "12:30 PM";
	name2 = "Day";
elseif curocc() = 10 then
	name1 = "13:30 PM";
	name2 = "Day";
elseif curocc() = 11 then
	name1 = "14:30 PM";
	name2 = "Day";
elseif curocc() = 12 then
	name1 = "15:30 PM";
	name2 = "Day";
elseif curocc() = 13 then
	name1 = "16:30 PM";
	name2 = "Day";
elseif curocc() = 14 then
	name1 = "17:30 PM";
	name2 = "Evening";
elseif curocc() = 15 then
	name1 = "18:30 PM";
	name2 = "Night";
elseif curocc() = 16 then
	name1 = "19:30 PM";
	name2 = "Night";
elseif curocc() = 17 then
	name1 = "20:30 PM";
	name2 = "Night";
elseif curocc() = 18 then
	name1 = "21:30 PM";
	name2 = "Night";
elseif curocc() = 19 then
	name1 = "22:30 PM";
	name2 = "Night";
elseif curocc() = 20 then
	name1 = "23:30 PM";
	name2 = "Night";
elseif curocc() = 21 then
	name1 = "0:30 MIDNIGHT";
	name2 = "Night";
elseif curocc() = 22 then
	name1 = "1:30 AM";
	name2 = "Night";
elseif curocc() = 23 then
	name1 = "2:30 AM";
	name2 = "Night";
elseif curocc() = 24 then
	name1 = "3:30 AM";
	name2 = "Night";
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:30 du matin";
	name2 = "Soir";
elseif curocc() = 2 then
	name1 = "5:30 du matin";
	name2 = "Soir";
elseif curocc() = 3 then
	name1 = "6:30 du matin";
	name2 = "Matin";
elseif curocc() = 4 then
	name1 = "7:30 du matin";
	name2 = "Matin";
elseif curocc() = 5 then
	name1 = "8:30 du matin";
	name2 = "Journée";
elseif curocc() = 6 then
	name1 = "9:30 du matin";
	name2 = "Journée";
elseif curocc() = 7 then
	name1 = "10:30 du matin";
	name2 = "Journée";
elseif curocc() = 8 then
	name1 = "11:30 du matin";
	name2 = "Journée";
elseif curocc() = 9 then
	name1 = "12:30 midi";
	name2 = "Journée";
elseif curocc() = 10 then
	name1 = "13:30";
	name2 = "Journée";
elseif curocc() = 11 then
	name1 = "14:30";
	name2 = "Journée";
elseif curocc() = 12 then
	name1 = "15:30";
	name2 = "Journée";
elseif curocc() = 13 then
	name1 = "16:30";
	name2 = "Journée";
elseif curocc() = 14 then
	name1 = "17:30";
	name2 = "Journée";
elseif curocc() = 15 then
	name1 = "18:30";
	name2 = "Soirée";
elseif curocc() = 16 then
	name1 = "19:30";
	name2 = "Soir";
elseif curocc() = 17 then
	name1 = "20:30";
	name2 = "Soir";
elseif curocc() = 18 then
	name1 = "21:30";
	name2 = "Soir";
elseif curocc() = 19 then
	name1 = "22:30";
	name2 = "Soir";
elseif curocc() = 20 then
	name1 = "23:30";
	name2 = "Soir";
elseif curocc() = 21 then
	name1 = "0:30 Minuit";
	name2 = "Soir";
elseif curocc() = 22 then
	name1 = "1:30 du matin";
	name2 = "Soir";
elseif curocc() = 23 then
	name1 = "2:30 du matin";
	name2 = "Soir";
elseif curocc() = 24 then
	name1 = "3:30 du matin";
	name2 = "Soir";
endif;
	{+FR}}
postproc
  if $ = "X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;


PROC V6601P_60
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:45 AM";
	name2 = "Night";
elseif curocc() = 2 then
	name1 = "5:45 AM";
	name2 = "Night";
elseif curocc() = 3 then
	name1 = "6:45 AM";
	name2 = "Morning";
elseif curocc() = 4 then
	name1 = "7:45 AM";
	name2 = "Day";
elseif curocc() = 5 then
	name1 = "8:45 AM";
	name2 = "Day";
elseif curocc() = 6 then
	name1 = "9:45 AM";
	name2 = "Day";
elseif curocc() = 7 then
	name1 = "10:45 AM";
	name2 = "Day";
elseif curocc() = 8 then
	name1 = "11:45 AM";
	name2 = "Day";
elseif curocc() = 9 then
	name1 = "12:45 PM";
	name2 = "Day";
elseif curocc() = 10 then
	name1 = "13:45 PM";
	name2 = "Day";
elseif curocc() = 11 then
	name1 = "14:45 PM";
	name2 = "Day";
elseif curocc() = 12 then
	name1 = "15:45 PM";
	name2 = "Day";
elseif curocc() = 13 then
	name1 = "16:45 PM";
	name2 = "Day";
elseif curocc() = 14 then
	name1 = "17:45 PM";
	name2 = "Evening";
elseif curocc() = 15 then
	name1 = "18:45 PM";
	name2 = "Night";
elseif curocc() = 16 then
	name1 = "19:45 PM";
	name2 = "Night";
elseif curocc() = 17 then
	name1 = "20:45 PM";
	name2 = "Night";
elseif curocc() = 18 then
	name1 = "21:45 PM";
	name2 = "Night";
elseif curocc() = 19 then
	name1 = "22:45 PM";
	name2 = "Night";
elseif curocc() = 20 then
	name1 = "23:45 PM";
	name2 = "Night";
elseif curocc() = 21 then
	name1 = "0:45 MIDNIGHT";
	name2 = "Night";
elseif curocc() = 22 then
	name1 = "1:45 AM";
	name2 = "Night";
elseif curocc() = 23 then
	name1 = "2:45 AM";
	name2 = "Night";
elseif curocc() = 24 then
	name1 = "3:45 AM";
	name2 = "Night";
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:45 du matin";
	name2 = "Soir";
elseif curocc() = 2 then
	name1 = "5:45 du matin";
	name2 = "Soir";
elseif curocc() = 3 then
	name1 = "6:45 du matin";
	name2 = "Matin";
elseif curocc() = 4 then
	name1 = "7:45 du matin";
	name2 = "Matin";
elseif curocc() = 5 then
	name1 = "8:45 du matin";
	name2 = "Journée";
elseif curocc() = 6 then
	name1 = "9:45 du matin";
	name2 = "Journée";
elseif curocc() = 7 then
	name1 = "10:45 du matin";
	name2 = "Journée";
elseif curocc() = 8 then
	name1 = "11:45 du matin";
	name2 = "Journée";
elseif curocc() = 9 then
	name1 = "12:45 midi";
	name2 = "Journée";
elseif curocc() = 10 then
	name1 = "13:45";
	name2 = "Journée";
elseif curocc() = 11 then
	name1 = "14:45";
	name2 = "Journée";
elseif curocc() = 12 then
	name1 = "15:45";
	name2 = "Journée";
elseif curocc() = 13 then
	name1 = "16:45";
	name2 = "Journée";
elseif curocc() = 14 then
	name1 = "17:45";
	name2 = "Journée";
elseif curocc() = 15 then
	name1 = "18:45";
	name2 = "Soirée";
elseif curocc() = 16 then
	name1 = "19:45";
	name2 = "Soir";
elseif curocc() = 17 then
	name1 = "20:45";
	name2 = "Soir";
elseif curocc() = 18 then
	name1 = "21:45";
	name2 = "Soir";
elseif curocc() = 19 then
	name1 = "22:45";
	name2 = "Soir";
elseif curocc() = 20 then
	name1 = "23:45";
	name2 = "Soir";
elseif curocc() = 21 then
	name1 = "0:45 Minuit";
	name2 = "Soir";
elseif curocc() = 22 then
	name1 = "1:45 du matin";
	name2 = "Soir";
elseif curocc() = 23 then
	name1 = "2:45 du matin";
	name2 = "Soir";
elseif curocc() = 24 then
	name1 = "3:45 du matin";
	name2 = "Soir";
endif;
	{+FR}}
postproc
  if $="X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;
  savepartial();

PROC MOD_66BF_FORM
postproc
  if !endinginterview then
	SS_6F = "DONE";
	reenter FLOW_CONTROL;
  endif;
  
PROC V6604H
preproc
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V6604M
preproc
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D6604F = sysdate( "dd" );
    M6604F = sysdate( "mm" );
    Y6604F = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V6100D, V6605 );
    V6606 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_61M_FORM
preproc
  if endinginterview then
	if ( xIntNum = H_MOD6m & V101A = 1 & V101B = 1 ) | ( xfrom = 2 & V101A = 1 & V101B = 1 ) then
	  advance;
	else
	  skip MOD_790_form;
	endif;	
  endif;

PROC M6100H
preproc
set attributes ($) protect; 
if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
endif;

PROC M6100M
preproc
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D6100 = sysdate( "dd" );
    M6100 = sysdate( "mm" );
    Y6100 = sysdate( "YYYY" );
  endif;

PROC M6100C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster
	if V104(i) >= minagedm & V102(i) = 1 then			{ elegible men }
	  codes(j)  = i;
   	  labels(j) = V101(i);
      inc(j);
    endif;
  enddo;
  
  SetValueSet( @GetSymbol(), codes, labels );

postproc
  if V101A = 1 & $ <> 1 then 
    errmsg( 00601, "male", 1, V101(1) );
    reenter;
  endif;
  name = strip(v101($));  

PROC M6100CN
preproc
  $ = name;

PROC M6100D
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent to %s was recorded as not available (%s) - revisit when available", "Module 6M", V101(M6100C)); {+ENG}
    {{FR+}  errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 6M", strip(V101(M6100C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(M6100C) = 1;
  else
	skip M6604H;
  endif;

PROC M6100E
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09994 );
    reenter      
  endif;

PROC M6102
  { Set up CMC for date of interview }
  di = cmcode(AHINTM, AHINTY);
  { Initial ranges for CMC date of birth }
  if validyr(M6101Y) then
    ldb = setlb(M6101M, M6101Y, 0);
    udb = setub(M6101M, M6101Y, 9999);
  else
    ldb = di - 1151;
    udb = di - 180;
  endif;

  if !($ - V104(M6100C)) in -4:4 & demode() = add then
    errmsg( 00602, $, V104(M6100C) )
  endif;

  { Adjust ranges for CMC date of birth based on age }
  if valid($) then
    { Lower bound of CMC }
    t = ndjlba(ldb, udb, di, di, $);
    if t < 0 then
      errmsg( 00603, M6101M, M6101Y, $, AHINTM, AHINTY );
      reenter
    else
      ldb = t
    endif;
    { Upper bound of CMC }
    t = adjuba(ldb, udb, di, di, $);
    if t < 0 then
      errmsg( 00603, M6101M, M6101Y, $, AHINTM, AHINTY );
      reenter
    else
      udb = t
    endif;
  endif;
  
  if $ < 98 then
	skip M6104;
  endif;

PROC M6104
preproc
{ TO DO!! add in DOB/age consistency check here first }
  if M6102 < 18 then
    $ = 2
  elseif M6103 in 2,8 then
    $ = M6103
  else
    $ = 1
  endif;
postproc
  if $ in 2,8 then
  { TO DO!! need to correct age in HH - error message? }
	skip M6604H;
  endif;

PROC M6105
onfocus
  name = strip(v101(m6100c));  

postproc
  if $ in 1,2 then
	skip mod_62m_form;
  endif;
  
PROC M6106
onfocus
  name = strip(v101(m6100c));  
postproc
  if $ = 3 then
	skip mod_62m_form;
  endif;
  
PROC M6107
onfocus
  name = strip(v101(m6100c));  

PROC M6200C
preproc
  $ = curocc();

PROC M6201
preproc
  if M6200C in 7:8 then
    skip to M6202;
  endif; 
  
onfocus
  name = strip(getlabel(M6200C,M6200C));
postproc
  if $ = 2 then 
    skip to next M6200C
  endif;

PROC M6202
onfocus
  name = strip(getlabel(M6200C,M6200C));
postproc
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;
  if pos("X",$) then
    skip to next M6200C;
  endif;

PROC M6202AA
preproc
  if pos("A", M6202 ) & length(strip(M6202)) = 1 then 
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 1 then
    skip to next M6200C;
  endif;
  
PROC M6203
onfocus
  name = strip(getlabel(M6200C,M6200C));
PROC M6204
onfocus
  name = strip(getlabel(M6200C,M6200C));
postproc
  if M6200C in 7:8 then
    skip to next M6200C;
  endif; 
PROC M6205
onfocus
  name = strip(getlabel(M6200C,M6200C));
  
PROC M6300AC
preproc
  $ = curocc();

PROC M6301
onfocus
  name = strip(getlabel(M6300AC,M6300AC));

postproc
  if $ <> 1 then
	skip to next M6300AC;
  endif;
  
	  
PROC M6303
onfocus
  name = strip(getlabel(M6300AC,M6300AC));

postproc
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter;
  elseif ( pos( "B", $ ) | pos( "C", $ ) | pos( "D", $ ) ) & !pos( "A", $ ) then
    errmsg( 00605 );
    reenter;    
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;

PROC M6300BC
preproc
  $ = curocc();

PROC M6308
onfocus
  name = strip(getlabel(m6300bc,m6300bc));

postproc
if $ in 4,8 then
	skip next m6300bc;
endif;

PROC M6309
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;


postproc
if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
    
  { ensure that if given, "NA" is the only response }
elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
endif;
PROC M6310
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;

name = strip(getlabel(m6300bc,m6300bc));

postproc
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "NA" is the only response }
  elseif pos( "X", $ ) & alphsize > 1 then
    errmsg( 09997 );
    reenter
  endif;

PROC M6311
preproc
  if count( MOD_63BM where M6308 in 4,8 ) < soccurs( MOD_63BM ) then
    skip to M6400C(1);
  endif;


PROC M6404
onfocus
  name = strip(getlabel(m6400c,m6400c));

postproc
  if $ in 2,8 then
	skip next m6400c;
  endif;
  if curocc() = 10 then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;
	
PROC M6405
onfocus
  name = strip(getlabel(m6400c,m6400c));

PROC M6601P_15
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:00 AM";
	name2 = "Night";
	M6601H(1)= 4;
elseif curocc() = 2 then
	name1 = "5:00 AM";
	name2 = "Night";
	M6601H(2)= 5;
elseif curocc() = 3 then
	name1 = "6:00 AM";
	name2 = "Morning";
	M6601H(3)= 6;
elseif curocc() = 4 then
	name1 = "7:00 AM";
	name2 = "Morning";
	M6601H(4)= 7;
elseif curocc() = 5 then
	name1 = "8:00 AM";
	name2 = "Day";
	M6601H(5)= 8;
elseif curocc() = 6 then
	name1 = "9:00 AM";
	name2 = "Day";
	M6601H(6)= 9;
elseif curocc() = 7 then
	name1 = "10:00 AM";
	name2 = "Day";
	M6601H(7)= 10;
elseif curocc() = 8 then
	name1 = "11:00 AM";
	name2 = "Day";
	M6601H(8)= 11;
elseif curocc() = 9 then
	name1 = "12:00 PM";
	name2 = "Day";
	M6601H(9)= 12;
elseif curocc() = 10 then
	name1 = "13:00 PM";
	name2 = "Day";
	M6601H(10)= 13;
elseif curocc() = 11 then
	name1 = "14:00 PM";
	name2 = "Day";
	M6601H(11)= 14;
elseif curocc() = 12 then
	name1 = "15:00 PM";
	name2 = "Day";
	M6601H(12)= 15;
elseif curocc() = 13 then
	name1 = "16:00 PM";
	name2 = "Day";
	M6601H(13)= 16;
elseif curocc() = 14 then
	name1 = "17:00 PM";
	name2 = "Day";
	M6601H(14)= 17;
elseif curocc() = 15 then
	name1 = "18:00 PM";
	name2 = "Evening";
	M6601H(15)= 18;
elseif curocc() = 16 then
	name1 = "19:00 PM";
	name2 = "Night";
	M6601H(16)= 19;
elseif curocc() = 17 then
	name1 = "20:00 PM";
	name2 = "Night";
	M6601H(17)= 20;
elseif curocc() = 18 then
	name1 = "21:00 PM";
	name2 = "Night";
	M6601H(18)= 21;
elseif curocc() = 19 then
	name1 = "22:00 PM";
	name2 = "Night";
	M6601H(19)= 22;
elseif curocc() = 20 then
	name1 = "23:00 PM";
	name2 = "Night";
	M6601H(20)= 23;
elseif curocc() = 21 then
	name1 = "0:00 MIDNIGHT";
	name2 = "Night";
	M6601H(21)= 0;
elseif curocc() = 22 then
	name1 = "1:00 AM";
	name2 = "Night";
	M6601H(22)= 1;
elseif curocc() = 23 then
	name1 = "2:00 AM";
	name2 = "Night";
	M6601H(23)= 2;
elseif curocc() = 24 then
	name1 = "3:00 AM";
	name2 = "Night";
	M6601H(24)= 3;
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:00 du matin";
	name2 = "Soir";
	M6601H(1)= 4;
elseif curocc() = 2 then
	name1 = "5:00 du matin";
	name2 = "Soir";
	M6601H(2)= 5;
elseif curocc() = 3 then
	name1 = "6:00 du matin";
	name2 = "Matin";
	M6601H(3)= 6;
elseif curocc() = 4 then
	name1 = "7:00 du matin";
	name2 = "Matin";
	M6601H(4)= 7;
elseif curocc() = 5 then
	name1 = "8:00 du matin";
	name2 = "Journée";
	M6601H(5)= 8;
elseif curocc() = 6 then
	name1 = "9:00 du matin";
	name2 = "Journée";
	M6601H(6)= 9;
elseif curocc() = 7 then
	name1 = "10:00 du matin";
	name2 = "Journée";
	M6601H(7)= 10;
elseif curocc() = 8 then
	name1 = "11:00 du matin";
	name2 = "Journée";
	M6601H(8)= 11;
elseif curocc() = 9 then
	name1 = "12:00 midi";
	name2 = "Journée";
	M6601H(9)= 12;
elseif curocc() = 10 then
	name1 = "13:00";
	name2 = "Journée";
	M6601H(10)= 13;
elseif curocc() = 11 then
	name1 = "14:00";
	name2 = "Journée";
	M6601H(11)= 14;
elseif curocc() = 12 then
	name1 = "15:00";
	name2 = "Journée";
	M6601H(12)= 15;
elseif curocc() = 13 then
	name1 = "16:00";
	name2 = "Journée";
	M6601H(13)= 16;
elseif curocc() = 14 then
	name1 = "17:00";
	name2 = "Journée";
	M6601H(14)= 17;
elseif curocc() = 15 then
	name1 = "18:00";
	name2 = "Soirée";
	M6601H(15)= 18;
elseif curocc() = 16 then
	name1 = "19:00";
	name2 = "Soir";
	M6601H(16)= 19;
elseif curocc() = 17 then
	name1 = "20:00";
	name2 = "Soir";
	M6601H(17)= 20;
elseif curocc() = 18 then
	name1 = "21:00";
	name2 = "Soir";
	M6601H(18)= 21;
elseif curocc() = 19 then
	name1 = "22:00";
	name2 = "Soir";
	M6601H(19)= 22;
elseif curocc() = 20 then
	name1 = "23:00";
	name2 = "Soir";
	M6601H(20)= 23;
elseif curocc() = 21 then
	name1 = "0:00 Minuit";
	name2 = "Soir";
	M6601H(21)= 0;
elseif curocc() = 22 then
	name1 = "1:00 du matin";
	name2 = "Soir";
	M6601H(22)= 1;
elseif curocc() = 23 then
	name1 = "2:00 du matin";
	name2 = "Soir";
	M6601H(23)= 2;
elseif curocc() = 24 then
	name1 = "3:00 du matin";
	name2 = "Soir";
	M6601H(24)= 3;
endif;
	{+FR}}

postproc

if $="X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
endif;
 

PROC M6601P_30
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:15 AM";
	name2 = "Night";
elseif curocc() = 2 then
	name1 = "5:15 AM";
	name2 = "Night";
elseif curocc() = 3 then
	name1 = "6:15 AM";
	name2 = "Morning";
elseif curocc() = 4 then
	name1 = "7:15 AM";
	name2 = "Morning";
elseif curocc() = 5 then
	name1 = "8:15 AM";
	name2 = "Day";
elseif curocc() = 6 then
	name1 = "9:15 AM";
	name2 = "Day";
elseif curocc() = 7 then
	name1 = "10:15 AM";
	name2 = "Day";
elseif curocc() = 8 then
	name1 = "11:15 AM";
	name2 = "Day";
elseif curocc() = 9 then
	name1 = "12:15 PM";
	name2 = "Day";
elseif curocc() = 10 then
	name1 = "13:15 PM";
	name2 = "Day";
elseif curocc() = 11 then
	name1 = "14:15 PM";
	name2 = "Day";
elseif curocc() = 12 then
	name1 = "15:15 PM";
	name2 = "Day";
elseif curocc() = 13 then
	name1 = "16:15 PM";
	name2 = "Day";
elseif curocc() = 14 then
	name1 = "17:15 PM";
	name2 = "Day";
elseif curocc() = 15 then
	name1 = "18:15 PM";
	name2 = "Evening";
elseif curocc() = 16 then
	name1 = "19:15 PM";
	name2 = "Night";
elseif curocc() = 17 then
	name1 = "20:15 PM";
	name2 = "Night";
elseif curocc() = 18 then
	name1 = "21:15 PM";
	name2 = "Night";
elseif curocc() = 19 then
	name1 = "22:15 PM";
	name2 = "Night";
elseif curocc() = 20 then
	name1 = "23:15 PM";
	name2 = "Night";
elseif curocc() = 21 then
	name1 = "0:15 MIDNIGHT";
	name2 = "Night";
elseif curocc() = 22 then
	name1 = "1:15 AM";
	name2 = "Night";
elseif curocc() = 23 then
	name1 = "2:15 AM";
	name2 = "Night";
elseif curocc() = 24 then
	name1 = "3:15 AM";
	name2 = "Night";
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:15 du matin";
	name2 = "Soir";
elseif curocc() = 2 then
	name1 = "5:15 du matin";
	name2 = "Soir";
elseif curocc() = 3 then
	name1 = "6:15 du matin";
	name2 = "Matin";
elseif curocc() = 4 then
	name1 = "7:15 du matin";
	name2 = "Matin";
elseif curocc() = 5 then
	name1 = "8:15 du matin";
	name2 = "Journée";
elseif curocc() = 6 then
	name1 = "9:15 du matin";
	name2 = "Journée";
elseif curocc() = 7 then
	name1 = "10:15 du matin";
	name2 = "Journée";
elseif curocc() = 8 then
	name1 = "11:15 du matin";
	name2 = "Journée";
elseif curocc() = 9 then
	name1 = "12:15 midi";
	name2 = "Journée";
elseif curocc() = 10 then
	name1 = "13:15";
	name2 = "Journée";
elseif curocc() = 11 then
	name1 = "14:15";
	name2 = "Journée";
elseif curocc() = 12 then
	name1 = "15:15";
	name2 = "Journée";
elseif curocc() = 13 then
	name1 = "16:15";
	name2 = "Journée";
elseif curocc() = 14 then
	name1 = "17:15";
	name2 = "Journée";
elseif curocc() = 15 then
	name1 = "18:15";
	name2 = "Soirée";
elseif curocc() = 16 then
	name1 = "19:15";
	name2 = "Soir";
elseif curocc() = 17 then
	name1 = "20:15";
	name2 = "Soir";
elseif curocc() = 18 then
	name1 = "21:15";
	name2 = "Soir";
elseif curocc() = 19 then
	name1 = "22:15";
	name2 = "Soir";
elseif curocc() = 20 then
	name1 = "23:15";
	name2 = "Soir";
elseif curocc() = 21 then
	name1 = "0:15 Minuit";
	name2 = "Soir";
elseif curocc() = 22 then
	name1 = "1:15 du matin";
	name2 = "Soir";
elseif curocc() = 23 then
	name1 = "2:15 du matin";
	name2 = "Soir";
elseif curocc() = 24 then
	name1 = "3:15 du matin";
	name2 = "Soir";
endif;
	{+FR}}

postproc
  if $="X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;


PROC M6601P_45
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:30 AM";
	name2 = "Night";
elseif curocc() = 2 then
	name1 = "5:30 AM";
	name2 = "Night";
elseif curocc() = 3 then
	name1 = "6:30 AM";
	name2 = "Morning";
elseif curocc() = 4 then
	name1 = "7:30 AM";
	name2 = "Morning";
elseif curocc() = 5 then
	name1 = "8:30 AM";
	name2 = "Day";
elseif curocc() = 6 then
	name1 = "9:30 AM";
	name2 = "Day";
elseif curocc() = 7 then
	name1 = "10:30 AM";
	name2 = "Day";
elseif curocc() = 8 then
	name1 = "11:30 AM";
	name2 = "Day";
elseif curocc() = 9 then
	name1 = "12:30 PM";
	name2 = "Day";
elseif curocc() = 10 then
	name1 = "13:30 PM";
	name2 = "Day";
elseif curocc() = 11 then
	name1 = "14:30 PM";
	name2 = "Day";
elseif curocc() = 12 then
	name1 = "15:30 PM";
	name2 = "Day";
elseif curocc() = 13 then
	name1 = "16:30 PM";
	name2 = "Day";
elseif curocc() = 14 then
	name1 = "17:30 PM";
	name2 = "Day";
elseif curocc() = 15 then
	name1 = "18:30 PM";
	name2 = "Evening";
elseif curocc() = 16 then
	name1 = "19:30 PM";
	name2 = "Night";
elseif curocc() = 17 then
	name1 = "20:30 PM";
	name2 = "Night";
elseif curocc() = 18 then
	name1 = "21:30 PM";
	name2 = "Night";
elseif curocc() = 19 then
	name1 = "22:30 PM";
	name2 = "Night";
elseif curocc() = 20 then
	name1 = "23:30 PM";
	name2 = "Night";
elseif curocc() = 21 then
	name1 = "0:30 MIDNIGHT";
	name2 = "Night";
elseif curocc() = 22 then
	name1 = "1:30 AM";
	name2 = "Night";
elseif curocc() = 23 then
	name1 = "2:30 AM";
	name2 = "Night";
elseif curocc() = 24 then
	name1 = "3:30 AM";
	name2 = "Night";
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:30 du matin";
	name2 = "Soir";
elseif curocc() = 2 then
	name1 = "5:30 du matin";
	name2 = "Soir";
elseif curocc() = 3 then
	name1 = "6:30 du matin";
	name2 = "Matin";
elseif curocc() = 4 then
	name1 = "7:30 du matin";
	name2 = "Matin";
elseif curocc() = 5 then
	name1 = "8:30 du matin";
	name2 = "Journée";
elseif curocc() = 6 then
	name1 = "9:30 du matin";
	name2 = "Journée";
elseif curocc() = 7 then
	name1 = "10:30 du matin";
	name2 = "Journée";
elseif curocc() = 8 then
	name1 = "11:30 du matin";
	name2 = "Journée";
elseif curocc() = 9 then
	name1 = "12:30 midi";
	name2 = "Journée";
elseif curocc() = 10 then
	name1 = "13:30";
	name2 = "Journée";
elseif curocc() = 11 then
	name1 = "14:30";
	name2 = "Journée";
elseif curocc() = 12 then
	name1 = "15:30";
	name2 = "Journée";
elseif curocc() = 13 then
	name1 = "16:30";
	name2 = "Journée";
elseif curocc() = 14 then
	name1 = "17:30";
	name2 = "Journée";
elseif curocc() = 15 then
	name1 = "18:30";
	name2 = "Soirée";
elseif curocc() = 16 then
	name1 = "19:30";
	name2 = "Soir";
elseif curocc() = 17 then
	name1 = "20:30";
	name2 = "Soir";
elseif curocc() = 18 then
	name1 = "21:30";
	name2 = "Soir";
elseif curocc() = 19 then
	name1 = "22:30";
	name2 = "Soir";
elseif curocc() = 20 then
	name1 = "23:30";
	name2 = "Soir";
elseif curocc() = 21 then
	name1 = "0:30 Minuit";
	name2 = "Soir";
elseif curocc() = 22 then
	name1 = "1:30 du matin";
	name2 = "Soir";
elseif curocc() = 23 then
	name1 = "2:30 du matin";
	name2 = "Soir";
elseif curocc() = 24 then
	name1 = "3:30 du matin";
	name2 = "Soir";
endif;
	{+FR}}

postproc
  if $="X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;


PROC M6601P_60
onfocus
if endinginterview then
	if length(strip($)) = 0 then
		endsect;
	endif;
endif;
{ENG+} 
if curocc() = 1 then
	name1 = "4:45 AM";
	name2 = "Night";
elseif curocc() = 2 then
	name1 = "5:45 AM";
	name2 = "Night";
elseif curocc() = 3 then
	name1 = "6:45 AM";
	name2 = "Morning";
elseif curocc() = 4 then
	name1 = "7:45 AM";
	name2 = "Morning";
elseif curocc() = 5 then
	name1 = "8:45 AM";
	name2 = "Day";
elseif curocc() = 6 then
	name1 = "9:45 AM";
	name2 = "Day";
elseif curocc() = 7 then
	name1 = "10:45 AM";
	name2 = "Day";
elseif curocc() = 8 then
	name1 = "11:45 AM";
	name2 = "Day";
elseif curocc() = 9 then
	name1 = "12:45 PM";
	name2 = "Day";
elseif curocc() = 10 then
	name1 = "13:45 PM";
	name2 = "Day";
elseif curocc() = 11 then
	name1 = "14:45 PM";
	name2 = "Day";
elseif curocc() = 12 then
	name1 = "15:45 PM";
	name2 = "Day";
elseif curocc() = 13 then
	name1 = "16:45 PM";
	name2 = "Day";
elseif curocc() = 14 then
	name1 = "17:45 PM";
	name2 = "Day";
elseif curocc() = 15 then
	name1 = "18:45 PM";
	name2 = "Evening";
elseif curocc() = 16 then
	name1 = "19:45 PM";
	name2 = "Night";
elseif curocc() = 17 then
	name1 = "20:45 PM";
	name2 = "Night";
elseif curocc() = 18 then
	name1 = "21:45 PM";
	name2 = "Night";
elseif curocc() = 19 then
	name1 = "22:45 PM";
	name2 = "Night";
elseif curocc() = 20 then
	name1 = "23:45 PM";
	name2 = "Night";
elseif curocc() = 21 then
	name1 = "0:45 MIDNIGHT";
	name2 = "Night";
elseif curocc() = 22 then
	name1 = "1:45 AM";
	name2 = "Night";
elseif curocc() = 23 then
	name1 = "2:45 AM";
	name2 = "Night";
elseif curocc() = 24 then
	name1 = "3:45 AM";
	name2 = "Night";
endif;
	{+ENG}
{{FR+} 
if curocc() = 1 then
 	name1 = "4:45 du matin";
	name2 = "Soir";
elseif curocc() = 2 then
	name1 = "5:45 du matin";
	name2 = "Soir";
elseif curocc() = 3 then
	name1 = "6:45 du matin";
	name2 = "Matin";
elseif curocc() = 4 then
	name1 = "7:45 du matin";
	name2 = "Matin";
elseif curocc() = 5 then
	name1 = "8:45 du matin";
	name2 = "Journée";
elseif curocc() = 6 then
	name1 = "9:45 du matin";
	name2 = "Journée";
elseif curocc() = 7 then
	name1 = "10:45 du matin";
	name2 = "Journée";
elseif curocc() = 8 then
	name1 = "11:45 du matin";
	name2 = "Journée";
elseif curocc() = 9 then
	name1 = "12:45 midi";
	name2 = "Journée";
elseif curocc() = 10 then
	name1 = "13:45";
	name2 = "Journée";
elseif curocc() = 11 then
	name1 = "14:45";
	name2 = "Journée";
elseif curocc() = 12 then
	name1 = "15:45";
	name2 = "Journée";
elseif curocc() = 13 then
	name1 = "16:45";
	name2 = "Journée";
elseif curocc() = 14 then
	name1 = "17:45";
	name2 = "Journée";
elseif curocc() = 15 then
	name1 = "18:45";
	name2 = "Soirée";
elseif curocc() = 16 then
	name1 = "19:45";
	name2 = "Soir";
elseif curocc() = 17 then
	name1 = "20:45";
	name2 = "Soir";
elseif curocc() = 18 then
	name1 = "21:45";
	name2 = "Soir";
elseif curocc() = 19 then
	name1 = "22:45";
	name2 = "Soir";
elseif curocc() = 20 then
	name1 = "23:45";
	name2 = "Soir";
elseif curocc() = 21 then
	name1 = "0:45 Minuit";
	name2 = "Soir";
elseif curocc() = 22 then
	name1 = "1:45 du matin";
	name2 = "Soir";
elseif curocc() = 23 then
	name1 = "2:45 du matin";
	name2 = "Soir";
elseif curocc() = 24 then
	name1 = "3:45 du matin";
	name2 = "Soir";
endif;
	{+FR}}
postproc
  if $="X" then
	getother( GetSymbol(), curocc() );
	enter FL_OTHERS
  endif;

PROC MOD_66BM_FORM
postproc
  if !endinginterview then
	SS_6M = "DONE";
	reenter FLOW_CONTROL;
  endif;

PROC M6604H
preproc
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC M6604M
preproc
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D6604 = sysdate( "dd" );
    M6604 = sysdate( "mm" );
    Y6604 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( M6100D, M6605 );
    M6606 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_790_FORM
preproc
  if endinginterview then
	if xIntNum = H_MOD790 | xfrom = 2 then
	  advance;
	else
	  skip to MOD_71_FORM; 
	endif;
  elseif DEC_MOD in "L","M","N","O","P","Q","R","T","U" then   { !! TO DO - modify according to the Ag modules in DEC_MOD proc }
    advance to V79000GM(1);
  endif;
  
postproc
  if !endinginterview then
	SS_790 = "DONE";
	reenter FLOW_CONTROL;
  endif;


PROC MOD_790000
preproc
  xfarmer   = count( MOD_1 where VFARMER <> 0 );


PROC V79000A 
preproc
  do i = 1 while i <= maxfarmer
    if i <= xfarmer then
      V79000A(i) = i;
    else
      V79000A(i) = notappl;
    endif;
  enddo;

  if curocc() > xfarmer then   { to run in-Batch }
    if !count( MOD_790000 where !V79000X in 3,notappl ) & xfrom <> 2 then
      V79001 = 1;
      V79002 = xintnum;
      SS_790 = "DONE";
    endif;
    endsect;
  endif;
  
savepartial();

PROC V79000C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if !VFARMER(i) in 0,notappl then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

postproc

  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl);
    if nextmem = V79000A then
      break
    endif;
  enddo;
    if $ <> i then 
      errmsg( 00400, $, strip(V101($)), i, strip(V101(i)));
      reenter;
    endif; 

  { Check line number of household respondent in range }
  if !$ in 1:roster then
    errmsg (00017, "V79000C", $, roster);
    reenter
  endif;
    { and then confirm they gave me a person who cultivated a crop }  
  if $ <> V235A & $ <> V235B & $ <> V235C & $ <> V235D & $ <> V237A & $ <> V237B & $ <> V237C & $ <> V237D & $ <> V239A & $ <> V239B & $ <> V239C & $ <> V239D then
    errmsg (00156 );
    reenter;
  endif;

  name = strip(V101($));  



PROC V79000X
onfocus
  name = V101(V79000C);
  if !endinginterview then
	if visualvalue($) <> notappl then
	  if visualvalue($) = 1 then
		advance V79000D;
	  endif;
	endif;
  endif;

postproc
  if !endinginterview then
	V79001 = $;
	if $ = 96 then
		getother( GetSymbol(), curocc() );
		enter FL_OTHERS;
	endif;

	if $ = 1 then
		vconsent(V79000C) = 1;
	endif;
  endif;
  if endinginterview & $ = 3 then
  {ENG+}errmsg("Respondent %s was recorded as not available (%s) - revisit when available", "Module 7.90", V101(V79000C)); {+ENG}
  {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.90", strip(V101(V79000C)) ); {+FR}}
  endif; 

  if $ > 1 then
	skip to V79000GH;
  endif;

PROC V79000D
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !V79000C in V235A,V235B,V235C,V235D then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !V79000C in V237A,V237B,V237C,V237D then
    errmsg( 00702, "VCC2");
	reenter;
  endif;
  if pos("C",$) & !V79000C in V239A,V239B,V239C,V239D then
    errmsg( 00702, "VCC3");
	reenter;
  endif;
  
  if !pos("A",$) & V79000C in V235A,V235B,V235C,V235D then
    errmsg( 00710, "VCC1");
    reenter;
  endif;
  if !pos("B",$) & V79000C in V237A,V237B,V237C,V237D then
    errmsg( 00710, "VCC2");
	reenter;
  endif;
  if !pos("C",$) & V79000C in V239A,V239B,V239C,V239D then
    errmsg( 00710, "VCC3");
	reenter;
  endif;
  

PROC V79000F1
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 1 then
    skip to V79000GH;
  endif;
  
PROC V79000F2
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 2 then
    skip to V79000GH;
  endif;

PROC V79000F3
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 3 then
    skip to V79000GH;
  endif;

PROC V79000F4
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 4 then
    skip to V79000GH;
  endif;

PROC V79000F5
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 5 then
    skip to V79000GH;
  endif;

PROC V79000F6
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 6 then
    skip to V79000GH;
  endif;

PROC V79000F7
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  if V79000E <= 7 then
    skip to V79000GH;
  endif;

PROC V79000F8
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  if pos("A",$) & !pos("A",V79000D) then
    errmsg( 00702, "VCC1");
    reenter;
  endif;
  if pos("B",$) & !pos("B",V79000D) then
    errmsg( 00702, "VCC2");
    reenter;
  endif;
  if pos("C",$) & !pos("C",V79000D) then
    errmsg( 00702, "VCC3");
    reenter;
  endif;
  
PROC V79000GM
preproc
  if visualvalue($) <> notappl & DEC_MOD in "L","M","N","O","P","Q","R","T","U" then
    noinput;
  endif;
  
postproc
  if V79000H > V79000GH | V79000H = V79000GH & V79000M > $ then
    errmsg( 89997 );
    reenter
  endif;
  
  if xfrom <> 2 then
    if V79000X = 2 then { refused }
      V79001 = 5;
      V79002 = xintnum;
    elseif V79000X = 3 then { not present }
      V79001 = 4;
      V79002 = xintnum;
    else
      V79001 = 1; 
      V79002 = xintnum;
    endif;
  endif;

  savepartial();
{ !! TO DO - modify according to VCCs/DEC_MOD }
  if curocc() = xfarmer then
    if DEC_MOD in "L" then 
      skip to MOD_71_FORM;
    endif;
    if DEC_MOD in "M" then 
      skip to MOD_72_FORM;
    endif;
    if DEC_MOD in "N" then 
      skip to MOD_73_FORM;
    endif;
    if DEC_MOD in "O" then 
      skip to MOD_74_FORM;
    endif;
    if DEC_MOD in "P" then 
      skip to MOD_75_FORM;
    endif;
    if DEC_MOD in "Q" then 
      skip to MOD_76_FORM;
    endif;
    if DEC_MOD in "R" then 
      skip to MOD_77_FORM;
    endif;
    if DEC_MOD in "T" then 
      skip to MOD_791_FORM;
    endif;
    if DEC_MOD in "U" then 
      skip to MOD_792_FORM;
    endif;
  else
    advance to V79000GM(curocc()+1);
  endif;



PROC MOD_71_FORM
preproc
  if endinginterview then
	if xIntNum = H_MOD71 | xfrom = 2 then
	  advance;
	else
	  skip mod_72_form; { TO DO !! skip to next applicable module }
	endif;	
  endif;
postproc
  if !endinginterview then
  
	ss_71 = "DONE";
	reenter FLOW_CONTROL;
  endif;

PROC V7100
preproc
  xcrop   = ( !V235A in 0,notappl ) + ( !V235B in 0,notappl ) + ( !V235C in 0,notappl ) + ( !V235D in 0,notappl );
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7100(i) = i;
    else
      V7100(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then
      V7134 = 1;
      ss_71 = "DONE";
      endsect
    endif;
  endif;
  

PROC V7100H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V7100M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7100 = sysdate( "dd" );
    M7100 = sysdate( "mm" );
    Y7100 = sysdate( "YYYY" );
  endif;
  
PROC V7100C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if i in V235A,V235B,V235C,V235D then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

postproc
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl & i in V235A,V235B,V235C,V235D );
    if nextmem = V7100 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 

  name = strip(V101($)); 


PROC V7100D
onfocus
  name = strip(V101(V7100C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.1", V101(V7100C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.1", strip(V101(V7100C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7100C) = 1;
  else
	skip to V7133H;
  endif;
  
PROC V7100E
preproc
plotA = " ";
cur = curocc();

	  for i in MOD_790000 do
	    if V79000C(i) = V7100C(cur) then
		  if pos("A",V79000F1(i)) then 
		    plotA = concat(strip(plotA),"A");
		  endif;
		  if pos("A",V79000F2(i)) then 
		    plotA = concat(strip(plotA),"B");
		  endif;
		  if pos("A",V79000F3(i)) then 
		    plotA = concat(strip(plotA),"C");
		  endif;
		  if pos("A",V79000F4(i)) then 
		    plotA = concat(strip(plotA),"D");
		  endif;
		  if pos("A",V79000F5(i)) then 
		    plotA = concat(strip(plotA),"E");
		  endif;
		  if pos("A",V79000F6(i)) then 
		    plotA = concat(strip(plotA),"F");
		  endif;
		  if pos("A",V79000F7(i)) then 
		    plotA = concat(strip(plotA),"G");
		  endif;
		  if pos("A",V79000F8(i)) then 
		    plotA = concat(strip(plotA),"H");
		  endif;
	    endif;
	    break;
	  enddo;
  $ = strip(plotA);
  

PROC V7101
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09999 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V7106
  endif;
  
PROC V7102
preproc
  if pos( "B", V7101 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V7104;
  endif;

PROC V7103
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7104
preproc
  if pos( "C", V7101 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V7106;
  endif;

PROC V7105
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7106
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7107
  if alphachk( $, 3, "Y" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  endif;
  if pos( "Y", $ ) then
    skip to V7107B;
  endif;
  
PROC V7107X
preproc
  if length(strip(V7107)) > 1 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then 
    skip to V7107B;
  endif; 
  
PROC V7107B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7108
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;


PROC V7109A
  if $ = 1 then
    skip to V7110;
  endif;

PROC V7109B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7110
  if $ <> 1 then 
    skip to V7111;
  endif;
  
PROC V7110A
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7111
  if $ <> 1 then
    skip to V7112A;
  endif;

PROC V7111A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7111B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7111C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7112A
  if $ <> 1 then
    skip to V7112D;
  endif;  

PROC V7112B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7112D
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
            
PROC V7114
  if $ <> 1 then
    skip to V7115;
  endif;
  
PROC V7115
  if $ <> 1 then
    skip to V7117;
  endif;
  
PROC V7118
  if $ = 0 then
    skip to V7120;
  endif;
  
PROC V7119
  if alphachk( $, 6, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7121X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7122
  if $ <> 1 then
    skip to V7123A;
  endif;
  
PROC V7123
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7123A
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7124A
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
    
PROC V7124B
  if $ <> 1 then
    skip to V7125;
  endif;

PROC V7124C
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
        
PROC V7125
  if $ <> 1 then
    skip to V7127;
  endif;

PROC V7126
  if alphachk( $, 9, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7127
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "D", $ ) & alphsize > 1 then
    errmsg( 09995 );
    reenter    
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), 0 );
    enter FL_OTHERS
  endif;
  if pos( "D", $ ) then
    skip to V7128;
  endif;
  
PROC V7127A
  if $ <> 1 then
    skip to V7128;
  endif;

PROC V7127B
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
    
PROC V7128
  if $ <> 3 then 
    skip to V7130A
  endif;
  
PROC V7129
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7130X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7130AA
preproc
  if V7130A = 1 | V7130B = 1 | V7130C = 1 | V7130D = 1 | V7130E = 1 | V7130F = 1 | V7130X = 1 then
    $ = 1;
  else 
    $ = 2;
  endif;
postproc
  if $ = 2 then
    skip to V7132
  endif;
  
PROC V7132
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
    
PROC V7133H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7133M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7133 = sysdate( "dd" );
    M7133 = sysdate( "mm" );
    Y7133 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7100D, V7134 );
    V7135 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_72_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD72 | xfrom = 2 then
		advance;
	else
		skip mod_73_form; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	ss_72 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V7200
preproc
  xcrop   = ( !V237A in 0,notappl ) + ( !V237B in 0,notappl ) + ( !V237C in 0,notappl ) + ( !V237D in 0,notappl );
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7200(i) = i;
    else
      V7200(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then 
      V7235 = 1;
      ss_72 = "DONE";
	  endsect;
    endif;
  endif;

PROC V7200H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V7200M
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7200 = sysdate( "dd" );
    M7200 = sysdate( "mm" );
    Y7200 = sysdate( "YYYY" );
  endif;
  
PROC V7200C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if i in V237A,V237B,V237C,V237D then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl & i in V237A,V237B,V237C,V237D );
    if nextmem = V7200 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 

  name = strip(V101($)); 
PROC V7200D
onfocus
  name = strip(V101(V7200C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.2", V101(V7200C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.2", strip(V101(V7200C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7200C) = 1;
  else
	skip to V7234H;
  endif;

PROC V7200E
preproc
plotA = " ";
cur = curocc();

	  for i in MOD_790000 do
	    if V79000C(i) = V7200C(cur) then
		  if pos("A",V79000F1(i)) then 
		    plotA = concat(strip(plotA),"A");
		  endif;
		  if pos("A",V79000F2(i)) then 
		    plotA = concat(strip(plotA),"B");
		  endif;
		  if pos("A",V79000F3(i)) then 
		    plotA = concat(strip(plotA),"C");
		  endif;
		  if pos("A",V79000F4(i)) then 
		    plotA = concat(strip(plotA),"D");
		  endif;
		  if pos("A",V79000F5(i)) then 
		    plotA = concat(strip(plotA),"E");
		  endif;
		  if pos("A",V79000F6(i)) then 
		    plotA = concat(strip(plotA),"F");
		  endif;
		  if pos("A",V79000F7(i)) then 
		    plotA = concat(strip(plotA),"G");
		  endif;
		  if pos("A",V79000F8(i)) then 
		    plotA = concat(strip(plotA),"H");
		  endif;
	    endif;
	    break;
	  enddo;
  $ = strip(plotA);
PROC V7202 
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V7207
  endif;
  
PROC V7203
preproc
  if pos( "B", V7202 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7205
  endif;

PROC V7204
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7205
preproc
  if pos( "C", V7202 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7207
  endif;
  
PROC V7206
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7207
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7208
  if alphachk( $, 2, "Y" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  endif;
  if pos( "Y", $ ) then 
    skip to V7208B;
  endif;
  
PROC V7208X
preproc
  if length(strip(V7208)) > 1 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7208B
  endif;  

PROC V7208B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7209
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7210A
  if $ = 1 then 
    skip to V7211;
  endif;
  
PROC V7210B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;


PROC V7211
  if $ <> 1 then 
    skip to V7211B;
  endif;
  
PROC V7211A
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;


PROC V7211B
  if alphachk( $, 3, "YZ" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V7212
  if $ <> 1 then
    skip to V7213E
  endif;

PROC V7213A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7213B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7213C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7213E
  if $ <> 1 then
    skip to V7213H;
  endif;

PROC V7213F
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7213H
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
      
PROC V7216
  if $ <> 1 then 
    skip to V7218
  endif;
  
PROC V7219
  if $ = 0 then
    skip to V7221
  endif;
  
PROC V7220
  if alphachk( $, 6, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7222X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;  
  
PROC V7223
  if $ <> 1 then
    skip to V7224A
  endif;
  
PROC V7224
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7224A
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7225
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
      
PROC V7226
  if $ <> 1 then
    skip to V7228
  endif;
    
PROC V7227
  if alphachk( $, 8, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7228
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "D", $ ) & alphsize > 1 then
    errmsg( 09995 );
    reenter    
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "D", $ ) then
    skip to V7229;
  endif;
  
PROC V7228A
  if $ <> 1 then
    skip to V7229;
  endif;
  
PROC V7228B
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;  
    
PROC V7229
  if $ <> 3 then
    skip to V7231A
  endif;

PROC V7230
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
    
PROC V7231X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;  
      
PROC V7231AA
preproc
  if V7231A = 1 | V7231B = 1 | V7231C = 1 | V7231D = 1 | V7231E = 1 | V7231X = 1 then
    $ = 1
  else 
    $ = 2
  endif;
postproc
  if $ = 2 then
    skip to V7233
  endif;
  
PROC V7233
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif; 
    
PROC V7234H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7234M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7234 = sysdate( "dd" );
    M7234 = sysdate( "mm" );
    Y7234 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7200D, V7235 );
    V7236 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
PROC MOD_73_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD73 | xfrom = 2 then
		advance;
	else
		skip MOD_74_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	ss_73 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V7300
preproc
  xcrop   = ( !V239A in 0,notappl ) + ( !V239B in 0,notappl ) + ( !V239C in 0,notappl ) + ( !V239D in 0,notappl );
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7300(i) = i;
    else
      V7300(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then 
      V7327 = 1;
      ss_73 = "DONE";
      endsect;
    endif;
  endif;

PROC V7300H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V7300M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7300 = sysdate( "dd" );
    M7300 = sysdate( "mm" );
    Y7300 = sysdate( "YYYY" );
  endif;

PROC V7300C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if i in V239A,V239B,V239C,V239D then { GD TO DO !! - check on age limit for module 7 with Jasbir }
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl & i in V239A,V239B,V239C,V239D );
    if nextmem = V7300 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($)); 
  

PROC V7300D
onfocus
  name = strip(V101(V7300C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.3", V101(V7300C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.3", strip(V101(V7300C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7300C) = 1;
  else
	skip V7326H;
  endif;
  
PROC V7300E
preproc
plotA = " ";
cur = curocc();

	  for i in MOD_790000 do
	    if V79000C(i) = V7300C(cur) then
		  if pos("A",V79000F1(i)) then 
		    plotA = concat(strip(plotA),"A");
		  endif;
		  if pos("A",V79000F2(i)) then 
		    plotA = concat(strip(plotA),"B");
		  endif;
		  if pos("A",V79000F3(i)) then 
		    plotA = concat(strip(plotA),"C");
		  endif;
		  if pos("A",V79000F4(i)) then 
		    plotA = concat(strip(plotA),"D");
		  endif;
		  if pos("A",V79000F5(i)) then 
		    plotA = concat(strip(plotA),"E");
		  endif;
		  if pos("A",V79000F6(i)) then 
		    plotA = concat(strip(plotA),"F");
		  endif;
		  if pos("A",V79000F7(i)) then 
		    plotA = concat(strip(plotA),"G");
		  endif;
		  if pos("A",V79000F8(i)) then 
		    plotA = concat(strip(plotA),"H");
		  endif;
	    endif;
	    break;
	  enddo;
  $ = strip(plotA);
PROC V7301
  if $ = 2 then
    skip to V7304;
  endif;  
  
PROC V7302
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if $ in 1,4:8 then
    skip to V7304;
  endif;

PROC V7304
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7305
  if $ <> 1 then
    skip to V7307C
  endif;
  
PROC V7306
preproc
  $ = "X";
postproc
  if pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7307
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7307A
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7307C
  if $ <> 1 then
    skip to V7307F;
  endif;
  
PROC V7307D
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;  
  
PROC V7307F
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7308A
  if $ <> 1 then
    skip to V7308C;
  endif;
  
PROC V7310
  if $ <> 1 then
    skip to V7312
  endif;

PROC V7313
  if $ = 0 then
    skip to V7315
  endif;

PROC V7314
  if alphachk( $, 6, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7316X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;  

PROC V7316AA
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7317
  if $ = 3 then 
    skip to V7319
  elseif $ = 2 then
    skip to V7318;
  endif;
  
PROC V7317A
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;  
  skip to V7318A;  
  
PROC V7318
  if alphachk( $, 8, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7318A
  if $ <> 1 then 
    skip to V7319;
  endif;
  
PROC V7318B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
    
PROC V7319
  if $ <> 1 then
    skip to V7321A
  endif;
  
PROC V7320
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;  
  
PROC V7321X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif; 
    
PROC V7321AA
preproc
  if V7321A = 1 | V7321B = 1 | V7321C = 1 | V7321D = 1 | V7321E = 1 | V7321X = 1 then
    $ = 1
  else 
    $ = 2
  endif;
postproc
  if $ = 2 then
    skip to V7326H
  endif;
  
PROC V7323
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif; 
  if $ = 1 then
    skip to V7325;
  endif;

PROC V7324
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif; 

PROC V7325
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif; 
        
PROC V7326H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7326M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7326 = sysdate( "dd" );
    M7326 = sysdate( "mm" );
    Y7326 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7300D, V7327 );
    V7328 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;



PROC MOD_74_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD74 | xfrom = 2 then
		advance;
	else
		skip to MOD_75_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	ss_74 = "DONE";
	reenter FLOW_CONTROL;
endif;
PROC V7400
preproc
  xcrop   = ( !V235A in 0,notappl ) + ( !V235B in 0,notappl ) + ( !V235C in 0,notappl ) + ( !V235D in 0,notappl ); { !! TO DO - modify for C-VCC farmer questions in module 2 }
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7400(i) = i;
    else
      V7400(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then 
      V7434 = 1;
      ss_74 = "DONE";
      endsect;
    endif;
  endif;
  
PROC V7400AH
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7400AM
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7400 = sysdate( "dd" );
    M7400 = sysdate( "mm" );
    Y7400 = sysdate( "YYYY" );
  endif;
  
PROC V7400C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
   {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
    if i in VXXXA,VXXXB,VXXXC,VXXXD then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
   { TO DO!! }}
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl & i in V239A,V239B,V239C,V239D );
    if nextmem = V7400 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($)); 
  
  { TO DO!! }}
  name = strip(V101($)); 

PROC V7400D
onfocus
  name = strip(V101(V7400C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.4", V101(V7400C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.4", strip(V101(V7400C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7400C) = 1;
  else
	skip V7433H;
  endif;
PROC V7400E
preproc
plotA = " ";
cur = curocc();

	  for i in MOD_790000 do
	    if V79000C(i) = V7400C(cur) then
		  if pos("A",V79000F1(i)) then 
		    plotA = concat(strip(plotA),"A");
		  endif;
		  if pos("A",V79000F2(i)) then 
		    plotA = concat(strip(plotA),"B");
		  endif;
		  if pos("A",V79000F3(i)) then 
		    plotA = concat(strip(plotA),"C");
		  endif;
		  if pos("A",V79000F4(i)) then 
		    plotA = concat(strip(plotA),"D");
		  endif;
		  if pos("A",V79000F5(i)) then 
		    plotA = concat(strip(plotA),"E");
		  endif;
		  if pos("A",V79000F6(i)) then 
		    plotA = concat(strip(plotA),"F");
		  endif;
		  if pos("A",V79000F7(i)) then 
		    plotA = concat(strip(plotA),"G");
		  endif;
		  if pos("A",V79000F8(i)) then 
		    plotA = concat(strip(plotA),"H");
		  endif;
	    endif;
	    break;
	  enddo;
  $ = strip(plotA);
PROC V7401
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V7406;
  endif;
PROC V7402
preproc
  if pos( "B", V7401 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7404
  endif;
PROC V7403
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7404
preproc
  if pos( "C", V7401 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7406
  endif;
PROC V7405
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7406
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7407
  if alphachk( $, 2, "Y" ) then
    errmsg( 09998 );
    reenter
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter    
  endif;
  if pos( "Y", $ ) then
    skip to V7407B;
  endif;
PROC V7407X
preproc 
  if length(strip(V7407)) > 1 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V7407B;
  endif;
PROC V7407B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7408
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7409A
  if $ = 1 then
    skip to V7410;
  endif;
  
PROC V7409B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7410
  if $ <> 1 then
    skip to V7410B;
  endif;
  
PROC V7410A
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7410B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7411
  if $ <> 1 then
    skip to V7412A;
  endif;
PROC V7411A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7411B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7411C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7412A
  if $ <> 1 then 
    skip to V7412D;
  endif;
PROC V7412B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7412D
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7415
  if $ <> 1 then
    skip to V7417;
  endif;
PROC V7418
  if $ = 0 then
    skip to V7420;
  endif;
PROC V7419
  if alphachk( $, 6, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7421X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7422
  if $ <> 1 then
    skip to V7423A;
  endif;
  
PROC V7423
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7423A
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7424A
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7425
  if $ <> 1 then
    skip to V7427;
  endif;
PROC V7426
  if alphachk( $, 9, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7427
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "C", $ ) then
    skip to V7428;
  endif;
PROC V7427A
  if $ <> 1 then
    skip to V7428;
  endif;
PROC V7427B
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7428
  if $ <> 3 then
    skip to V7430A;
  endif;

PROC V7429
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7430X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7430AA
preproc
  if V7430A = 1 | V7430B = 1 | V7430C = 1 | V7430D = 1 | V7430E = 1 | V7430F = 1 | V7430X = 1 then
    $ = 1
  else 
    $ = 2
  endif;
postproc
  if $ = 2 then
    skip to V7432
  endif;
  
PROC V7432
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7433H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7433M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7433 = sysdate( "dd" );
    M7433 = sysdate( "mm" );
    Y7433 = sysdate( "YYYY" );
    V7434 = 1;
    V7435 = xintnum;
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7400D, V7434 );
    V7435 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_75_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD75 | xfrom = 2 then
		advance;
	else
		skip MOD_76_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	ss_75 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V7500
preproc
  xcrop   = ( !V235A in 0,notappl ) + ( !V235B in 0,notappl ) + ( !V235C in 0,notappl ) + ( !V235D in 0,notappl ); { !! TO DO - modify for C-VCC farmer questions in module 2 }
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7500(i) = i;
    else
      V7500(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then 
      V7534 = 1;
      ss_75 = "DONE";
      endsect;
    endif;
  endif;
  
PROC V7500AH
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V7500AM
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7500 = sysdate( "dd" );
    M7500 = sysdate( "mm" );
    Y7500 = sysdate( "YYYY" );
  endif;
  
PROC V7500C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
   {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
    if i in VXXXA,VXXXB,VXXXC,VXXXD then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
   { TO DO!! }}
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl & i in V239A,V239B,V239C,V239D );
    if nextmem = V7500 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($)); 
  
er;
  endif;  
  { TO DO!! }}
  name = strip(V101($)); 
PROC V7500D
onfocus
  name = strip(V101(V7500C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.5", V101(V7500C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.5", strip(V101(V7500C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7500C) = 1;
  else
	skip V7533H;
  endif;
PROC V7500E
preproc
plotA = " ";
cur = curocc();

	  for i in MOD_790000 do
	    if V79000C(i) = V7500C(cur) then
		  if pos("A",V79000F1(i)) then 
		    plotA = concat(strip(plotA),"A");
		  endif;
		  if pos("A",V79000F2(i)) then 
		    plotA = concat(strip(plotA),"B");
		  endif;
		  if pos("A",V79000F3(i)) then 
		    plotA = concat(strip(plotA),"C");
		  endif;
		  if pos("A",V79000F4(i)) then 
		    plotA = concat(strip(plotA),"D");
		  endif;
		  if pos("A",V79000F5(i)) then 
		    plotA = concat(strip(plotA),"E");
		  endif;
		  if pos("A",V79000F6(i)) then 
		    plotA = concat(strip(plotA),"F");
		  endif;
		  if pos("A",V79000F7(i)) then 
		    plotA = concat(strip(plotA),"G");
		  endif;
		  if pos("A",V79000F8(i)) then 
		    plotA = concat(strip(plotA),"H");
		  endif;
	    endif;
	    break;
	  enddo;
  $ = strip(plotA);



PROC V7501
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V7506;
  endif;
PROC V7502
preproc
  if pos( "B", V7501 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7504
  endif;
PROC V7503
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7504
preproc
  if pos( "C", V7501 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7506;
  endif;
PROC V7505
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7506
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7507
  if alphachk( $, 2, "Y" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  endif;
  if pos( "Y", $ ) then 
    skip to V7507B;
  endif;
PROC V7507X
preproc 
  if length(strip(V7507)) > 1 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V7507B;
  endif;
PROC V7507B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7508
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7509A
  if $ = 1 then
    skip to V7510;
  endif;
PROC V7509B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7510
  if $ <> 1 then
    skip to V7511;
  endif;
PROC V7510A
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7511
  if $ <> 1 then
    skip to V7512A;
  endif;
PROC V7511A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7511B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7511C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7512A
  if $ <> 1 then 
    skip to V7512D;
  endif;
PROC V7512B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7512D
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7515
  if $ <> 1 then
    skip to V7517;
  endif;
PROC V7518
  if $ = 0 then
    skip to V7520;
  endif;
PROC V7519
  if alphachk( $, 6, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7521X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7522
  if $ <> 1 then 
    skip to V7523A;
  endif;
  
PROC V7523
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7523A
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V7525
  if $ <> 1 then 
    skip to V7527;
  endif;
PROC V7526
  if alphachk( $, 9, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7527
  if alphachk( $, 6, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "F", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "F", $ ) then
    skip to V7528;
  endif;

PROC V7527A
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7528
  if $ <> 3 then 
    skip to V7530A;
  endif;

PROC V7529
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7530X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7530AA
preproc
  if V7530A = 1 | V7530B = 1 | V7530C = 1 | V7530D = 1 | V7530E = 1 | V7530F = 1 | V7530X = 1 then
    $ = 1
  else 
    $ = 2
  endif;
postproc
  if $ = 2 then
    skip to V7532
  endif;
  
PROC V7532
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7533H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7533M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7533 = sysdate( "dd" );
    M7533 = sysdate( "mm" );
    Y7533 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7500D, V7534 );
    V7535 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
PROC MOD_76_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD76 | xfrom = 2 then
		advance;
	else
		skip MOD_77_FORM; { TO DO !! skip to next applicable module }
	endif;
endif;

postproc
if !endinginterview then
	ss_76 = "DONE";
	reenter FLOW_CONTROL;
endif;
PROC V7600
preproc
  xcrop   = ( !V235A in 0,notappl ) + ( !V235B in 0,notappl ) + ( !V235C in 0,notappl ) + ( !V235D in 0,notappl ); { !! TO DO - modify for C-VCC farmer questions in module 2 }
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7600(i) = i;
    else
      V7600(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then 
      V7634 = 1;
      ss_76 = "DONE";
      endsect;
    endif;
  endif;
  
PROC V7600AH
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V7600AM
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7600 = sysdate( "dd" );
    M7600 = sysdate( "mm" );
    Y7600 = sysdate( "YYYY" );
  endif;
  
PROC V7600C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
   {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
    if i in VXXXA,VXXXB,VXXXC,VXXXD then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
   { TO DO!! }}
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl& i in V239A,V239B,V239C,V239D );
    if nextmem = V7600 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($)); 
  

  { TO DO!! }}
  name = strip(V101($)); 
PROC V7600D
onfocus
  name = strip(V101(V7600C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.6", V101(V7600C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.6", strip(V101(V7600C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7600C) = 1;
  else
	skip V7633H;
  endif;
PROC V7600E
preproc
  plotA = " ";
  cur = curocc();

  for i in MOD_790000 do
    if V79000C(i) = V7600C(cur) then
	  if pos("A",V79000F1(i)) then 
	    plotA = concat(strip(plotA),"A");
	  endif;
	  if pos("A",V79000F2(i)) then 
	    plotA = concat(strip(plotA),"B");
	  endif;
	  if pos("A",V79000F3(i)) then 
	    plotA = concat(strip(plotA),"C");
	  endif;
	  if pos("A",V79000F4(i)) then 
	    plotA = concat(strip(plotA),"D");
	  endif;
	  if pos("A",V79000F5(i)) then 
	    plotA = concat(strip(plotA),"E");
	  endif;
	  if pos("A",V79000F6(i)) then 
	    plotA = concat(strip(plotA),"F");
	  endif;
	  if pos("A",V79000F7(i)) then 
	    plotA = concat(strip(plotA),"G");
	  endif;
	  if pos("A",V79000F8(i)) then 
	    plotA = concat(strip(plotA),"H");
	  endif;
    endif;
    break;
  enddo;
  $ = strip(plotA);
PROC V7601
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V7606;
  endif;
PROC V7602
preproc
  if pos( "B", V7601 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7604
  endif;
PROC V7603
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V7604
preproc
  if pos( "C", V7601 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7606
  endif;

PROC V7605
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7606
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7607
  if alphachk( $, 2, "Y" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  endif;
  if pos( "Y", $ ) then 
    skip to V7607B;
  endif;
  
PROC V7607X
preproc 
  if length(strip(V7607)) > 1 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V7607B;
  endif;

PROC V7607B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7608
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7609A
  if $ = 1 then
    skip to V7610;
  endif;
  
PROC V7609B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;


PROC V7610
  if $ <> 1 then
    skip to V7610B;
  endif;
  
PROC V7610A
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;


PROC V7610B
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V7611
  if $ <> 1 then
    skip to V7611E;
  endif;
  
PROC V7611A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7611B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7611C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7612A
  if $ <> 1 then 
    skip to V7612D;
  endif;
  
PROC V7612B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7612D
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7615
  if $ <> 1 then
    skip to V7617;
  endif;
  
PROC V7618
  if $ = 0 then
    skip to V7620;
  endif;
  
PROC V7619
  if alphachk( $, 6, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7621X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7622
  if $ <> 1 then 
    skip to V7623A;
  endif;
  
PROC V7623
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7623A
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7625
  if $ <> 1 then 
    skip to V7627;
  endif;
  
PROC V7626
  if alphachk( $, 9, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7627
  if alphachk( $, 6, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "F", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "F", $ ) then
    skip to V7628;
  endif;

PROC V7627A
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7628
  if $ <> 3 then 
    skip to V7630A;
  endif;
  
PROC V7629
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7630X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7630AA
preproc
  if V7630A = 1 | V7630B = 1 | V7630C = 1 | V7630D = 1 | V7630E = 1 | V7630F = 1 | V7630X = 1 then
    $ = 1
  else 
    $ = 2
  endif;
postproc
  if $ = 2 then
    skip to V7632
  endif;
  
PROC V7632
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7633H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7633M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7633 = sysdate( "dd" );
    M7633 = sysdate( "mm" );
    Y7633 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7600D, V7635 );
    V7635 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
PROC MOD_77_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD77 | xfrom = 2 then
		advance;
	else
		skip MOD_750_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	ss_77 = "DONE";
	reenter FLOW_CONTROL;
endif;
PROC V7700
preproc
  xcrop   = ( !V235A in 0,notappl ) + ( !V235B in 0,notappl ) + ( !V235C in 0,notappl ) + ( !V235D in 0,notappl ); { !! TO DO - modify for C-VCC farmer questions in module 2 }
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V7700(i) = i;
    else
      V7700(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then 
      V7734 = 1;
      ss_77 = "DONE";
      endsect;
    endif;
  endif;
  
PROC V7700AH
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V7700AM
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7700 = sysdate( "dd" );
    M7700 = sysdate( "mm" );
    Y7700 = sysdate( "YYYY" );
  endif;
  
PROC V7700C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
   {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
    if i in VXXXA,VXXXB,VXXXC,VXXXD then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
   { TO DO!! }}
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl & i in V239A,V239B,V239C,V239D );
    if nextmem = V7700 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($)); 
  
 
  { TO DO!! }}
  name = strip(V101($)); 
PROC V7700D
onfocus
  name = strip(V101(V7700C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.7", V101(V7700C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.7", strip(V101(V7700C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V7700C) = 1;
  else
	skip V7733H;
  endif;

PROC V7700E
preproc
  plotA = " ";
  cur = curocc();

  for i in MOD_790000 do
    if V79000C(i) = V7700C(cur) then
	  if pos("A",V79000F1(i)) then 
	    plotA = concat(strip(plotA),"A");
	  endif;
	  if pos("A",V79000F2(i)) then 
	    plotA = concat(strip(plotA),"B");
	  endif;
	  if pos("A",V79000F3(i)) then 
	    plotA = concat(strip(plotA),"C");
	  endif;
	  if pos("A",V79000F4(i)) then 
	    plotA = concat(strip(plotA),"D");
	  endif;
	  if pos("A",V79000F5(i)) then 
	    plotA = concat(strip(plotA),"E");
	  endif;
	  if pos("A",V79000F6(i)) then 
	    plotA = concat(strip(plotA),"F");
	  endif;
	  if pos("A",V79000F7(i)) then 
	    plotA = concat(strip(plotA),"G");
	  endif;
	  if pos("A",V79000F8(i)) then 
	    plotA = concat(strip(plotA),"H");
	  endif;
    endif;
    break;
  enddo;
  $ = strip(plotA);
PROC V7701
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V7706;
  endif;
  
PROC V7702
preproc
  if pos( "B", V7701 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7704
  endif;
  
PROC V7703
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7704
preproc
  if pos( "D", V7701 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 2 then 
    skip to V7706
  endif;

PROC V7705
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7706
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7707
  if alphachk( $, 2, "Y" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  endif;
  if pos( "Y", $ ) then 
    skip to V7707B;
  endif;
  
PROC V7707X
preproc 
  if length(strip(V7707)) > 1 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V7707B;
  endif;

PROC V7707B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7708
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7708A
  if $ = 1 then
    skip to V7709A;
  endif;
  
PROC V7708B
  if $ = 1 then
    skip to V7709;
  endif;

PROC V7709
preproc
  if V7708A = 2 then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ = 1 then
    skip V7709B;
  endif;

PROC V7709B
  if $ = 1 then
    skip to V7709D;
  endif;

PROC V7709C
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter;
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7709D
  if $ <> 1 then
    skip to V7709F;
  endif;
  
PROC V7709E
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;


PROC V7709F
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;

PROC V7710
  if $ <> 1 then
    skip to V7711;
  endif;
  
PROC V7710A
  if alphachk( $, 3, "X" ) then { !! TO DO - change second input to alphachk function to the number of known crops in dictionary }
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V7711
  if $ <> 1 then
    skip to V7712A;
  endif;
  
PROC V7711A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7711B
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7711C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V7712A
  if $ <> 1 then 
    skip to V7712D;
  endif;
  
PROC V7712B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7712D
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7715
  if $ <> 1 then
    skip to V7717;
  endif;
  
PROC V7718
  if $ = 0 then
    skip to V7720;
  endif;
  
PROC V7719
  if alphachk( $, 5, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7721X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7722
  if $ <> 1 then 
    skip to V7724;
  endif;
  
PROC V7723
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
    
PROC V7725
  if $ <> 1 then 
    skip to V7727;
  endif;
  
PROC V7726
  if alphachk( $, 8, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7727
  if alphachk( $, 6, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "F", $ ) & alphsize > 1 then
    errmsg( 09995 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "F", $ ) then
    skip to V7728;
  endif;

PROC V7727A
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7728
  if $ <> 3 then 
    skip to V7730A;
  endif;
  
PROC V7729
  if alphachk( $, 3, "" ) then
    errmsg( 09998 );
    reenter
  endif;
  
PROC V7730X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V7730AA
preproc
  if V7730A = 1 | V7730B = 1 | V7730C = 1 | V7730D = 1 | V7730E = 1 | V7730F = 1 | V7730X = 1 then
    $ = 1
  else 
    $ = 2
  endif;
postproc
  if $ = 2 then
    skip to V7732
  endif;
  
PROC V7732
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V7733H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V7733M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D7733 = sysdate( "dd" );
    M7733 = sysdate( "mm" );
    Y7733 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V7700D, V7735 );
    V7735 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_750_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD750 | xfrom = 2 then
		advance;
	else
		skip MOD_780_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

preproc
  xcrop   = ( !V228A in 0,notappl ) + ( !V228B in 0,notappl ) + ( !V228C in 0,notappl ) + ( !V228D in 0,notappl );
  do i = 1 while i <= maxvcc
    if i <= xcrop then
      V75000(i) = i;
    else
      V75000(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    if xfrom <> 2 then
      V75052 = 1;
      ss_752 = "DONE";
      endsect
    endif;
  endif;
  



postproc
if !endinginterview then
	SS_750 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V75000H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V75000M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D75000 = sysdate( "dd" );
    M75000 = sysdate( "mm" );
    Y75000 = sysdate( "YYYY" );
  endif;
  
PROC V75000C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if i in V228A,V228B,V228C,V228D then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VANIMAL(i) in 0,notappl & i in V228A,V228B,V228C,V228D );
    if nextmem = V75000 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($)); 

PROC V75000D
onfocus
  name = strip(V101(V75000C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.50", V101(V75000C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.50", strip(V101(V75000C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V75000C) = 1;
  else
	skip V75051H;
  endif;
PROC V75007
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

PROC V75007AA
preproc
  if pos( "B", V75007 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V75015;
  endif;
PROC V75008
  if alphachk( $, 2, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75009
preproc
  if pos( "A", V75008 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V75013;
  endif;
PROC V75010
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75011
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75012
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V75013
preproc
  if pos( "B", V75008 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V75015;
  endif;
PROC V75014
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75017
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75019
  if alphachk( $, 9, "X" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "A", $ ) & alphsize > 1 then
    errmsg( 09999 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if pos( "A", $ ) then
    skip to V75021;
  endif;
  
PROC V75020
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V75021
  if $ <> 1 then
    skip to V75024;
  endif;
  
PROC V75021A
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75022
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V75023
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V75024
  if $ <> 1 then
    skip to V75026;
  endif;
PROC V75024A
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75025
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V75026
  if $ <> 1 then 
    skip to V75027;
  endif;
PROC V75026A
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75027
  if $ = 1 then 
    skip to V75028;
  endif;
PROC V75027B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75027C
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75028
  if $ <> 1 then 
    skip to V75030;
  endif;
PROC V75029
  if alphachk( $, 6, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;

  
PROC V75030
  if $ <> 1 then 
    skip to V75032H;
  endif;
  
PROC V75031
  if alphachk( $, 7, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75033
  if $ = 1 then
    skip to V75034;
  endif;
PROC V75033A
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75033B
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V75034
  if $ <> 1 then
    skip to V75035;
  endif;
PROC V75034A
  if $ <> 1 then
    skip to V75035;
  endif;
PROC V75034B
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75037U
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75038U
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75039U
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75040
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V75042
preproc
  if pos( "D", V75040 ) then
    $ = 1;
  else
    $ = 2;
  endif;
postproc
  if $ <> 1 then
    skip to V75045;
  endif;
PROC V75043
  if alphachk( $, 6, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75044
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75046
  if alphachk( $, 8, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75047
  if alphachk( $, 4, "" ) then
    errmsg( 09998 );
    reenter
  endif;
PROC V75050
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V75051H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V75051M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D75051 = sysdate( "dd" );
    M75051 = sysdate( "mm" );
    Y75051 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V75000D, V75052 );
    V75053 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
  
PROC MOD_780_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD780 | xfrom = 2 then
		advance;
	else
		skip MOD_791_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	SS_780 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V78000H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V78000M
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D78000 = sysdate( "dd" );
    M78000 = sysdate( "mm" );
    Y78000 = sysdate( "YYYY" );
  endif;
  
PROC V78000C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
   {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate fish, uncomment where indicated }
    if i in VXXXA,VXXXB,VXXXC,VXXXD then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
   { TO DO!! }}
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivate groundnut crop, uncomment where indicated }
  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (M1_LINE(i) in V228A,V228B,V228C,V228D);
    if nextmem = V78000 then
      break
    endif;
  enddo;
  if $ <> i then 
    errmsg( 00700, $, strip(V101($)), i, strip(V101(i)));
    reenter;
  endif; 
 
  name = strip(V101($));  
  { TO DO!! }}
  name = strip(V101($)); 
PROC V78000D
onfocus
  name = strip(V101(V78000C));  

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.80", V101(V78000C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.80", strip(V101(V78000C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V78000C) = 1;
  else
	skip V78028H;
  endif;
PROC V78000E
{ !! TO DO - add code to refer to fish ponds }
PROC V78002A
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if $ in 1,2,5,6 then
    skip to V78003;
  endif;
PROC V78003
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78004
  if $ <> 1 then
    skip to V78006;
  endif;
PROC V78006
  if $ <> 1 then
    skip to V78009;
  endif;
PROC V78007
  if alphachk( $, 2, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78009
  if alphachk( $, 6, "XY" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  endif;
  
PROC V78010A
  if $ <> 1 then
    skip to V78011;
  endif;
PROC V78010B
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78011A
  if $ <> 1 then
    skip to V78012;
  endif;
PROC V78011B
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78012
  if $ <> 1 then
    skip to V78013;
  endif;
PROC V78012A
  if alphachk( $, 4, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78013
  if $ <> 1 then 
    skip to V78014;
  endif;
PROC V78013A
  if alphachk( $, 5, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78015
  if $ <> 1 then
    skip to V78017;
  endif;
PROC V78016X
  if $ = 1 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78017
  if $ <> 1 then
    skip to V78018A;
  endif;
PROC V78017A
    
PROC V78018B
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  if $ <> 3 then
    skip to V78019A;
  endif;
PROC V78019A
  if $ = 0 then
    skip to V78019C;
  endif;
PROC V78019BU
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V78019C
  if $ = 0 then
    skip to V78020;
  endif;
  
PROC V78019DU
  if $ = 6 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V78020
  if $ = 2 then
    skip to V78022;
  endif;
  
PROC V78021
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V78022
preproc
  if V78020 in 2,3 then
    $ = 1;
  else
    $ = 2;
  endif;  
postproc
  if $ <> 1 then
    skip to V78023A;
  endif;
  
PROC V78023
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
  
PROC V78023A
  if alphachk( $, 2, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78023B
  if alphachk( $, 3, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78025
  if $ <> 1 then
    skip to V78026;
  endif;
PROC V78027
  if $ = 96 then
    getother( GetSymbol(), curocc() );
    enter FL_OTHERS
  endif;
PROC V78028H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V78028M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D78028 = sysdate( "dd" );
    M78028 = sysdate( "mm" );
    Y78028 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then
    outcome( V78000D, V78029);
    V78030 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
  
PROC MOD_791_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD791 | xfrom = 2 then
		advance;
	else
		skip MOD_792_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	SS_791 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V79100A1
preproc
  xfarmer   = count( MOD_1 where VFARMER <> 0 );
  do i = 1 while i <= maxfarmer
    if i <= xfarmer then
      V79100A1(i) = i;
    else
      V79100A1(i) = notappl;
    endif;
  enddo;
  if curocc() > xfarmer then   { to run in-Batch }
    if !count( MOD_791 where !V79100X in 3,notappl ) & xfrom <> 2 then
      V79111 = 1;
      V79112 = xintnum;
      SS_791 = "DONE";
    endif;
    endsect;
  endif;
  
PROC V79100AH
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V79100AM
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D79100 = sysdate( "dd" );
    M79100 = sysdate( "mm" );
    Y79100 = sysdate( "YYYY" );
  endif;
  
PROC V79100C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if !VFARMER(i) in 0,notappl then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

postproc

  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl);
    if nextmem = V79100A1 then
      break
    endif;
  enddo;
    if $ <> i then 
      errmsg( 00400, $, strip(V101($)), i, strip(V101(i)));
      reenter;
    endif; 

  { Check line number of household respondent in range }
  if !$ in 1:roster then
    errmsg(00017, "V79100C", $, roster);
    reenter
  { and then confirm they gave me a person who cultivated a crop }  
  elseif !$ in V235A,V235B,V235C,V235D,V237A,V237B,V237C,V237D,V239A,V239B,V239C,V239D then
    errmsg(00156);
    reenter;
  endif;

  name = strip(V101($));  

PROC V79100X
onfocus
  name = V101(V79100C);
  if !endinginterview then
	if visualvalue($) <> notappl then
		if visualvalue($) = 1 then
			advance V79100A2;
		endif;
	endif;
  else
	if visualvalue($) = 1 then
		advance;
	else
		endsect; 
	endif;
  endif;

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.91", V101(V79100C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.91", strip(V101(V79100C)) ); {+FR}}
  endif; 
  if !endinginterview then
	V79111 = $;
	if $ = 96 then
		getother( GetSymbol(), curocc() );
		enter FL_OTHERS;
	endif;
    if V79000X(V79100A1) <> 1 then 
      errmsg( 00704 );
      reenter;
    endif;
	if $ = 1 then
	  vconsent(V79100C) = 1;
	endif;
	if $ > 1 then
	  skip to V79110H;
	endif;
  endif;



PROC V79101
  if $ = 1 then
    skip to V79103;
  endif
  
PROC V79102
  if $ <> 1 then
    skip to V79105;
  endif;
  
PROC V79103
  if alphachk( $, 12, "XY" ) then
    errmsg( 09998 );
    reenter
  { ensure that if given, "DK" is the only response }
  elseif pos( "Y", $ ) & alphsize > 1 then
    errmsg( 09996 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), V79100A1*10+V79100A2 );
    enter FL_OTHERS
  endif;

PROC V79104
  if alphachk( $, 6, "X" ) then
    errmsg( 09998 );
    reenter
  { Get other answer }
  elseif pos( "X", $ ) then
    getother( GetSymbol(), V79100A1*10+V79100A2 );
    enter FL_OTHERS
  endif;

PROC V79105
{ DHS barcode checking - if applicable }
  x = BarCodeError( $ );
  if x = 1 then
    { missing should be one "?" in first position }
    errmsg( 00750, $ );
    reenter;
  elseif x = 2 then
    { sequence of characters incorrect }
    errmsg( 00751, $ );
    reenter
  elseif x = 3 then
    { check digit incorrect }
    errmsg( 00752, $ );
    reenter
  endif;

PROC V79106U
  if $ = 6 then
    getother( GetSymbol(), V79100A1*10+V79100A2 );
    enter FL_OTHERS
  endif;

PROC V79108A
preproc
  if !V79100C in V235A,V235B,V235C,V235D then
    $ = 0;
    noinput;
  endif;
 
postproc    
  if $ in 1:9 | $%5 <> 0 then
    errmsg( 00706, $, "VCC1" );
  endif;
  if !V79100C in V235A,V235B,V235C,V235D & $ > 0 then
    errmsg( 00707, "VCC1" );
    reenter;
  endif;
  if V79100A2 = 1 then
    if ( !pos("A",V79000F1(V79100A1)) & $ > 0 ) | ( pos("A",V79000F1(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 2 then   
    if ( !pos("A",V79000F2(V79100A1)) & $ > 0 ) | ( pos("A",V79000F2(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 3 then   
    if ( !pos("A",V79000F3(V79100A1)) & $ > 0 ) | ( pos("A",V79000F3(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 4 then   
    if ( !pos("A",V79000F4(V79100A1)) & $ > 0 ) | ( pos("A",V79000F4(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 5 then   
    if ( !pos("A",V79000F5(V79100A1)) & $ > 0 ) | ( pos("A",V79000F5(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 6 then   
    if ( !pos("A",V79000F6(V79100A1)) & $ > 0 ) | ( pos("A",V79000F6(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 7 then   
    if ( !pos("A",V79000F7(V79100A1)) & $ > 0 ) | ( pos("A",V79000F7(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 8 then   
    if ( !pos("A",V79000F8(V79100A1)) & $ > 0 ) | ( pos("A",V79000F8(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC1", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  endif;  
  
PROC V79108B
preproc
  if !V79100C in V237A,V237B,V237C,V237D & $ <> 0 then
    $ = 0;
    noinput;
  endif;
postproc  
  if !V79100C in V237A,V237B,V237C,V237D & $ <> 0 then
    errmsg( 00707, "VCC2" );
    reenter;
  endif;
  if $ in 1:9 | $%5 <> 0 then
    errmsg( 00706, $, "VCC2" );
  endif;

  if V79100A2 = 1 then
    if ( !pos("B",V79000F1(V79100A1)) & $ > 0 ) | ( pos("B",V79000F1(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 2 then   
    if ( !pos("B",V79000F2(V79100A1)) & $ > 0 ) | ( pos("B",V79000F2(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 3 then   
    if ( !pos("B",V79000F3(V79100A1)) & $ > 0 ) | ( pos("B",V79000F3(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 4 then   
    if ( !pos("B",V79000F4(V79100A1)) & $ > 0 ) | ( pos("B",V79000F4(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 5 then   
    if ( !pos("B",V79000F5(V79100A1)) & $ > 0 ) | ( pos("B",V79000F5(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 6 then   
    if ( !pos("B",V79000F6(V79100A1)) & $ > 0 ) | ( pos("B",V79000F6(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 7 then   
    if ( !pos("B",V79000F7(V79100A1)) & $ > 0 ) | ( pos("B",V79000F7(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 8 then   
    if ( !pos("B",V79000F8(V79100A1)) & $ > 0 ) | ( pos("B",V79000F8(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC2", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  endif;  
  

PROC V79108C
preproc
  if !V79100C in V239A,V239B,V239C,V239D & $ <> 0 then
    $ = 0;
    noinput;
  endif;
  
postproc  
  if $ in 1:9 | $%5 <> 0 then
    errmsg( 00706, $, "VCC3" );
  endif;
  if !V79100C in V239A,V239B,V239C,V239D & $ <> 0 then
    errmsg( 00707, "VCC3" );
    reenter;
  endif;

  if V79100A2 = 1 then
    if ( !pos("C",V79000F1(V79100A1)) & $ > 0 ) | ( pos("C",V79000F1(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 2 then   
    if ( !pos("C",V79000F2(V79100A1)) & $ > 0 ) | ( pos("C",V79000F2(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 3 then   
    if ( !pos("C",V79000F3(V79100A1)) & $ > 0 ) | ( pos("C",V79000F3(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 4 then   
    if ( !pos("C",V79000F4(V79100A1)) & $ > 0 ) | ( pos("C",V79000F4(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 5 then   
    if ( !pos("C",V79000F5(V79100A1)) & $ > 0 ) | ( pos("C",V79000F5(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 6 then   
    if ( !pos("C",V79000F6(V79100A1)) & $ > 0 ) | ( pos("C",V79000F6(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 7 then   
    if ( !pos("C",V79000F7(V79100A1)) & $ > 0 ) | ( pos("C",V79000F7(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  elseif V79100A2 = 8 then   
    if ( !pos("C",V79000F8(V79100A1)) & $ > 0 ) | ( pos("C",V79000F8(V79100A1)) & $ = 0 ) then
      errmsg( 00709, "VCC3", V79100A2, $, V79100A2, V79000F1(V79100A1) );
      reenter;
    endif;
  endif;  
  
  if NAtoZero(V79108A) + NAtoZero(V79108B) + NAtoZero($) > 100 then
    errmsg( 00701 );
    reenter V79108A;
  endif;
  
PROC V79100A2
preproc 
  xplots = V79000E(V79100A1);
  do i = 1 while i <= maxplots 
    if i <= xplots then
      V79100A2(V79100A1,i) = i;
    else
      V79100A2(V79100A1,i) = notappl;
    endif;
  enddo;
  if curocc() > xplots then   { to run in-Batch }
    endgroup
  endif;
  
PROC V79109
preproc
  if curocc() < xplots then
    $ = 1;
  else 
    $ = 2;
  endif;
postproc
  if $ = 2 then
    endgroup;
  endif;  

PROC V79110H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V79110M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D79110 = sysdate( "dd" );
    M79110 = sysdate( "mm" );
    Y79110 = sysdate( "YYYY" );
  endif;
  
  savepartial();
  
postproc
  if xfrom <> 2 then 
	outcome( V79100X, V79111 );
    V79112 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
PROC MOD_792_FORM
preproc
  if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD792 | xfrom = 2 then
		advance;
	else
		skip MOD_81A_FORM; 
	endif;	
  endif;

postproc
if !endinginterview then
	SS_792 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V79200A1
preproc
  xfarmer   = count( MOD_1 where VFARMER <> 0 );
  do i = 1 while i <= maxfarmer
    if i <= xfarmer then
      V79200A1(i) = i;
    else
      V79200A1(i) = notappl;
    endif;
  enddo;
  if curocc(V79200A1) > xfarmer then   { to run in-Batch }
    if !count( MOD_792 where !V79200X in 3,notappl ) & xfrom <> 2 then
      V79206 = 1;
      V79207 = xintnum;
      SS_792 = "DONE";
    endif;
    endsect;
  endif;
  
PROC V79200AH
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V79200AM
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D79200 = sysdate( "dd" );
    M79200 = sysdate( "mm" );
    Y79200 = sysdate( "YYYY" );
  endif;
  
PROC V79200C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
    if !VFARMER(i) in 0,notappl then
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );

postproc

  nextmem = 0;
  do i = 1 while i <= roster
    nextmem = nextmem + (!VFARMER(i) in 0,notappl);
    if nextmem = V79200A1 then
      break
    endif;
  enddo;
    if $ <> i then 
      errmsg( 00400, $, strip(V101($)), i, strip(V101(i)));
      reenter;
    endif; 

  { Check line number of household respondent in range }
  if !$ in 1:roster then
    errmsg (00017, "V79200C", $, roster);
    reenter
  { and then confirm they gave me a person who cultivated a crop }  
  elseif !$ in V235A,V235B,V235C,V235D,V237A,V237B,V237C,V237D,V239A,V239B,V239C,V239D then
    errmsg (00156);
    reenter;
  endif;

  name = strip(V101($));  

PROC V79200X
onfocus
  name = V101(V79200C);
  if !endinginterview then
	if visualvalue($) <> notappl then
		if visualvalue($) = 1 then
			advance V79200A2;
		endif;
	endif;
  else
	if visualvalue($) = 1 then
		advance;
	else
		endsect; 
	endif;
  endif;

postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent in %s was recorded as not available (%s) - revisit when available", "Module 7.92", V101(V79200C)); {+ENG}
    {{FR+}errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 7.92", strip(V101(V79200C)) ); {+FR}}
  endif; 
  if !endinginterview then
	V79206 = $;
	if $ = 96 then
		getother( GetSymbol(), curocc() );
		enter FL_OTHERS;
	endif;

	if $ = 1 then
		vconsent(V79200C) = 1;
	endif;
	if $ > 1 then
		skip to V79205H;
	endif;
  endif;

PROC V79200A2
preproc  
  do i = 1 while i <= 3 
    V79200A2(V79200A1,i) = i;
  enddo;
  if curocc() > 3 then   { to run in-Batch }
    endgroup
  endif; 
    
PROC V79200D
preproc
  $ = V79200A2;

postproc    
  vcc = getlabel(V79200D,$);  

  if $ = 1 & !pos("A",V79000D(V79200A1)) then
    skip to V79200A2(V79200A1,curocc()+1);
  endif;
  if $ = 2 & !pos("B",V79000D(V79200A1)) then
    skip to V79200A2(V79200A1,curocc()+1);
  endif;
  if $ = 3 & !pos("C",V79000D(V79200A1)) then
    endgroup;
   endif;


PROC V79201U
  if $ = 6 then
    getother( GetSymbol(), V79200A1*10+V79200A2 );
    enter FL_OTHERS
  endif;
PROC V79202U
  if $ = 6 then
    getother( GetSymbol(), V79200A1*10+V79200A2 );
    enter FL_OTHERS
  endif;
PROC V79203
  if $ = 6 then
    getother( GetSymbol(), V79200A1*10+V79200A2 );
    enter FL_OTHERS
  endif;
PROC V79204U
  if $ = 6 then
    getother( GetSymbol(), V79200A1*10+V79200A2 );
    enter FL_OTHERS
  endif;
PROC V79205H
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V79205M
preproc
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
  endif;
  
postproc
  if xfrom <> 2 then
    outcome( V79200X, V79206 );
    V79207 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
    
PROC MOD_796_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD796 | xfrom = 2 then
		advance;
	else
		skip MOD_81A_FORM; { TO DO !! skip to next applicable module }
	endif;	
endif;

postproc
if !endinginterview then
	SS_796 = "DONE";
	reenter FLOW_CONTROL;
endif;

PROC V79602
preproc
  xcrop   = ( !V235A in 0,notappl ) + ( !V235B in 0,notappl ) + ( !V235C in 0,notappl ) + ( !V235D in 0,notappl );
  do i = 1 while i <= maxcrop
    if i <= xcrop then
      V7100(i) = i;
    else
      V7100(i) = notappl;
    endif;
  enddo;

  if curocc() > xcrop then   { to run in-Batch }
    V79606 = 1;
    V79607 = xintnum;
    ss_796 = "DONE";
    endsect
  endif;
PROC V79601
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster 
   {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivated fish, uncomment where indicated }
    if i in VXXXA,VXXXB,VXXXC,VXXXD then 
      codes(j)  = i;
      labels(j) = V101(i);
      j = j + 1;
    endif; 
   { TO DO!! }}
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  {{ TO DO!!} { TO DO!! - insert variables from Module 2 that list household members who cultivated fish, uncomment where indicated }
  if V7500 = 1 & $ <> VXXXA then 
    errmsg( 00700, $, strip(V101($)), VXXXA, strip(V101(VXXXA)) );
    reenter;
  elseif V7500 = 2 & $ <> VXXXB then
    errmsg( 00700, $, strip(V101($)), VXXXB, strip(V101(VXXXB)) );
    reenter;
  elseif V7500 = 3 & $ <> VXXXC then
    errmsg( 00700, $, strip(V101($)), VXXXC, strip(V101(VXXXC)) );
    reenter;
  elseif V7500 = 4 & $ <> VXXXD then
    errmsg( 00700, $, strip(V101($)), VXXXD, strip(V101(VXXXD)) );
    reenter;
  endif;  
  { TO DO!! }}
  name = strip(V101($)); 
PROC V79603H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V79603M
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
  endif;
  
PROC V79605H
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V79605M
preproc
  set attributes ($) protect; 
  if visualvalue( $(curocc()) ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
  endif;
  
postproc
  if xfrom <> 2 then 
    V79606 = 1; 
    V79607 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;
  
  
  
  
  
  
  
PROC MOD_81A_FORM
preproc
if endinginterview then
// add control to advance or skip next module depending on the module was collected by this interviewer
	if xIntNum = H_MOD8 | xfrom = 2 then
		advance;
	else
		skip to MOD_ENDINTERVIEW;
	endif;	
endif;

PROC V8100H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V8100M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8100 = sysdate( "dd" );
    M8100 = sysdate( "mm" );
    Y8100 = sysdate( "YYYY" );
  endif;

PROC V8100C
onfocus
  clean_labels();
  j = 0;
  do i = 1 while i <= roster
	if V104(i) >= minageelig then			
	  codes(j)  = i;
   	  labels(j) = V101(i);
      inc(j);
    endif;
  enddo;
  SetValueSet( @GetSymbol(), codes, labels );
postproc
  name = strip(V101($));  
PROC V8100D
onfocus
  name = strip(V101(V8100C));  
postproc
  if endinginterview & $ = 3 then
    {ENG+}errmsg("Respondent to %s was recorded as not available (%s) - revisit when available", "Module 8", V101(V8100C)); {+ENG}
    {{FR+}  errmsg("Le répondant %s a été enregistré comme pas disponible (%s) - revisiter lorsque disponible", "Module 8", strip(V101(V8100C)) ); {+FR}}
  endif; 
  if $ = 1 then
	vconsent(V8100C) = 1;
  else
	skip V8708H;
  endif;
  
PROC V8101
preproc
  $ = curocc() + 8000;
  
PROC V8102
onfocus
  name = strip(getlabel(V8101,V8101));
  name2= edit("9999",V8101);
  if V8101 in 8018:8020,8030:8035,8046:8050,8062:8068,8084:8088,8099:8108,8118:8123,8128:8133,8147:8151,8161:8166,8178:8186 then
	if V8102(curocc()-1) = 2 then
	  $ = 2;
	  noinput; 
	endif;
  endif;
postproc
  if $ in 2,8 then
	skip next V8101;
  endif;
  if V8101 in 8017:8020,8029:8035,8045:8050,8061:8068,8083:8088,8098:8108,8117:8123,8127:8133,8146:8151,8160:8166,8177:8186 then
	getother( GetSymbol(), V8101(curocc()) );
	enter FL_OTHERS
  endif;


PROC V8103B
onfocus
  name1 = strip(edit("ZZZZZ9",V8103A));
postproc
  if $ = 96 then
	getother( GetSymbol(), V8101 );
	enter FL_OTHERS
  endif;
  
PROC V8104A
postproc
  if $ = 0 then
	skip to V8105;
  endif;
PROC V8104B
onfocus
  name1 = strip(edit("ZZZZZ9",V8104A));
postproc
  if $ = 96 then
	getother( GetSymbol(), V8101 );
	enter FL_OTHERS
  endif;
  
PROC V8105
preproc
  if V8104A = 0 then
	$ = 0;
	noinput;
  endif;
postproc
  if V8101 in 8167:8186 then
    skip to next V8101;
  endif;
PROC V8106A
preproc
  if V8103A = V8104A & V8103B = V8103B then 
    skip to next V8101;
  endif;
postproc
  if $ = 0 then
	skip V8107A;
  endif;
  
PROC V8106B
onfocus
  name1 = strip(edit("ZZZZZ9",V8106A));
postproc
  if $ = 96 then
	getother( GetSymbol(), V8101 );
	enter FL_OTHERS
  endif;

PROC V8107A
onfocus
  name = strip(getlabel(V8101,V8101));
  name2= edit("9999",V8101);
postproc
  if $ = 0 then 
	skip next V8101;
  endif;
  
PROC V8107B
onfocus
  name1 = strip(edit("ZZZZZ9",V8107A));
postproc
  if $ = 96 then
	getother( GetSymbol(), V8101 );
	enter FL_OTHERS
  endif;
PROC V8107C
onfocus
  name = strip(getlabel(V8101,V8101));
  name2= edit("9999",V8101);
  
PROC V8108
postproc
  if $ in 2,8 then
	skip to V8112;
  endif;
  
PROC V8112
postproc
  if $ = 2 then
	skip V8116H;
  endif;

PROC V8112A
postproc
  if $ in 2,8 then
	skip V8114;
  endif;

PROC V8114
postproc
  if $ in 2,8 then
	skip to V8116H;
  endif;
  
PROC V8116H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V8116M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8116 = sysdate( "dd" );
    M8116 = sysdate( "mm" );
    Y8116 = sysdate( "YYYY" );
  endif;
postproc
  if demode() = add then
    savepartial();
  endif;

PROC V8200H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8200M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8200 = sysdate( "dd" );
    M8200 = sysdate( "mm" );
    Y8200 = sysdate( "YYYY" );
  endif;
PROC V8201
preproc
  $ = curocc() + 8186;

PROC V8202
onfocus
  name = strip(getlabel(V8201,V8201));
  if V8201 > 8196  then { GD - double check number and apply this logic to the other submodules! }
	if V8202(curocc()-1) = 2 then
	  $ = 2;
	  noinput; 
	endif;
  endif;
postproc
{ GD - drop the endsect logic in the other submodules! }
  if V8201 >= 8196 then
	getother( GetSymbol(), V8201 );
	enter FL_OTHERS
  endif;
  if $ in 2,8 then
	skip next V8201;
  endif;

PROC V8203
onfocus
  name = strip(getlabel(V8201,V8201));
  name2= edit("9999",V8201);

PROC V8204H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8204M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8204 = sysdate( "dd" );
    M8204 = sysdate( "mm" );
    Y8204 = sysdate( "YYYY" );
  endif;

postproc
  if demode() = add then
    savepartial();
  endif;

PROC V8300H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8300M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8300 = sysdate( "dd" );
    M8300 = sysdate( "mm" );
    Y8300 = sysdate( "YYYY" );
  endif;
PROC V8301
preproc
$ = curocc() + 8206;
PROC V8302
onfocus
  name = strip(getlabel(V8301,V8301));
  name2= edit("9999",V8301);
postproc
  if V8301 >= 8232 & $ in 2,8 then
	endsect;
  endif;
  if V8301 >= 8232 then
	getother( GetSymbol(), V8301 );
	enter FL_OTHERS
  endif;
  if $ in 2,8 then
	skip next V8301;
  endif;
PROC V8303
onfocus
  name = strip(getlabel(V8301,V8301));
  name2= edit("9999",V8301);
PROC V8304H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8304M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8304 = sysdate( "dd" );
    M8304 = sysdate( "mm" );
    Y8304 = sysdate( "YYYY" );
  endif;

postproc
  if demode() = add then
    savepartial();
  endif;

PROC V8400H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8400M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8400 = sysdate( "dd" );
    M8400 = sysdate( "mm" );
    Y8400 = sysdate( "YYYY" );
  endif;
PROC V8401
preproc
  $ = curocc() + 8236;

PROC V8402
onfocus
  name = strip(getlabel(V8401,V8401));
  name2= edit("9999",V8401);
postproc
  if V8401 >= 8276 & $ in 2,8 then
	endsect;
  endif;
  if V8401 >= 8276 then
	getother( GetSymbol(), V8401 );
	enter FL_OTHERS
  endif;
  if $ in 2,8 then
	skip next V8401;
  endif;
PROC V8403
onfocus
  name = strip(getlabel(V8401,V8401));
  name2= edit("9999",V8401);
PROC V8404H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8404M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8404 = sysdate( "dd" );
    M8404 = sysdate( "mm" );
    Y8404 = sysdate( "YYYY" );
  endif;

postproc
  if demode() = add then
    savepartial();
  endif;

PROC V8500AH
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8500AM
preproc
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8500A = sysdate( "dd" );
    M8500A = sysdate( "mm" );
    Y8500A = sysdate( "YYYY" );
  endif;
PROC V8501
preproc
  $ = curocc() + 8286;

PROC V8502
onfocus
  name = strip(getlabel(V8501,V8501));
  name2= edit("9999",V8501);
postproc
  if $ in 2,8 then
	skip next V8501;
  endif;
  if V8501 = 8318 then
	getother( GetSymbol(), V8501 );
	enter FL_OTHERS
  endif;
  
PROC V8503
onfocus
  name = strip(getlabel(V8501,V8501));
  name2= edit("9999",V8501);
PROC V8504H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V8504M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8504 = sysdate( "dd" );
    M8504 = sysdate( "mm" );
    Y8504 = sysdate( "YYYY" );
  endif;

postproc
  if demode() = add then
    savepartial();
  endif;

PROC V8500BH
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;

PROC V8500BM
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8500B = sysdate( "dd" );
    M8500B = sysdate( "mm" );
    Y8500B = sysdate( "YYYY" );
  endif;

PROC V8504
preproc
  $ = curocc() + 8318;

PROC V8505
onfocus
  name = strip(getlabel(V8504,V8504));
  name2= edit("9999",V8504);
postproc
  if $ = 2 then
	skip to next V8504;
  endif;
  
PROC V8506
  if $ = 2 then
	skip V8508;
  endif;

PROC V8507
onfocus
  name = strip(getlabel(V8504,V8504));
  name2= edit("9999",V8504);
postproc
  skip next V8504;

PROC V8508
onfocus
  name = strip(getlabel(V8504,V8504));
  name2= edit("9999",V8504);

PROC V8509H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V8509M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8509 = sysdate( "dd" );
    M8509 = sysdate( "mm" );
    Y8509 = sysdate( "YYYY" );
  endif;

postproc
  if demode() = add then
    savepartial();
  endif;

PROC V8600H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set hour if not already entered }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
PROC V8600M
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { only set minute if not already entered }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8600 = sysdate( "dd" );
    M8600 = sysdate( "mm" );
    Y8600 = sysdate( "YYYY" );
  endif;
PROC V8601
  if $ in 3,4 then
	skip V8604A;
  elseif $ = 5 then
	skip V8605A;
  endif;

PROC V8603
  if ($ > 100) & $ < 900 & !endinginterview then
    {ENG+}  errmsg(	00801)	select("Reenter", $, "Continue", continue); {+ENG}
	{{FR+}	errmsg(	00801)	select("Saisir à nouveau", $, "Continuer", continue); {+FR}} 
  endif;
  skip to V8606;

PROC V8604A
postproc
  if $ = 999999998 then     // dont know
	skip V8609;
  endif;

PROC V8604B
  skip to V8609;

PROC V8605A
  if $ = 999999998 then     // dont know
	skip to V8609;
  endif;

PROC V8605B
  skip V8609;
  
PROC V8606
  if $ = 2 then
	skip to V8609;
  endif;
PROC MOD_87_FORM
postproc
  if !endinginterview then
	SS_8 = "DONE";
	reenter FLOW_CONTROL;
  endif;

PROC V8701
preproc
  $ = curocc() + 8321;

PROC V8702
onfocus
  name = strip(getlabel(V8701,V8701));
  name2= edit("9999",V8701);
postproc
  if $ in 2,8 then
	skip next V8701;
  endif;

PROC V8703
  if ($ > 25) & $ < 900 & !endinginterview then
	{ENG+} errmsg(	00802)	select("Reenter", $, "Continue", continue)	{+ENG}
	{{FR+} errmsg(	00802)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC V8704
  if ($ > 100) & !endinginterview then
	{ENG+} errmsg(	00803)	select("Reenter", $, "Continue", continue)	{+ENG}
	{{FR+} errmsg(	00803)	select("Saisir à nouveau", $, "Continuer", continue)	{+FR}}
  endif;

PROC V8706
onfocus
  name = strip(getlabel(V8701,V8701));
  name2= edit("9999",V8701);
postproc
  if $ in 2,8 then
	skip to next V8701;
  endif;
  
PROC V8707
onfocus
  name = strip(getlabel(V8701,V8701));
  name2= edit("9999",V8701);
PROC V8708H
preproc
  set attributes ($) protect; 
  if visualvalue( $ ) = notappl then  { if the hour was already entered, leave it }
    time = systime();
    $ = int( time/10000 );  { gets the hour }
  endif;
  
PROC V8708M
preproc
  if visualvalue( $ ) = notappl then  { if the minute wasn't entered, do so now }
    time = systime();
    $ = int( time/100 ) % 100;  { gets the minute }
    D8708 = sysdate( "dd" );
    M8708 = sysdate( "mm" );
    Y8708 = sysdate( "YYYY" );
  endif;

postproc
  if xfrom <> 2 then 
    outcome( V8100D, V8709 );
    V8710 = xintnum;
  endif;
  if demode() = add then
    savepartial();
  endif;

PROC MOD_ENDINTERVIEW
  AHRESULT = 1;
  
PROC END_VAR
{ this var is necessary only when module 7 has to be skipped to end the interview.}

PROC OTHSEC
preproc
  if endinginterview then
	endsect;
  endif;

postproc
  { Check text of response has changed and if so write it out }
  if compare(OTHRESP,wothresp) <> 0 then
    writecase(OTHERS);
  endif;

PROC GPS_LEVEL1
preproc
  if endinginterview then
	endsect;
  endif;


postproc
  { Check text of response has changed and if so write it out }
  if AHLATITUDE <> lati | AHLONGITUDE <> longi then
    writecase(HH_GPS);
  endif;
